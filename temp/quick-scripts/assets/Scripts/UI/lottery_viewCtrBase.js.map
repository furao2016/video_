{"version":3,"sources":["lottery_viewCtrBase.js"],"names":["require","moduleEnum","ViewCtrBase","ModuleStatus","cc","Enum","none","init","close","open","moduleName","curModuleStatus","openStatus","None","viewNode","Destroy","AddEvent","OnInit","ViewCtrManager","getInstance","AddViewCtr","OpenViewCtr","ViewComponentManager","Open","script","node","OnOpen","CloseViewCtr","Close","OnClose","RemoveEvent","RemoveViewCtr","OnDestroy","data","_data","_OnMessageHandle","GlobalMsg","Send","active","_date","SingletonBase"],"mappings":"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","file":"lottery_viewCtrBase.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\UI","sourcesContent":["import SingletonBase from \"../Singleton/SingletonBase\";\r\nimport GlobalMsg from \"../Core/Event/lottery_GlobalMsg\";\r\nimport ViewComponentManager from \"../Manager/lottery_viewComponentManager\";\r\nimport ViewCtrManager from \"../Manager/lottery_viewCtrManager\";\r\n\r\nconst { moduleEnum } = require(\"ProjectEnum\")\r\n\r\nexport default class ViewCtrBase extends SingletonBase {\r\n\r\n    ModuleStatus = cc.Enum({\r\n        none: 0,\r\n        init: 1,\r\n        close: 2,\r\n        open: 3\r\n    })\r\n\r\n    moduleName = \"\"\r\n    curModuleStatus = 0\r\n    openStatus = moduleEnum.None\r\n    viewNode = \"\"\r\n\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    /**\r\n     * 创建实例的静态回调方法。由子类重写，并返回具体类型的对象\r\n     */\r\n    static _onNewObject() {\r\n        return new ViewCtrBase()\r\n    }\r\n    /**重写父类的销毁函数*/\r\n    _onDestroyObject() {\r\n        this.Destroy()\r\n    }\r\n    /*-----------------------------生命周期函数-------------------------------*/\r\n    Init() {\r\n        if (this.curModuleStatus >= this.ModuleStatus.init) return;\r\n        this.curModuleStatus = this.ModuleStatus.init\r\n        this.AddEvent()\r\n        this.OnInit()\r\n        ViewCtrManager.getInstance().AddViewCtr(this)\r\n    }\r\n    Open() {\r\n        if (this.curModuleStatus === this.ModuleStatus.open) return;\r\n        this.curModuleStatus = this.ModuleStatus.open\r\n        ViewCtrManager.getInstance().OpenViewCtr(this)\r\n        ViewComponentManager.getInstance().Open(this.moduleName, (script) => {\r\n            this.viewNode = script.node;\r\n            this.OnOpen()\r\n        })\r\n    }\r\n    Close() {\r\n        if (this.curModuleStatus !== this.ModuleStatus.open) return;\r\n        if (this.curModuleStatus === this.ModuleStatus.close) return;\r\n        this.curModuleStatus = this.ModuleStatus.close\r\n        ViewCtrManager.getInstance().CloseViewCtr(this)\r\n        ViewComponentManager.getInstance().Close(this.moduleName)\r\n        this.OnClose()\r\n    }\r\n    Destroy() {\r\n        if (this.curModuleStatus === this.ModuleStatus.none) return;\r\n        this.curModuleStatus = this.ModuleStatus.none\r\n        this.RemoveEvent()\r\n        ViewCtrManager.getInstance().RemoveViewCtr(this)\r\n        this.OnDestroy()\r\n    }\r\n    /**数据处理*/\r\n    OnMessageHandle(data) {\r\n        let _data = this._OnMessageHandle(data)\r\n        if (this.curModuleStatus === this.ModuleStatus.open)//只有在该模块是被打开的状态下才推送数据\r\n            GlobalMsg.getInstance().Send(this.moduleName, _data)\r\n    }\r\n    /**\r\n     * 获取view层节点\r\n     */\r\n    getViewNode() {\r\n        return this.viewNode;\r\n    }\r\n    /**\r\n     * 显示view层节点\r\n     */\r\n    showViewNode() {\r\n        this.viewNode && (this.viewNode.active = true);\r\n    }\r\n    /**\r\n     * 隐藏view层节点\r\n     */\r\n    hideViewNode() {\r\n        this.viewNode && (this.viewNode.active = false);\r\n    }\r\n    /*----------------------子类重写方法-----------------------*/\r\n    /**添加监听 */\r\n    AddEvent() {\r\n        /*\r\n        TODO:向数据层/数据控制层注册监听\r\n        */\r\n    }\r\n    /**取消监听 */\r\n    RemoveEvent() {\r\n        /*\r\n        TODO:讲注册在数据层/数据控制层的监听去掉\r\n        */\r\n    }\r\n    _OnMessageHandle(data) {\r\n        let _data = data\r\n        /**\r\n         * TODO:处理消息然后返回给OnMessageHandle 往view层发送\r\n         */\r\n        return _date\r\n    }\r\n    OnInit() { }\r\n    OnOpen() { }\r\n    OnClose() { }\r\n    OnDestroy() { }\r\n}"]}