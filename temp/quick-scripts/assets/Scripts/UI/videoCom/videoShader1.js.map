{"version":3,"sources":["videoShader1.js"],"names":["videoShader1","_currentBuffer","shaderPos","shaderIndex","gl","cc","_renderContext","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","node","program","GLProgram","sys","isNative","initWithString","default_vert","gray_frag","link","updateUniforms","initWithVertexShaderByteArray","addAttribute","macro","ATTRIBUTE_NAME_POSITION","VERTEX_ATTRIB_POSITION","ATTRIBUTE_NAME_COLOR","VERTEX_ATTRIB_COLOR","ATTRIBUTE_NAME_TEX_COORD","VERTEX_ATTRIB_TEX_COORDS","_uniforms","getUniformLocation","_programObj","setUniformLocationWith1i","setProgram","getComponent","Sprite","_sgNode","_texture1","MycreateTexture","_texture2","_texture3","size","videoSize","lumaSize","width","height","chromaSize","buffer","uint8Y","subarray","uint8Cr","uint8Cb","activeTexture","TEXTURE0","texImage2D","LUMINANCE","UNSIGNED_BYTE","glProgram_state","GLProgramState","getOrCreateWithGLProgram","setGLProgramState","setShaderProgram","children","i","length"],"mappings":"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","file":"videoShader1.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\UI\\videoCom","sourcesContent":["export default class videoShader1 {\r\n    _currentBuffer = null;\r\n    //占用纹理位置\r\n    shaderPos = [];\r\n\r\n    constructor() {\r\n        this.shaderPos = [shaderIndex++, shaderIndex++];\r\n    }\r\n    MycreateTexture() {\r\n        const gl = cc._renderContext;\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); //gl.LINEAR\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * shader\r\n     */\r\n    ShaderEffect(node) {\r\n        //GLProgram\r\n        let program = new cc.GLProgram();\r\n        if (cc.sys.isNative) {\r\n            program.initWithString(default_vert, gray_frag);\r\n            program.link();\r\n            program.updateUniforms();\r\n        } else {\r\n            program.initWithVertexShaderByteArray(default_vert, gray_frag);\r\n            program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\r\n            program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\r\n            program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\r\n            program.link();\r\n            program.updateUniforms();\r\n        }\r\n        let gl = cc._renderContext;\r\n        program._uniforms[1] = gl.getUniformLocation(program._programObj, \"YTexture\");\r\n        program._uniforms[2] = gl.getUniformLocation(program._programObj, \"CBTexture\");\r\n        program._uniforms[3] = gl.getUniformLocation(program._programObj, \"CRTexture\");\r\n        program.setUniformLocationWith1i(program._uniforms[1], 0);\r\n        program.setUniformLocationWith1i(program._uniforms[2], this.shaderPos[0]);\r\n        program.setUniformLocationWith1i(program._uniforms[3], this.shaderPos[1]);\r\n        //渲染节点\r\n        this.setProgram(node.getComponent(cc.Sprite)._sgNode, program);\r\n        //\r\n        this._texture1 = this.MycreateTexture();\r\n        this._texture2 = this.MycreateTexture();\r\n        this._texture3 = this.MycreateTexture();\r\n    }\r\n\r\n    Myrendering(size) {\r\n        var videoSize = size; //{width:864,height:480};\r\n        const lumaSize = videoSize.width * videoSize.height;\r\n        const chromaSize = lumaSize >> 2;\r\n        const buffer = this._currentBuffer;\r\n        if (buffer) {\r\n            var uint8Y = buffer.subarray(0, lumaSize),\r\n                uint8Cr = buffer.subarray(lumaSize, lumaSize + chromaSize),\r\n                uint8Cb = buffer.subarray(lumaSize + chromaSize, lumaSize + 2 *\r\n                    chromaSize);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture1);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, videoSize.width >> 1,\r\n                videoSize.height >> 1, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, uint8Y);\r\n            gl.activeTexture(gl['TEXTURE' + this.shaderPos[0]]);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture2);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, videoSize.width >> 1,\r\n                videoSize.height >> 1, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, uint8Cr);\r\n            gl.activeTexture(gl['TEXTURE' + this.shaderPos[1]]);\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture3);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, videoSize.width >> 1,\r\n                videoSize.height >> 1, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, uint8Cb);\r\n            uint8Y = null;\r\n            uint8Cr = null;\r\n            uint8Cb = null;\r\n        }\r\n    }\r\n    //现目前 没有用\r\n    setProgram(node, program) {\r\n        if (cc.sys.isNative) {\r\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\r\n            node.setGLProgramState(glProgram_state);\r\n        } else {\r\n            node.setShaderProgram(program);\r\n        }\r\n        var children = node.children;\r\n        if (!children)\r\n            return;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n            this.setProgram(children[i], program);\r\n        }\r\n    }\r\n}\r\n//存储每个shader占用的纹理位置\r\nvar shaderIndex = 1;\r\n//定点着色器\r\nvar default_vert = `\r\n    attribute vec4 a_position;\r\n    attribute vec2 a_texCoord;\r\n    attribute vec4 a_color;\r\n    varying vec2 v_texCoord;\r\n    varying lowp vec4 v_fragmentColor;\r\n    void main()\r\n    {\r\n        gl_Position = CC_PMatrix * a_position;\r\n        v_fragmentColor = a_color;\r\n        v_texCoord = a_texCoord;\r\n    }`;\r\n//片元着色器\r\nvar gray_frag = `\r\n    #ifdef GL_ES\r\n    precision mediump float;\r\n    #endif\r\n    varying vec4 v_fragmentColor;\r\n    varying vec2 v_texCoord;\r\n    uniform sampler2D YTexture;\r\n    uniform sampler2D CBTexture;\r\n    uniform sampler2D CRTexture;\r\n    const mat4 YUV2RGB = mat4(1.1643828125, 0, 1.59602734375, -.87078515625,\r\n           1.1643828125, -.39176171875, -.81296875, .52959375,\r\n           1.1643828125, 2.017234375, 0, -1.081390625,\r\n           0, 0, 0, 1);\r\n    const mat4 YUV2RGB2 = mat4(1.000000,    1.000000,    1.000000,    0.000000,\r\n        0.000000,    -0.34414,    1.177200,    0.000000,\r\n        1.402000,    -0.71414,    0.000000,    0.000000,\r\n        0.000000,    0.000000,    0.000000,    1.000000);\r\n    void main()\r\n    {\r\n        float y = texture2D(YTexture, v_texCoord).r;\r\n        float cr = texture2D(CBTexture, v_texCoord).r;\r\n        float cb = texture2D(CRTexture, v_texCoord).r;\r\n        gl_FragColor = v_fragmentColor * vec4(y, cr, cb, 1.0) *YUV2RGB ;\r\n    }`;"]}