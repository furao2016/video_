{"version":3,"sources":["videoSocketController1.js"],"names":["lottery","video","window","baccarat","state","decodeWorkerUrl","WEBSOCKET_HEADER_TYPE_VIDEO","WEBSOCKET_HEADER_TYPE_AUDIO","WEBSOCKET_HEADER_TYPE_UNDEFINED","WEBSOCKET_HEADER_TYPE_STATUS","TIME_INTERVAL","VideoSocketController","url","useWorker","webgl","self","_currentUrl","_currentFPS","VIDEO_FPS","audioPlayer","AV","Player","fromBufferSource","timerId","clearInterval","setInterval","decodeFromQueueTimer","_useWorker","undefined","USE_WORKER","_useGL","cc","_renderType","_RENDER_TYPE_WEBGL","reuseMemory","transferMemory","_lastBuffer","_lastTimestamp","_decoder","Decoder","_statistics","ebet","NetworkStatistics","_client","WebSocket","onopen","onOpenCallback","bind","onerror","onErrorCallback","onOpen","onClose","onError","_decodeVideo","_videoCache","onPictureDecoded","_packageCache","_setupWorker","event","binaryType","onmessage","onMessageCallback","onclose","onCloseCallback","log","console","currentTarget","messageData","Uint8Array","data","header","WSHeader","ts","type","intFromBytes","subarray","receiveBytes","length","newBuffer","set","pushAAC","msg","String","fromCharCode","apply","proto","prototype","recycleMemory","size","NALU","tmp","parseInt","toString","i","nalu","ForbiddenZero","RefIdc","UnitType","base","idc","idx","x","val","onRenderingBefore","dt","cache","nowTime","Date","ms","getTime","_lastTickMs","diffTime","selPkg","getDecodeH264Buffer","decode","buffer","audioPkg","getDecodeAACBuffer","asset","source","add","format","width","height","infos","worker","Worker","addEventListener","e","consoleLog","call","buf","postMessage","videoData","parInfo","offset","byteOffset","info","copyU8","parArray","reuse","H264Cache","pushH264","setUrl","close","reOpen","getUrl","clear","getState","readyState","getNetworkStatus","H264Package","timestamp","bufferSize","byteLength","keyframe","Uint16Array","comparePackages","a","b","_audioCache","receivedKeyframe","_deltaTime","h264CacheProto","lastPlayedTimestamp","sortCaches","sort","CACHE_FRAMES","SKIP_KEYFRAMES","videoCache","frame","_searchVideoKeyframe","shift","range","selIdx","splice","getPackageByTimestamp","push","packages","audioCache","skipAACBuffer","pkg"],"mappings":"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","file":"videoSocketController1.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\UI\\videoCom","sourcesContent":["/**************************************************************************\r\n * Copyright (C) 2015 ebet.com, Inc - All Rights Reserved\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n * Written by ebet.com\r\n **************************************************************************/\r\nvar lottery = {};\r\nlottery.video = {};\r\nwindow['lottery'] = lottery;\r\n(function (baccarat) {\r\n  //connection status\r\n  var state = true;\r\n  var decodeWorkerUrl = \"lib/H264Decoder.js\";\r\n  var WEBSOCKET_HEADER_TYPE_VIDEO = 0x01;\r\n  var WEBSOCKET_HEADER_TYPE_AUDIO = 0x02;\r\n  var WEBSOCKET_HEADER_TYPE_UNDEFINED = 0x00;\r\n  var WEBSOCKET_HEADER_TYPE_STATUS = 0xff;\r\n  var TIME_INTERVAL = 30;\r\n  /**\r\n   * The video WebSocket handler\r\n   * WebWorker的使用\r\n   * @constructor\r\n   */\r\n  baccarat.VideoSocketController = function (url, useWorker, webgl) {\r\n    var self = this;\r\n    this._currentUrl = url;\r\n\r\n    this._currentFPS = VIDEO_FPS;\r\n    this.audioPlayer = AV.Player.fromBufferSource();\r\n    //播放定時器\r\n    if (this.timerId) {\r\n      clearInterval(this.timerId);\r\n    }\r\n    this.timerId = setInterval(function () {\r\n      self.decodeFromQueueTimer();\r\n    }, TIME_INTERVAL);\r\n    // this.audioPlayer.play();\r\n    this._useWorker = (useWorker === undefined) ? baccarat.USE_WORKER :\r\n      useWorker;\r\n    this._useGL = (webgl === undefined) ? (cc._renderType === cc._RENDER_TYPE_WEBGL) :\r\n      webgl;\r\n    this.reuseMemory = false; //\r\n    this.transferMemory = false;\r\n    this._lastBuffer = null;\r\n    this._lastTimestamp = null;\r\n    this._decoder = new Decoder({\r\n      \"rgb\": !this._useGL,\r\n      \"reuseMemory\": this.reuseMemory\r\n    }); //for closure compiler\r\n\r\n    this._statistics = new ebet.NetworkStatistics(300 * 1000 / 8); //bit rate: 307kb\r\n\r\n    //this._client = new WebSocket(url, [\"video\", \"audio\"]);\r\n    this._client = new WebSocket(url);\r\n    this._client.onopen = onOpenCallback.bind(this);\r\n    this._client.onerror = onErrorCallback.bind(this);\r\n    this.onOpen = null;\r\n    this.onClose = null;\r\n    this.onError = null;\r\n\r\n    this._decodeVideo = null;\r\n    this._videoCache = [];\r\n    this.onPictureDecoded = null;\r\n    this._packageCache = null;\r\n    this._setupWorker();\r\n  };\r\n\r\n  // the callback of the socket\r\n  var onOpenCallback = function (event) {\r\n    // cc.log('socket open video')\r\n    this._client.binaryType = \"arraybuffer\";\r\n    this._client.onmessage = onMessageCallback.bind(this);\r\n    this._client.onclose = onCloseCallback.bind(this);\r\n\r\n    if (this.onOpen)\r\n      this.onOpen(event);\r\n  };\r\n  var onCloseCallback = function (event) {\r\n    cc.log(\"The video WebSocket connection has been closed.\");\r\n    console.log(event.currentTarget.url, this._currentUrl)\r\n    if (this.onClose)\r\n      this.onClose(event);\r\n  };\r\n  var onMessageCallback = function (event) {\r\n    var messageData = new Uint8Array(event.data);\r\n    var header = this.WSHeader(messageData);\r\n    var ts;\r\n    if (header.type !== WEBSOCKET_HEADER_TYPE_UNDEFINED) {\r\n      ts = this.intFromBytes(messageData.subarray(8, 12));\r\n      this._statistics.receiveBytes(messageData.length);\r\n      messageData = new Uint8Array(event.data, 12, messageData.length - 12);\r\n    }\r\n    // cc.log(messageData)\r\n    // cc.log(this._lastBuffer)\r\n    switch (header.type) {\r\n      case WEBSOCKET_HEADER_TYPE_VIDEO:\r\n        //使用队列方式处理\r\n        //H264\r\n        if (messageData[0] === 0 && messageData[1] === 0 && messageData[2] ===\r\n          0 && messageData[3] === 1) {\r\n          if (this._lastBuffer) {\r\n            this._decodeVideo(this._lastTimestamp, this._lastBuffer);\r\n          }\r\n          this._lastBuffer = messageData;\r\n          this._lastTimestamp = ts;\r\n        } else {\r\n          cc.log(\"receive a split data\");\r\n          var newBuffer = new Uint8Array(this._lastBuffer.length +\r\n            messageData.length);\r\n          newBuffer.set(this._lastBuffer);\r\n          newBuffer.set(messageData, this._lastBuffer.length);\r\n          this._decodeVideo(ts, newBuffer);\r\n          this._lastBuffer = null;\r\n        }\r\n        break;\r\n      case WEBSOCKET_HEADER_TYPE_AUDIO:\r\n        //if (!cc.sys.isMobile)\r\n        //    this.audioPlayer.asset.source.add(messageData);\r\n        this._packageCache.pushAAC(ts, messageData);\r\n        break;\r\n      case WEBSOCKET_HEADER_TYPE_STATUS:\r\n        var msg = String.fromCharCode.apply(String, messageData);\r\n        //this._packageCache.lastPlayedTimestamp = 0;\r\n        switch (msg) {\r\n          //reset buffer\r\n          case \"video streaming server error.\":\r\n            this._lastBuffer = false;\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  var onErrorCallback = function (event) {\r\n    cc.log(\"the video connection has an error\", event);\r\n    if (this.onError)\r\n      this.onError(event);\r\n  };\r\n\r\n  var proto = baccarat.VideoSocketController.prototype;\r\n\r\n  proto.recycleMemory = function () { };\r\n  proto.WSHeader = function (data) {\r\n    var header = {\r\n      type: WEBSOCKET_HEADER_TYPE_UNDEFINED,\r\n      size: 0\r\n    };\r\n    if (data[0] === 0x55 && data[1] === 0x47 && data[2] === 0x49) {\r\n      switch (data[3]) {\r\n        case WEBSOCKET_HEADER_TYPE_VIDEO:\r\n          header.type = WEBSOCKET_HEADER_TYPE_VIDEO;\r\n          break;\r\n        case WEBSOCKET_HEADER_TYPE_AUDIO:\r\n          header.type = WEBSOCKET_HEADER_TYPE_AUDIO;\r\n          break;\r\n        case WEBSOCKET_HEADER_TYPE_STATUS:\r\n          header.type = WEBSOCKET_HEADER_TYPE_STATUS;\r\n          break;\r\n      }\r\n      if (header.type > 0) {\r\n        header.size = this.intFromBytes(data.subarray(4, 8));\r\n      }\r\n    }\r\n    return header;\r\n  };\r\n\r\n  proto.NALU = function (header) {\r\n    /*NALU_TYPE_SLICE    = 1,     byte: 00001   //非IDR图像的编码条带\r\n      NALU_TYPE_DPA      = 2,     byte: 00010   //编码条带数据分割块A\r\n      NALU_TYPE_DPB      = 3,     byte: 00011   //编码条带数据分割块B\r\n      NALU_TYPE_DPC      = 4,     byte: 00100   //编码条带数据分割块C\r\n      NALU_TYPE_IDR      = 5,     byte: 00101   //IDR图像的编码条带\r\n      NALU_TYPE_SEI      = 6,     byte: 00110   //增强信息（SEI）\r\n      NALU_TYPE_SPS      = 7,     byte: 00111   //序列参数集（SPS）\r\n      NALU_TYPE_PPS      = 8,     byte: 01000   //图像参数集（PPS）\r\n      NALU_TYPE_AUD      = 9,     byte: 01001\r\n      NALU_TYPE_EOSEQ    = 10,    byte: 01010\r\n      NALU_TYPE_EOSTREAM = 11,    byte: 01011\r\n      NALU_TYPE_FILL     = 12,    byte: 01100\r\n      #if (MVC_EXTENSION_ENABLE)\r\n      NALU_TYPE_PREFIX   = 14,    byte: 01110\r\n      NALU_TYPE_SUB_SPS  = 15,    byte: 01111\r\n      NALU_TYPE_SLC_EXT  = 20,    byte: 10100\r\n      NALU_TYPE_VDRD     = 24     byte: 11000   */\r\n    var tmp = (parseInt(header, 16)).toString(2);\r\n    //補齊位元數到8\r\n    if (tmp.length < 8) {\r\n      for (var i = 7; i >= tmp.length - 1; i--)\r\n        tmp = \"0\" + tmp;\r\n    }\r\n    var nalu = {\r\n      ForbiddenZero: 0,\r\n      RefIdc: 0,\r\n      UnitType: 0\r\n    };\r\n    var base = [];\r\n    //轉換為整數\r\n    for (var i in tmp) {\r\n      base[i] = parseInt(tmp[i]);\r\n    }\r\n    nalu.ForbiddenZero = base[0];\r\n    var idc = (base[1] * 2 + base[2]);\r\n    nalu.RefIdc = idc;\r\n    var idx = 3;\r\n    for (var i = 4; i >= 0; i--) {\r\n      nalu.UnitType += base[idx] << i;\r\n      idx++;\r\n    }\r\n    return nalu;\r\n  };\r\n\r\n  proto.intFromBytes = function (x) {\r\n    var val = 0;\r\n    for (var i = 0; i < x.length; ++i) {\r\n      val += x[i];\r\n      if (i < x.length - 1) {\r\n        val = val << 8;\r\n      }\r\n    }\r\n    return val;\r\n  };\r\n  proto.onRenderingBefore = function (dt) {\r\n    /*var cache = this._packageCache;\r\n      var nowTime = new Date();\r\n      var ms = nowTime.getTime();\r\n      if(!this._lastTickMs){\r\n        this._lastTickMs = ms;\r\n        return;\r\n      }\r\n      var diffTime = ms - self._lastTickMs;\r\n      var selPkg = cache.getDecodeH264Buffer(diffTime);\r\n      if (selPkg) {\r\n        this._decoder.decode(selPkg.buffer);\r\n        // if (!cc.sys.isMobile) {\r\n          var audioPkg = cache.getDecodeAACBuffer();\r\n          if (audioPkg)\r\n            this.audioPlayer.asset.source.add(audioPkg.buffer);\r\n        // }\r\n  \r\n      }*/\r\n  };\r\n\r\n  proto.decodeFromQueueTimer = function () {\r\n    var cache = this._packageCache;\r\n    var nowTime = new Date();\r\n    var ms = nowTime.getTime();\r\n    if (!this._lastTickMs) {\r\n      this._lastTickMs = ms;\r\n      return;\r\n    }\r\n    var diffTime = ms - this._lastTickMs;\r\n    this._lastTickMs = ms;\r\n    var selPkg = cache.getDecodeH264Buffer(diffTime);\r\n    if (selPkg) {\r\n      this._decoder.decode(selPkg.buffer);\r\n      var audioPkg = cache.getDecodeAACBuffer();\r\n      if (audioPkg)\r\n        this.audioPlayer.asset.source.add(audioPkg.buffer);\r\n    }\r\n  };\r\n\r\n  proto._setupWorker = function () {\r\n    var self = this;\r\n    var onPictureDecoded = function (buffer, format, width, height, infos) {\r\n      if (self.onPictureDecoded)\r\n        self.onPictureDecoded(buffer, format, width, height, infos);\r\n    };\r\n\r\n    if (this._useWorker) {\r\n      var worker = this.worker = new Worker(decodeWorkerUrl);\r\n      worker.addEventListener(\"message\", function (e) {\r\n        cc.log(e)\r\n        var data = e.data;\r\n        if (data.consoleLog) {\r\n          cc.log(data.consoleLog);\r\n          return;\r\n        }\r\n\r\n        onPictureDecoded.call(self, new Uint8Array(data.buf, 0, data.length), 0, data.width,\r\n          data.height, data.infos);\r\n      }, false);\r\n\r\n      worker.postMessage({\r\n        \"type\": \"Broadway.js - Worker init\",\r\n        \"options\": {\r\n          \"rgb\": !self._useGL,\r\n          \"reuseMemory\": self.reuseMemory //\r\n        }\r\n      });\r\n\r\n      if (this.transferMemory) {\r\n        this.decode = function (videoData, parInfo) {\r\n          // no copy\r\n          // instead we are transfering the ownership of the buffer\r\n          // dangerous!!!\r\n          worker.postMessage({\r\n            buf: videoData.buffer,\r\n            offset: videoData.byteOffset,\r\n            length: videoData.length,\r\n            info: parInfo\r\n          }, [videoData.buffer]); // Send data to our worker.\r\n        };\r\n      } else {\r\n        this._decodeVideo = function (ts, videoData, parInfo) {\r\n          // Copy the sample so that we only do a structured clone of the region of interest\r\n          var copyU8 = new Uint8Array(videoData.length);\r\n          copyU8.set(videoData, 0, videoData.length);\r\n          worker.postMessage({\r\n            buf: copyU8.buffer,\r\n            offset: 0,\r\n            length: videoData.length,\r\n            info: parInfo\r\n          }, [copyU8.buffer]); //向Worker发送数据\r\n        }\r\n      }\r\n\r\n      if (this.reuseMemory) {\r\n        this.recycleMemory = function (parArray) {\r\n          worker.postMessage({\r\n            reuse: parArray.buffer\r\n          }, [parArray.buffer]);\r\n        }\r\n      }\r\n    } else {\r\n      this._packageCache = new baccarat.H264Cache();\r\n      //todo closure compiler\r\n      this._decoder.onPictureDecoded = onPictureDecoded;\r\n      this._decodeVideo = function (ts, videoData, parInfo) {\r\n        //使用主循环来处理，使用队列缓存\r\n        //this._decoder.decode(videoData);\r\n        if (ts === 0)\r\n          this._decoder.decode(videoData);\r\n        else\r\n          this._packageCache.pushH264(ts, videoData);\r\n      };\r\n    }\r\n  };\r\n  /**\r\n  \r\n     * Set the url to handler, if url don't equal currentUrl, it will close the currentUrl connection,\r\n     * and create a new connection.\r\n     * @param {string} url\r\n     */\r\n  proto.setUrl = function (url) {\r\n    if (url !== this._currentUrl) {\r\n      this._client.close();\r\n    }\r\n    this._currentUrl = url;\r\n    if (this._currentUrl) {\r\n      this.reOpen();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current url string\r\n   * @returns {string}\r\n   */\r\n  proto.getUrl = function () {\r\n    return this._currentUrl;\r\n  };\r\n\r\n  /**\r\n   * Close the WebSocket connection.\r\n   */\r\n  proto.close = function () {\r\n    this._currentUrl = null;\r\n    this._client.close();\r\n    // if (this._client.readyState !== WebSocket.CLOSED || this._client.readyState !==\r\n    // WebSocket.CLOSING)\r\n    //this.audioPlayer.stop();\r\n    this._packageCache.clear();\r\n    state = true;\r\n  };\r\n\r\n  /**\r\n   * Reopen the WebSocket connection with current url string.\r\n   */\r\n  proto.reOpen = function () {\r\n    if (!this._currentUrl) {\r\n      return\r\n    }\r\n    this._client = new WebSocket(this._currentUrl);\r\n    this._client.onopen = onOpenCallback.bind(this);\r\n    this._client.onerror = onErrorCallback.bind(this);\r\n    this.audioPlayer = AV.Player.fromBufferSource();\r\n    //this.audioPlayer.play();\r\n  };\r\n\r\n  proto.getState = function () {\r\n    if (!this._client)\r\n      return -1;\r\n    return this._client.readyState;\r\n  };\r\n\r\n  proto.getNetworkStatus = function () {\r\n    return this._statistics.getNetworkStatus();\r\n  };\r\n\r\n  //-------------------video caches -----------------\r\n\r\n  baccarat.H264Package = function (timestamp, buffer) {\r\n    this.timestamp = timestamp;\r\n    this.buffer = buffer;\r\n    this.bufferSize = buffer.byteLength;\r\n    this.keyframe = (new Uint16Array(buffer.buffer, 16, 1)[0] === 34917)\r\n  };\r\n\r\n  function comparePackages(a, b) {\r\n    return a.timestamp - b.timestamp;\r\n  }\r\n\r\n  baccarat.H264Cache = function () {\r\n    this._videoCache = [];\r\n    this._audioCache = [];\r\n    this.receivedKeyframe = false;\r\n    this._deltaTime = 0;\r\n  };\r\n\r\n  var h264CacheProto = baccarat.H264Cache.prototype;\r\n\r\n  h264CacheProto.clear = function () {\r\n    this._videoCache.length = 0;\r\n    this._audioCache.length = 0;\r\n    this.receivedKeyframe = false;\r\n    this.lastPlayedTimestamp = 0;\r\n    this._deltaTime = 0;\r\n  };\r\n\r\n  h264CacheProto.sortCaches = function () {\r\n    this._videoCache.sort(comparePackages);\r\n    this._audioCache.sort(comparePackages);\r\n  };\r\n  var VIDEO_FPS = 1000 / 30;\r\n  var CACHE_FRAMES = 5;\r\n  var SKIP_KEYFRAMES = 120; //120幀 才需要跳幀\r\n  h264CacheProto.getDecodeH264Buffer = function (dt) {\r\n    this._deltaTime += dt;\r\n    if (this._deltaTime < this._currentFPS)\r\n      return null;\r\n    this._deltaTime %= this._currentFPS;\r\n    var videoCache = this._videoCache;\r\n    if (videoCache.length < CACHE_FRAMES) //cache frames.\r\n      return null;\r\n    if (videoCache.length == CACHE_FRAMES && state) {\r\n      state = false;\r\n    }\r\n    videoCache.sort(comparePackages);\r\n    var frame = this._searchVideoKeyframe();\r\n    if (!frame) {\r\n      frame = videoCache.shift()\r\n    }\r\n\r\n    var range = 0;\r\n    if (frame.timestamp < this.lastPlayedTimestamp) {\r\n      return null;\r\n    }\r\n    if (videoCache.length < 5) {\r\n      range = 0;\r\n    } else if (videoCache.length < 10) {\r\n      range = VIDEO_FPS * 0.1;\r\n    } else if (videoCache.length < 15) {\r\n      range = VIDEO_FPS * 0.25;\r\n    } else if (videoCache.length < 20) {\r\n      range = VIDEO_FPS * 0.3;\r\n    } else if (videoCache.length < 30) {\r\n      range = VIDEO_FPS * 0.4;\r\n    } else if (videoCache.length < 60) {\r\n      range = VIDEO_FPS * 0.5;\r\n    } else if (videoCache.length < 100) {\r\n      range = VIDEO_FPS * 0.6;\r\n    } else {\r\n      range = VIDEO_FPS * 0.7;\r\n    }\r\n    this._currentFPS = VIDEO_FPS - range;\r\n    this.lastPlayedTimestamp = frame.timestamp;\r\n    return frame;\r\n  };\r\n\r\n  //如果延遲了 就跳楨到關鍵keyFrame  如果該keyFrame 在 skip內 則先演到該keyFrame 再跳到下一個keyFrame\r\n  h264CacheProto._searchVideoKeyframe = function () {\r\n    var videoCache = this._videoCache;\r\n    if (videoCache.length < SKIP_KEYFRAMES)\r\n      return null;\r\n\r\n    var selIdx = -1;\r\n    for (var i = 0; i < videoCache.length; i++) {\r\n      if (videoCache[i].keyframe)\r\n        selIdx = i;\r\n    }\r\n    if (selIdx !== -1) {\r\n      if (selIdx > SKIP_KEYFRAMES) {\r\n        var selPkg = videoCache[selIdx];\r\n        videoCache.splice(0, selIdx + 1);\r\n        return selPkg;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 推進來時, 如果在list中找到時 就不做事,\r\n  // 如收過keyFrame 則當ts > lastTs pushPackage\r\n  //                  ts < lastTs (收到過時的產物) 則 reset TimeStamp\r\n  // 如無this.receivedKeyframe 就創建package 如有keyFrame 則更改flag 跟lastPlayerTs\r\n  h264CacheProto.pushH264 = function (timestamp, buffer) {\r\n    if (!this.getPackageByTimestamp(this._videoCache, timestamp)) {\r\n      if (this.receivedKeyframe) {\r\n        if (timestamp > this.lastPlayedTimestamp)\r\n          this._videoCache.push(new baccarat.H264Package(timestamp, buffer));\r\n        else {\r\n          if (this.lastPlayedTimestamp - timestamp > 2000)\r\n            this.lastPlayedTimestamp = 0; //reset, because timestamp has been reset.\r\n          // cc.log(\"lose \" + timestamp, this.lastPlayedTimestamp);\r\n        }\r\n      } else {\r\n        var selPkg = new baccarat.H264Package(timestamp, buffer);\r\n        if (selPkg.keyframe) {\r\n          this.receivedKeyframe = true;\r\n          this.lastPlayedTimestamp = timestamp;\r\n          this._videoCache.push(selPkg);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  h264CacheProto.getPackageByTimestamp = function (packages, timestamp) {\r\n    if (!packages || packages.length === 0)\r\n      return null;\r\n    for (var i = 0; i < packages.length; i++) {\r\n      if (packages[i].timestamp === timestamp) {\r\n        return packages[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 從audioCacge中loop 直到找到timeStamp > lastTs return frame\r\n  h264CacheProto.getDecodeAACBuffer = function () {\r\n    var audioCache = this._audioCache;\r\n    var lastPlayedTimestamp = this.lastPlayedTimestamp;\r\n    if (audioCache.length === 0)\r\n      return null;\r\n    while (audioCache.length !== 0) {\r\n      var frame = audioCache[0];\r\n      if (frame == null) {\r\n        return null;\r\n      }\r\n      //時間到了則播放\r\n      if (frame.timestamp - lastPlayedTimestamp >= 0 && frame.timestamp - lastPlayedTimestamp <= VIDEO_FPS) {\r\n        return audioCache.shift();\r\n        //舊的音頻直接丟棄, 避免音頻不同步\r\n      } else if (frame.timestamp < lastPlayedTimestamp) {\r\n        audioCache.shift();\r\n      }\r\n      return null;\r\n    }\r\n    //audioCache.sort(comparePackages);\r\n    /*while (audioCache.length !== 0) {\r\n      var frame = audioCache.shift();\r\n      if (frame.timestamp > this.lastPlayedTimestamp)\r\n        return frame;\r\n    }*/\r\n    return null;\r\n  };\r\n\r\n  h264CacheProto.skipAACBuffer = function (timestamp) {\r\n    var audioCache = this._audioCache;\r\n    if (audioCache.length === 0)\r\n      return;\r\n    audioCache.sort(comparePackages);\r\n    var idx = -1;\r\n    for (var i = 0; i < audioCache.length; i++) {\r\n      if (audioCache[i].timestamp > timestamp) {\r\n        idx = i;\r\n        break;\r\n      }\r\n    }\r\n    if (idx > 0)\r\n      audioCache.splice(0, idx)\r\n  };\r\n\r\n  h264CacheProto.pushAAC = function (timestamp, buffer) {\r\n    if (!this.getPackageByTimestamp(this._audioCache, timestamp)) {\r\n      var pkg = new baccarat.H264Package(timestamp, buffer);\r\n      this._audioCache.push(pkg);\r\n    }\r\n  };\r\n}\r\n)(lottery.video);"]}