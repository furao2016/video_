{"version":3,"sources":["lottery_animCom.js"],"names":["cc","_decorator","ccclass","property","lottery_animCom","Integer","Boolean","Sprite","type","String","tooltip","frameSpriteArr","nowTime","startTime","frameTime","playFinishCallBack","loadFail","frameRate","folderName","lottery_animDataMgr","getInstance","resDir","targetSprite","node","getComponent","dt","length","spriteFrame","Math","floor","isPlaying","index","isLoop","data","callBack","is","Component"],"mappings":"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","file":"lottery_animCom.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\UI\\animCom","sourcesContent":["import lottery_animDataMgr from \"../../Data/lottery_animDataMgr\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class lottery_animCom extends cc.Component {\r\n    @property(cc.Integer)\r\n    frameRate = 25; //帧率\r\n    @property(cc.Boolean)\r\n    isLoop = false; //是否循环\r\n    @property(cc.Boolean)\r\n    isPlaying = false;//是否正在播放\r\n    @property(cc.Sprite)\r\n    targetSprite = null;//目标精灵\r\n    @property({ type: cc.String, tooltip: \"获取animMgr中指定的序列帧数组\" })\r\n    folderName = String;//??这样写编辑器不会提示有问题\r\n    //图集\r\n    frameSpriteArr = [];\r\n    //当前时间\r\n    nowTime = 0;\r\n    //开始时间\r\n    startTime = 0;\r\n    //帧间隔时间\r\n    frameTime = 0;\r\n    //播放完后的回调\r\n    playFinishCallBack = null;\r\n    //setData的时候加载失败\r\n    loadFail = false;\r\n\r\n    onLoad() {\r\n        this.frameTime = 1 / this.frameRate;\r\n        this.folderName && (this.frameSpriteArr = lottery_animDataMgr.getInstance().resDir[this.folderName]);\r\n        !this.frameSpriteArr && (this.frameSpriteArr = []);\r\n        !this.targetSprite && (this.targetSprite = this.node.getComponent(cc.Sprite));\r\n    }\r\n    //\r\n    update(dt) {\r\n        if (this.loadFail) {\r\n            this.frameSpriteArr = lottery_animDataMgr.getInstance().resDir[this.folderName];\r\n            if (!this.frameSpriteArr || !this.frameSpriteArr.length) return;\r\n            this.targetSprite.spriteFrame = this.frameSpriteArr[Math.floor(this.startTime / this.frameTime)];\r\n            this.nowTime = this.startTime;\r\n            this.isPlaying = true;\r\n            this.loadFail = false;\r\n            return;\r\n        }\r\n        if (!this.isPlaying) return;\r\n        this.nowTime += dt;\r\n        let index = Math.floor(this.nowTime / this.frameTime);\r\n        if (index >= this.frameSpriteArr.length) { //大于总帧数\r\n            if (this.isLoop) {\r\n                index = 0;\r\n                this.nowTime = this.startTime;\r\n            } else {\r\n                this.isPlaying = false;\r\n                this.nowTime = this.startTime;\r\n                index = this.frameSpriteArr.length - 1;\r\n                this.playFinishCallBack && this.playFinishCallBack(this.folderName);\r\n            }\r\n        }\r\n        this.targetSprite.spriteFrame = this.frameSpriteArr[index];\r\n    }\r\n    /**\r\n     * 现在就停止播放\r\n     */\r\n    quickClosePlay() {\r\n        this.isPlaying = false;\r\n        this.playFinishCallBack && this.playFinishCallBack();\r\n    }\r\n\r\n    /**\r\n     * 设置播放\r\n     * @param folderName 指定帧数组\r\n     * @param startTime 开始时间\r\n     */\r\n    setData(folderName, startTime = 0, isLoop = false) {\r\n        if (folderName == '') return;\r\n        this.folderName = folderName;\r\n        this.isLoop = isLoop;\r\n        this.startTime = startTime;\r\n        this.nowTime = this.startTime;\r\n        let data = lottery_animDataMgr.getInstance().resDir[folderName];\r\n        if (!data || data.length == 0) { this.loadFail = true; return; }\r\n        this.isPlaying = true;\r\n        this.frameSpriteArr = data;\r\n        this.targetSprite.spriteFrame = this.frameSpriteArr[Math.floor(this.nowTime / this.frameTime)];\r\n    }\r\n    //设置播放完成回调\r\n    setFinshCallBack(callBack) {\r\n        this.playFinishCallBack = callBack;\r\n    }\r\n\r\n    /**\r\n     * 设置是否循环\r\n     */\r\n    setLoop(is) {\r\n        this.isLoop = is;\r\n    }\r\n}"]}