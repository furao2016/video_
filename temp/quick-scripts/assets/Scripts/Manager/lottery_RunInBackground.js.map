{"version":3,"sources":["lottery_RunInBackground.js"],"names":["runCallback","RunInBackground","cc","game","off","EVENT_HIDE","_goToBackground","EVENT_SHOW","_goToFront","CallRunCallback","focus","key","element","tag","callback","self","bind","_instance","on","SingletonBase","module","exports"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAEA;;;AAGA,IAAIA,cAAc,EAAlB;;IAEMC;;;AAEF,+BAAc;AAAA;;AAAA;AAEb;;;;2CAQkB;AACfC,eAAGC,IAAH,CAAQC,GAAR,CAAYF,GAAGC,IAAH,CAAQE,UAApB,EAAgC,KAAKC,eAArC,EAAsD,IAAtD;AACAJ,eAAGC,IAAH,CAAQC,GAAR,CAAYF,GAAGC,IAAH,CAAQI,UAApB,EAAgC,KAAKC,UAArC,EAAiD,IAAjD;AACH;;;0CACiB;AACd,iBAAKC,eAAL,CAAqB,KAArB;AACH;;;qCACY;AACT,iBAAKA,eAAL,CAAqB,IAArB;AACH;;;wCACeC,OAAO;AACnB,iBAAK,IAAMC,GAAX,IAAkBX,WAAlB,EAA+B;AAC3B,oBAAMY,UAAUZ,YAAYW,GAAZ,CAAhB;AACAC,wBAAQF,KAAR;AACH;AACJ;AACD;;;;8CACsBG,KAAKC,UAAUC,MAAM;AACvCf,wBAAYa,GAAZ,IAAmBE,OAAOD,SAASE,IAAT,CAAcD,IAAd,CAAP,GAA6BD,QAAhD;AACH;;;gDACuBD,KAAK;AACzB,gBAAIb,YAAYa,GAAZ,CAAJ,EACI,OAAOb,YAAYa,GAAZ,CAAP;AACP;;;uCA7BqB;AAClB,gBAAII,YAAY,IAAIhB,eAAJ,EAAhB;AACAC,eAAGC,IAAH,CAAQe,EAAR,CAAWhB,GAAGC,IAAH,CAAQE,UAAnB,EAA+BY,UAAUX,eAAzC,EAA0DW,SAA1D;AACAf,eAAGC,IAAH,CAAQe,EAAR,CAAWhB,GAAGC,IAAH,CAAQI,UAAnB,EAA+BU,UAAUT,UAAzC,EAAqDS,SAArD;AACA,mBAAOA,SAAP;AACH;;;;EAXyBE;;AAsC9BC,OAAOC,OAAP,GAAiBpB,eAAjB","file":"lottery_RunInBackground.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Manager","sourcesContent":["import SingletonBase from \"SingletonBase\";\r\n\r\n/*\r\n后台切入切出相关  切到后台 回调参数 false 切入 true\r\n*/\r\nlet runCallback = {}\r\n\r\nclass RunInBackground extends SingletonBase {\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static _onNewObject() {\r\n        let _instance = new RunInBackground();\r\n        cc.game.on(cc.game.EVENT_HIDE, _instance._goToBackground, _instance);\r\n        cc.game.on(cc.game.EVENT_SHOW, _instance._goToFront, _instance);\r\n        return _instance\r\n    }\r\n    _onDestroyObject() {\r\n        cc.game.off(cc.game.EVENT_HIDE, this._goToBackground, this)\r\n        cc.game.off(cc.game.EVENT_SHOW, this._goToFront, this)\r\n    }\r\n    _goToBackground() {\r\n        this.CallRunCallback(false);\r\n    }\r\n    _goToFront() {\r\n        this.CallRunCallback(true);\r\n    }\r\n    CallRunCallback(focus) {\r\n        for (const key in runCallback) {\r\n            const element = runCallback[key];\r\n            element(focus)\r\n        }\r\n    }\r\n    /*--------------------------------对外接口-----------------------*/\r\n    RegestRunInBackground(tag, callback, self) {\r\n        runCallback[tag] = self ? callback.bind(self) : callback\r\n    }\r\n    UnregestRunInBackground(tag) {\r\n        if (runCallback[tag])\r\n            delete runCallback[tag]\r\n    }\r\n}\r\n\r\nmodule.exports = RunInBackground"]}