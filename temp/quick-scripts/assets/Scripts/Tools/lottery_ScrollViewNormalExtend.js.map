{"version":3,"sources":["lottery_ScrollViewNormalExtend.js"],"names":["overflowcount","deltaPos","checkTimes","cc","Class","extends","ScrollView","editor","CC_EDITOR","menu","properties","itemNode","default","type","Node","tooltip","itemprefab","Prefab","viewMask","spacing","mDirect","visible","mValue","mAnchor","dataCount","maxItemCount","curItemCount","curShowItemIndex","showTopPos","showDownPos","hideTopPos","hideDownPos","itemActiveList","itemDeactivePool","NodePool","lastContentPos","checkdelta","itemway","itemSynPos","Vec2","cloneItem","onLoad","index","item","instantiate","active","content","addChild","push","vertical","horizontal","CalculateRangePos","update","dt","_super","isScrolling","isAutoScrolling","UpdateItemPos","Math","floor","GetItem","pop","PopItem","setPosition","freshItemCallback","PushItem","UnshiftItem","unshift","ShiftItem","shift","CheckTopPop","CheckTopPush","CheckDownPop","CheckDownPush","abs","ceil","InitItemData","count","callback","self","bind","AddItemData","AddItemDataNum","num","i","DeleteItem","stopAutoScroll","length","element","scrollToBottom","UpdateItem","_index","UnRegestUpdateItem","ClearData","splice","height","SpacingChanged","space","setItemNode","removeAllChildren"],"mappings":"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","file":"lottery_ScrollViewNormalExtend.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Tools","sourcesContent":["let overflowcount = 3;//定义超过显示范围的item数量\r\nlet deltaPos = 0;//滑动的差值 记录滑动时content的位置与初始的位置差\r\nlet checkTimes = 0;//检测次数 当滑动过快 item过小的时候 会导致一帧刷新几个item 所以声明此变量\r\n/**对scrollview扩展，循环使用item,适用于数量多，且item的大小不会改变的情况*/\r\ncc.Class({\r\n    extends: cc.ScrollView,\r\n    editor: CC_EDITOR && {\r\n        menu: 'i18n:UIUtil/ScrollViewLoop'\r\n    },\r\n    properties: {\r\n        itemNode: {\r\n            default: null,\r\n            type: cc.Node,\r\n            tooltip: \"动态创建的单个node节点对象\"\r\n        },\r\n        itemprefab: {//动态创建的预制\r\n            default: null,\r\n            type: cc.Prefab,\r\n            tooltip: \"动态创建的单个预制对象\"\r\n        },\r\n        viewMask: {//mask对象\r\n            type: cc.Node,\r\n            default: null,\r\n            tooltip: \"遮挡层的node对象，用于计算显示范围\"\r\n        },\r\n        spacing: {//间隔值\r\n            default: 3,\r\n            tooltip: \"间隔值\"\r\n        },\r\n        /*---------------本地做记录使用数据 不对外使用-----------------*/\r\n        mDirect: {\r\n            default: \"x\",\r\n            visible: false\r\n        },//\"x\" / \"y\"\r\n        mValue: {\r\n            default: \"width\",\r\n            visible: false\r\n        },//\"width\" / \"height\"\r\n        mAnchor: {\r\n            default: \"anchorX\",\r\n            visible: false\r\n        },//\"anchorX\" / \"anchorY\"\r\n        dataCount: {\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        maxItemCount: {//记录最大item数量\r\n            default: overflowcount,\r\n            visible: false\r\n        },\r\n        curItemCount: {//记录当前的item数量\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        curShowItemIndex: {//记录当前显示的data序号\r\n            default: [],\r\n            visible: false\r\n        },\r\n        showTopPos: {//记录显示的最小值\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        showDownPos: {//记录显示的最大值\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        hideTopPos: {//记录隐藏的最小值\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        hideDownPos: {//记录隐藏的最大值\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        itemActiveList: {//存储使用中的item\r\n            default: [],\r\n            visible: false\r\n        },\r\n        itemDeactivePool: {//存储回收的item\r\n            default: null,\r\n            type: cc.NodePool,\r\n            visible: false\r\n        },\r\n        lastContentPos: {//记录上一帧的content的位置 x/y\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        checkdelta: {//检测差值\r\n            default: 0,\r\n            visible: false\r\n        },\r\n        itemway: {\r\n            default: -1,\r\n            visible: false\r\n        },\r\n        itemSynPos: {\r\n            default: new cc.Vec2(0, 0),\r\n            visible: false\r\n        },\r\n        cloneItem: {\r\n            default: null,\r\n            visible: false\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this.cloneItem = this.itemNode || this.itemprefab;\r\n        this.itemDeactivePool = [];\r\n        for (let index = 0; index < overflowcount; index++) {\r\n            let item = cc.instantiate(this.cloneItem);\r\n            item.active = false;\r\n            this.content.addChild(item)\r\n            this.itemDeactivePool.push(item);\r\n        }\r\n        this.curShowItemIndex = [0, 0];\r\n        //设置滑动方向,目前只支持一个方向的滑动\r\n        this.vertical = !this.horizontal;\r\n        this.mDirect = this.horizontal ? \"x\" : \"y\";\r\n        this.mValue = this.horizontal ? \"width\" : \"height\";\r\n        this.mAnchor = this.horizontal ? \"anchorX\" : \"anchorY\";\r\n        this.itemway = this.horizontal ? 1 : -1;\r\n        this.lastContentPos = this.content[this.mDirect];\r\n        this.CalculateRangePos();\r\n    },\r\n\r\n    update(dt) {\r\n        this._super(dt);\r\n        if (this.isScrolling() || this.isAutoScrolling())\r\n            this.UpdateItemPos();\r\n    },\r\n    /**计算滑动显示的范围*/\r\n    CalculateRangePos() {\r\n        this.checkdelta = 0.25 * this.spacing;\r\n        //计算最大item数量\r\n        this.maxItemCount = Math.floor(this.viewMask[this.mValue] / this.spacing) + overflowcount;\r\n        //设定位置相关数据\r\n        this.showTopPos = this.lastContentPos - this.itemway * this.spacing;\r\n        this.showDownPos = this.lastContentPos + this.itemway * (this.viewMask[this.mValue] + 0.5 * this.spacing);\r\n        this.hideTopPos = this.lastContentPos - this.itemway * 1.5 * this.spacing;\r\n        this.hideDownPos = this.lastContentPos + this.itemway * (this.viewMask[this.mValue] + 1.5 * this.spacing);\r\n    },\r\n    /**获取一个item */\r\n    GetItem() {\r\n        var item = this.itemDeactivePool.pop();\r\n        if (!item) {\r\n            item = cc.instantiate(this.cloneItem);\r\n            this.content.addChild(item);\r\n        }\r\n        item.active = true;\r\n        return item;\r\n    },\r\n    /**数组末尾增加一个item*/\r\n    PopItem() {\r\n        if (this.curItemCount >= this.maxItemCount)\r\n            return;\r\n        var item = this.GetItem();\r\n        this.itemActiveList.push(item);\r\n        this.itemSynPos[this.mDirect] = this.itemway * this.curShowItemIndex[1] * this.spacing;\r\n        item.setPosition(this.itemSynPos);\r\n        if (this.freshItemCallback)\r\n            this.freshItemCallback(this.curShowItemIndex[1], item);\r\n        this.curShowItemIndex[1]++;\r\n        this.curItemCount++;\r\n    },\r\n    /**回收末尾item*/\r\n    PushItem() {\r\n        var item = this.itemActiveList.pop();\r\n        this.itemDeactivePool.push(item);\r\n        this.curShowItemIndex[1]--;\r\n        this.curItemCount--;\r\n    },\r\n    /**在数组的头部增加一个item*/\r\n    UnshiftItem() {\r\n        var item = this.GetItem();\r\n        this.itemActiveList.unshift(item);\r\n        this.curShowItemIndex[0]--;\r\n        this.itemSynPos[this.mDirect] = this.itemway * this.curShowItemIndex[0] * this.spacing;\r\n        item.setPosition(this.itemSynPos);\r\n        if (this.freshItemCallback)\r\n            this.freshItemCallback(this.curShowItemIndex[0], item);\r\n        this.curItemCount++;\r\n    },\r\n    /**回收顶部的item*/\r\n    ShiftItem() {\r\n        var item = this.itemActiveList.shift();\r\n        item.active = false;\r\n        this.itemDeactivePool.push(item);\r\n        this.curShowItemIndex[0]++;\r\n        this.curItemCount--;\r\n    },\r\n    /**检测顶部回收*/\r\n    CheckTopPop() {\r\n        if (this.horizontal) {\r\n            if (this.content[this.mDirect] + this.itemActiveList[0][this.mDirect] < this.hideTopPos)\r\n                this.ShiftItem();\r\n        }\r\n        else if (this.content[this.mDirect] + this.itemActiveList[0][this.mDirect] > this.hideTopPos) {\r\n            this.ShiftItem();\r\n        }\r\n    },\r\n    /**检测顶部创建*/\r\n    CheckTopPush() {\r\n        if (this.curShowItemIndex[0] == 0)\r\n            return;\r\n        if (this.horizontal) {\r\n            if (this.content[this.mDirect] + this.itemActiveList[0][this.mDirect] > this.showTopPos)\r\n                this.UnshiftItem();\r\n        }\r\n        else if (this.content[this.mDirect] + this.itemActiveList[0][this.mDirect] < this.showTopPos) {\r\n            this.UnshiftItem();\r\n        }\r\n    },\r\n    /**检测底部回收*/\r\n    CheckDownPop() {\r\n        if (this.horizontal) {\r\n            if (this.content[this.mDirect] + this.itemActiveList[this.curItemCount - 1][this.mDirect] > this.hideDownPos)\r\n                this.PushItem();\r\n        }\r\n        else if (this.content[this.mDirect] + this.itemActiveList[this.curItemCount - 1][this.mDirect] < this.hideDownPos) {\r\n            this.PushItem();\r\n        }\r\n    },\r\n    /**检测底部创建*/\r\n    CheckDownPush() {\r\n        if (this.curShowItemIndex[1] == this.dataCount) {\r\n            return;\r\n        }\r\n        if (this.horizontal) {\r\n            if (this.content[this.mDirect] + this.itemActiveList[this.curItemCount - 1][this.mDirect] < this.showDownPos) {\r\n                this.PopItem();\r\n            }\r\n        }\r\n        else if (this.content[this.mDirect] + this.itemActiveList[this.curItemCount - 1][this.mDirect] > this.showDownPos) {\r\n            this.PopItem();\r\n        }\r\n    },\r\n    /**刷新item位置*/\r\n    UpdateItemPos() {\r\n        deltaPos = this.content[this.mDirect] - this.lastContentPos;\r\n        if (Math.abs(deltaPos) < this.checkdelta)\r\n            return;\r\n        checkTimes = Math.ceil(Math.abs(deltaPos) / this.spacing)\r\n        while (checkTimes > 0) {\r\n            checkTimes--;\r\n            if (this.horizontal) {\r\n                if (deltaPos < 0 && this.curShowItemIndex[1] < this.dataCount) {//向上滑动\r\n                    this.CheckTopPop();//检测顶部回收\r\n                    this.CheckDownPush();//检测底部创建\r\n                }\r\n                else if (deltaPos > 0 && this.curShowItemIndex[0] > 0) {//向下滑动\r\n                    this.CheckDownPop();//检测底部回收\r\n                    this.CheckTopPush();//检测顶部创建\r\n                }\r\n            }\r\n            else {\r\n                if (deltaPos > 0 && this.curShowItemIndex[1] < this.dataCount) {//向上滑动\r\n                    this.CheckTopPop();//检测顶部回收\r\n                    this.CheckDownPush();//检测底部创建\r\n                }\r\n                else if (deltaPos < 0 && this.curShowItemIndex[0] > 0) {//向下滑动\r\n                    this.CheckDownPop();//检测底部回收\r\n                    this.CheckTopPush();//检测顶部创建\r\n                }\r\n            }\r\n        }\r\n        this.lastContentPos = this.content[this.mDirect];\r\n    },\r\n\r\n    /*-----------------------------对外接口-------------------------------------*/\r\n    /**初始化item数量 注册回调函数 */\r\n    InitItemData(count, callback, self) {\r\n        if (self)\r\n            this.freshItemCallback = callback.bind(self);\r\n        else\r\n            this.freshItemCallback = callback;\r\n        this.dataCount = count;\r\n        this.content[this.mValue] = this.dataCount * this.spacing;\r\n        if (count > this.maxItemCount)\r\n            count = this.maxItemCount;\r\n        for (let index = 0; index < count; index++) {\r\n            this.PopItem();\r\n        }\r\n    },\r\n    /**增加一个item*/\r\n    AddItemData() {\r\n        if (this.curShowItemIndex[1] == this.dataCount) {\r\n            this.PopItem();\r\n        }\r\n        this.dataCount++;\r\n        this.content[this.mValue] = this.dataCount * this.spacing;\r\n    },\r\n    /**增加多个item */\r\n    AddItemDataNum(num) {\r\n        for (let i = 0; i < num; i++) {\r\n            this.AddItemData();\r\n        }\r\n    },\r\n    /**删除一个item    index:数据的序列号 */\r\n    DeleteItem(index) {\r\n        this.stopAutoScroll();\r\n        if (index < this.curShowItemIndex[0]) {//显示范围上方\r\n            this.content[this.mDirect] -= this.spacing;\r\n        }\r\n        index = index - this.curShowItemIndex[0];\r\n        for (let i = index < 0 ? 0 : index; i < this.itemActiveList.length; i++) {\r\n            const element = this.itemActiveList[i];\r\n            this.freshItemCallback(this.curShowItemIndex[0] + i, element)\r\n        }\r\n        this.dataCount--;\r\n        this.content[this.mValue] = this.dataCount * this.spacing;\r\n        if (this.content[this.mValue] < this.content[this.mDirect] + this.viewMask[this.mValue]) {\r\n            this.scrollToBottom();\r\n        }\r\n    },\r\n    /**刷新一个item*/\r\n    UpdateItem(index) {\r\n        if (this.curShowItemIndex[0] <= index <= this.curShowItemIndex[1]) {\r\n            if (this.freshItemCallback) {\r\n                let _index = index - this.curShowItemIndex[0];\r\n                this.freshItemCallback(index, this.itemActiveList[_index]);\r\n            }\r\n        }\r\n    },\r\n    /**反注册更新item事件*/\r\n    UnRegestUpdateItem() {\r\n        this.freshItemCallback = null;\r\n    },\r\n    /**清楚所有数据*/\r\n    ClearData(callback) {\r\n        this.stopAutoScroll();\r\n        if (this.horizontal)\r\n            this.itemSynPos[this.mDirect] = -this.viewMask[this.mValue] * this.viewMask[this.mAnchor]\r\n        else\r\n            this.itemSynPos[this.mDirect] = this.viewMask[this.mValue] * (1 - this.viewMask[this.mAnchor])\r\n\r\n        this.content.setPosition(this.itemSynPos);\r\n        for (let index = 0; index < this.itemActiveList.length; index++) {\r\n            const element = this.itemActiveList[index];\r\n            element.active = false;\r\n            this.itemDeactivePool.push(element);\r\n        }\r\n        this.itemActiveList.splice(0, this.curItemCount);\r\n        this.curItemCount = 0;\r\n        this.content.height = 0;\r\n        this.curShowItemIndex = [0, 0];\r\n        this.lastContentPos = this.itemSynPos[this.mDirect];\r\n        if (callback) callback();\r\n    },\r\n    /**\r\n     * 当间隔值动态发生改变后 调用接口\r\n     * @param {*} space 间隔值\r\n     */\r\n    SpacingChanged(space) {\r\n        if (this.itemActiveList.length <= 0) return;\r\n        this.ClearData(() => {\r\n            this.CalculateRangePos();\r\n            this.InitItemData(this.dataCount, this.freshItemCallback);\r\n        })\r\n    },\r\n    \r\n    //设置新的item对象\r\n    setItemNode(item){\r\n        this.content.removeAllChildren();\r\n        this.itemNode = item;\r\n        this.cloneItem = this.itemNode || this.itemprefab;\r\n        this.itemDeactivePool = [];\r\n        for (let index = 0; index < overflowcount; index++) {\r\n            let item = cc.instantiate(this.cloneItem);\r\n            item.active = false;\r\n            this.content.addChild(item)\r\n            this.itemDeactivePool.push(item);\r\n        }\r\n        this.curShowItemIndex = [0, 0];\r\n        //设置滑动方向,目前只支持一个方向的滑动\r\n        this.vertical = !this.horizontal;\r\n        this.mDirect = this.horizontal ? \"x\" : \"y\";\r\n        this.mValue = this.horizontal ? \"width\" : \"height\";\r\n        this.mAnchor = this.horizontal ? \"anchorX\" : \"anchorY\";\r\n        this.itemway = this.horizontal ? 1 : -1;\r\n        this.lastContentPos = this.content[this.mDirect];\r\n        this.CalculateRangePos();\r\n    },\r\n})"]}