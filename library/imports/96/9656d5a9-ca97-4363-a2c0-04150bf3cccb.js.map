{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Data/assets\\Scripts\\Data\\lottery_animDataMgr.js"],"names":["lottery_animDataMgr","resDir","resUrl","progressCallBack","callback","cc","loader","loadResDir","SpriteFrame","err","objects","urls","console","log","index","length","one","split","name","push","urlName","url","releaseResDir","SingletonBase"],"mappings":";;;;;;;;;;;;;AAIA;;;;;;;;;;+eAJA;;;;;;IAMqBA;;;;;;;;;;;;;;oNACjBC,SAAS,UACTC,SAAS;;;;;;AAKT;6BACKC,kBAAkBC,UAAU;AAAA;;AAC7BC,eAAGC,MAAH,CAAUC,UAAV,CAAqB,KAAKL,MAA1B,EAAkCG,GAAGG,WAArC,EAAkDL,gBAAlD,EAAoE,UAACM,GAAD,EAAMC,OAAN,EAAeC,IAAf,EAAwB;AACxF,oBAAIF,GAAJ,EAAS;AACLG,4BAAQC,GAAR,CAAY,IAAZ,EAAkBJ,GAAlB;AACA;AACH;AACD,qBAAK,IAAIK,QAAQ,CAAZ,EAAeC,SAASJ,KAAKI,MAAlC,EAA0CD,QAAQC,MAAlD,EAA0DD,OAA1D,EAAmE;AAC/D,wBAAIE,MAAML,KAAKG,KAAL,EAAYG,KAAZ,CAAkB,GAAlB,CAAV;AACA,wBAAIC,OAAOF,IAAIA,IAAID,MAAJ,GAAa,CAAjB,CAAX;AACA,qBAAC,OAAKd,MAAL,CAAYiB,IAAZ,CAAD,KAAuB,OAAKjB,MAAL,CAAYiB,IAAZ,IAAoB,EAA3C;AACA,2BAAKjB,MAAL,CAAYiB,IAAZ,EAAkBC,IAAlB,CAAuBT,QAAQI,KAAR,CAAvB;AACH;AACDV,4BAAYA,UAAZ;AACAQ,wBAAQC,GAAR,CAAY,OAAKX,MAAjB,EAAyB,MAAzB;AACH,aAbD;AAcH;AACD;AACA;;;;mCACWkB,SAASjB,kBAAkBC,UAAU,CAG/C;AAFG;;AAGJ;;;;sCACciB,KAAK;AACfhB,eAAGC,MAAH,CAAUgB,aAAV,CAAwB,KAAKpB,MAAL,GAAcmB,GAAtC;AACA,iBAAKpB,MAAL,CAAYoB,GAAZ,EAAiBN,MAAjB,GAA0B,CAA1B;AACH;;;uCA/BqB;AAClB,gBAAIC,MAAM,IAAIhB,mBAAJ,EAAV;AACA,mBAAOgB,GAAP;AACH;;;;EAN4CO;;kBAA5BvB","file":"lottery_animDataMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Data","sourcesContent":["/**\r\n * 浏览器存在内存限制 32位为1.0GB,64位为1.4GB,\r\n * 播放当前视频的时候,至少得把下一阶段的视频加载完毕。//->已更换播放方式\r\n */\r\nimport SingletonBase from \"../Singleton/SingletonBase\";\r\n\r\nexport default class lottery_animDataMgr extends SingletonBase {\r\n    resDir = {};\r\n    resUrl = 'Altas/little/';\r\n    static _onNewObject() {\r\n        let one = new lottery_animDataMgr();\r\n        return one;\r\n    }\r\n    //数据目录初始化\r\n    init(progressCallBack, callback) {\r\n        cc.loader.loadResDir(this.resUrl, cc.SpriteFrame, progressCallBack, (err, objects, urls) => {\r\n            if (err) {\r\n                console.log('错误', err);\r\n                return;\r\n            }\r\n            for (let index = 0, length = urls.length; index < length; index++) {\r\n                let one = urls[index].split('/');\r\n                let name = one[one.length - 2];\r\n                !this.resDir[name] && (this.resDir[name] = []);\r\n                this.resDir[name].push(objects[index]);\r\n            }\r\n            callback && callback();\r\n            console.log(this.resUrl, '加载完毕');\r\n        });\r\n    }\r\n    /*------------------------------------------对某个目录的处理------------------------------- */\r\n    //加载某个阶段的视频\r\n    loadResDir(urlName, progressCallBack, callback) {\r\n        // if (this.resDir[urlName] && this.resDir[urlName].length) return;\r\n\r\n    }\r\n    //释放某个阶段的视频\r\n    releaseResDir(url) {\r\n        cc.loader.releaseResDir(this.resUrl + url);\r\n        this.resDir[url].length = 0;\r\n    }\r\n\r\n}"]}