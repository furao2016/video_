{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\VideoSimple\\js\\lib/assets\\VideoSimple\\js\\lib\\AAC.js"],"names":["module","exports","aac","gwin","global","AV","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","__slice","slice","__bind","fn","me","apply","arguments","__indexOf","indexOf","item","i","l","length","Base","fnTest","extend","prop","Class","keys","_ref","_super","Object","test","ret","tmp","Bitstream","stream","bitPosition","copy","result","offset","available","bits","advance","pos","rewind","Math","abs","seek","curOffset","align","read","signed","a","a0","a1","a2","a3","a4","mBits","peekUInt8","peekUInt16","peekUInt24","peekUInt32","pow","floor","Error","peek","readLSB","peekLSB","AVBuffer","Buffer","BlobBuilder","URL","input","Uint8Array","data","ArrayBuffer","Array","isArray","isBuffer","buffer","byteOffset","BYTES_PER_ELEMENT","next","prev","allocate","size","position","subarray","MozBlobBuilder","WebKitBlobBuilder","webkitURL","mozURL","makeBlob","type","bb","Blob","_error","append","getBlob","makeBlobURL","createObjectURL","revokeBlobURL","url","revokeObjectURL","toBlob","toBlobURL","UnderflowError","name","stack","BufferList","first","last","numBuffers","availableBytes","availableBuffers","reset","_results","EventEmitter","on","event","_base","events","push","off","index","splice","once","cb","emit","args","_i","_len","_ref1","Stream","buf","decodeString","float32","float64","float64Fallback","float80","int16","int32","int8","nativeEndian","uint16","uint32","uint8","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","list","localOffset","fromBuffer","bytes","remainingBytes","readUInt8","littleEndian","_j","readInt8","peekInt8","readUInt16","readInt16","peekInt16","readUInt24","readInt24","peekInt24","readUInt32","readInt32","peekInt32","readFloat32","peekFloat32","readFloat64","exp","frac","high","low","out","sign","NaN","Infinity","peekFloat64","readFloat80","peekFloat80","readBuffer","to","peekBuffer","readSingleBuffer","peekSingleBuffer","readString","encoding","peekString","b1","b2","b3","b4","bom","c","end","nullEnd","pt","w1","w2","toLowerCase","String","fromCharCode","Decoder","codecs","demuxer","format","bitstream","receivedFinalBuffer","waiting","_this","cookie","error","setCookie","chunk","decode","init","readChunk","packet","timestamp","seekPoint","register","id","decoder","find","Demuxer","formats","probe","source","received","e","err","seekPoints","addSeekPoint","searchTimestamp","backward","mid","time","framesPerPacket","bytesPerPacket","AudioDevice","devices","sampleRate","channels","updateTime","playing","currentTime","_lastTime","start","device","create","getDeviceTime","_timer","setInterval","refill","stop","clearInterval","destroy","supported","MozillaAudioDevice","createTimer","destroyTimer","cc","sys","isNative","Audio","audio","mozSetup","writePosition","prebufferSize","tail","timer","currentPosition","written","mozWriteAudio","mozCurrentSampleOffset","interval","worker","Worker","onmessage","terminate","Asset","_decode","findDecoder","buffered","duration","metadata","active","BufferSource","fromBufferSource","serverUrl","shouldDecode","pause","get","callback","value","decodePacket","decodeToBuffer","chunks","dataHandler","set","div","formatID","floatingPoint","bitsPerChannel","sample","_ref2","Resampler","fromSampleRate","toSampleRate","inputBufferLength","initialize","resampler","bypassResampler","ratioWeight","compileLinearInterpolationFunction","lastWeight","compileMultiTapFunction","tailExists","outputBufferSize","ceil","outputBuffer","lastOutput","toCompile","channel","Function","inputBuffer","WebAudioDevice","createProcessor","sharedContext","AudioContext","webkitAudioContext","node","connect","destination","state","close","buffSize","context","deviceSampleRate","bufferSize","onaudioprocess","channelCount","n","_k","numberOfChannels","getChannelData","disconnect","Filter","defineProperty","process","BalanceFilter","pan","max","min","VolumeFilter","vol","Player","asset","startPlaying","volume","filters","queue","Queue","preload","startedPreloading","play","togglePlayback","frame","frameOffset","channelsPerFrame","bufferOffset","filter","write","readyMark","finished","buffering","ended","buffers","shift","clearImmediate","setImmediate","loop","paused","setTimeout","clearTimeout","add","bytesLoaded","ADTSDemuxer","readHeader","protectionAbsent","profile","samplingIndex","chanConfig","frameLength","numFrames","sentHeader","header","SAMPLE_RATES","CCEElement","config","ics","ICStream","channelPair","idSelect","chSelect","gain","BEFORE_TNS","AFTER_TNS","AFTER_IMDCT","CCE_SCALE","couplingPoint","coupledCount","gainCount","scale","groupCount","info","maxSFB","bandTypes","idx","cge","gainCache","Huffman","decodeScaleFactor","gain_i","g","sfb","ZERO_BT","t","s","applyIndependentCoupling","iqData","applyDependentCoupling","swbOffsets","gains","len","groupLength","group","k","swb","CPEElement","ms_used","left","right","MAX_MS_MASK","MASK_TYPE_ALL_0","MASK_TYPE_USED","MASK_TYPE_ALL_1","MASK_TYPE_RESERVED","commonWindow","mask","maskPresent","val","AACDecoder","AOT_AAC_MAIN","AOT_AAC_LC","AOT_AAC_LTP","AOT_ESCAPE","CHANNEL_CONFIG_NONE","CHANNEL_CONFIG_MONO","CHANNEL_CONFIG_STEREO","CHANNEL_CONFIG_STEREO_PLUS_CENTER","CHANNEL_CONFIG_STEREO_PLUS_CENTER_PLUS_REAR_MONO","CHANNEL_CONFIG_FIVE","CHANNEL_CONFIG_FIVE_PLUS_ONE","CHANNEL_CONFIG_SEVEN_PLUS_ONE","sampleIndex","sectionDataResilience","scalefactorResilience","spectralDataResilience","filter_bank","FilterBank","SCE_ELEMENT","CPE_ELEMENT","CCE_ELEMENT","LFE_ELEMENT","DSE_ELEMENT","PCE_ELEMENT","FIL_ELEMENT","END_ELEMENT","cces","elements","elementType","cpe","cce","count","output","j","mult","processSingle","processPair","element","applyChannelCoupling","tnsPresent","tns","gainPresent","sbrPresent","l_info","r_info","l_data","r_data","processMS","processIS","offsets","windowGroups","sectEnd","scaleFactors","groupOff","INTENSITY_BT","INTENSITY_BT2","w","sfbCBl","sfbCBr","NOISE_BT","data1","data2","isChannelPair","applyCoupling","FFT","roots","generateFFTTableShort","generateFFTTableLong","rev","b","d","e1","e2","PI","cosT","cos","sinT","sin","f","lastImag","forward","imOffset","ii","tmpInputI","m","km","tmpI","tmpJK","rootRe","rootIm","zRe","zIm","smallFrames","shortLength","trans","mdctShort","MDCT","mdctLong","overlaps","generateSineWindow","generateKBDWindow","alpha","PIN","sum","alpha2","bessel","sqrt","SINE_1024","SINE_128","KBD_1024","KBD_128","LONG_WINDOWS","SHORT_WINDOWS","overlap","windowShape","windowShapePrev","longWindows","shortWindows","longWindowsPrev","shortWindowsPrev","shortLen","windowSequence","ONLY_LONG_SEQUENCE","LONG_START_SEQUENCE","EIGHT_SHORT_SEQUENCE","LONG_STOP_SEQUENCE","HCB1","HCB2","HCB3","HCB4","HCB5","HCB6","HCB7","HCB8","HCB9","HCB10","HCB11","HCB_SF","CODEBOOKS","UNSIGNED","QUAD_LEN","PAIR_LEN","findOffset","table","cw","signValues","getEscape","decodeSpectralData","HCB","ICSInfo","MAX_SECTIONS","randomState","TNS","specBuf","FIRST_PAIR_BT","ESC_BT","MAX_WINDOW_GROUP_COUNT","SF_DELTA","SF_OFFSET","globalGain","decodeBandTypes","decodeScaleFactors","pulsePresent","decodePulseData","escape","bandType","incr","noiseFlag","runEnd","SCALEFACTOR_TABLE","pulseCount","pulseSWB","swbCount","pulseOffset","pulseAmp","groupLen","hcb","width","energy","num","IQ_TABLE","ltpData1Present","ltpData2Present","windowCount","SWB_OFFSET_128","SWB_SHORT_WINDOW_COUNT","predictorPresent","SWB_OFFSET_1024","SWB_LONG_WINDOW_COUNT","decodePrediction","N","N2","N4","N8","sincos","MDCT_TABLE_2048","MDCT_TABLE_256","MDCT_TABLE_1920","MDCT_TABLE_240","fft","inOffset","outOffset","SWB_OFFSET_1024_96","SWB_OFFSET_128_96","SWB_OFFSET_1024_64","SWB_OFFSET_128_64","SWB_OFFSET_1024_48","SWB_OFFSET_128_48","SWB_OFFSET_1024_32","SWB_OFFSET_1024_24","SWB_OFFSET_128_24","SWB_OFFSET_1024_16","SWB_OFFSET_128_16","SWB_OFFSET_1024_8","SWB_OFFSET_128_8","four_thirds","maxBands","TNS_MAX_BANDS_1024","nFilt","direction","order","coef","filt","TNS_MAX_ORDER","lpc","SHORT_BITS","LONG_BITS","TNS_COEF_1_3","TNS_COEF_0_3","TNS_COEF_1_4","TNS_COEF_0_4","TNS_TABLES","TNS_MAX_BANDS_128","coefRes","nFilt_w","length_w","order_w","direction_w","coef_w","coefCompress","coefLen","order_w_filt","coef_w_filt","mmm","bottom","top","autoc","r","inc"],"mappings":";;;;;;AAAAA,OAAOC,OAAP,GAAiBC,GAAjB;AACA,SAASA,GAAT,CAAaC,IAAb,EAAkB;AACd,KAAC,UAAUC,MAAV,EAAkB;AACf,YAAIC,KAAKD,OAAOC,EAAP,GAAY,EAArB;AACA,YAAIC,YAAY,GAAGC,cAAnB;AAAA,YACIC,YAAY,SAAZA,SAAY,CAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACjC,iBAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AACpB,oBAAIJ,UAAUM,IAAV,CAAeF,MAAf,EAAuBC,GAAvB,CAAJ,EAAiCF,MAAME,GAAN,IAAaD,OAAOC,GAAP,CAAb;AACpC;;AAED,qBAASE,IAAT,GAAgB;AACZ,qBAAKC,WAAL,GAAmBL,KAAnB;AACH;;AAEDI,iBAAKE,SAAL,GAAiBL,OAAOK,SAAxB;AACAN,kBAAMM,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AACAJ,kBAAMO,SAAN,GAAkBN,OAAOK,SAAzB;AACA,mBAAON,KAAP;AACH,SAdL;AAAA,YAeIQ,UAAU,GAAGC,KAfjB;AAAA,YAgBIC,SAAS,SAATA,MAAS,CAAUC,EAAV,EAAcC,EAAd,EAAkB;AACvB,mBAAO,YAAY;AACf,uBAAOD,GAAGE,KAAH,CAASD,EAAT,EAAaE,SAAb,CAAP;AACH,aAFD;AAGH,SApBL;AAAA,YAoBOC,YAAY,GAAGC,OAAH,IAAc,UAAUC,IAAV,EAAgB;AACzC,iBAAK,IAAIC,IAAI,CAAR,EAAWC,IAAI,KAAKC,MAAzB,EAAiCF,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;AACzC,oBAAIA,KAAK,IAAL,IAAa,KAAKA,CAAL,MAAYD,IAA7B,EAAmC,OAAOC,CAAP;AACtC;AACD,mBAAO,CAAC,CAAR;AACH,SAzBL;;AA2BA,YAAIG,OAAOzB,GAAGyB,IAAH,GAAW,YAAY;AAC9B,gBAAIC,MAAJ;;AAEA,qBAASD,IAAT,GAAgB,CACf;;AAEDC,qBAAS,YAAT;AACAD,iBAAKE,MAAL,GAAc,UAAUC,IAAV,EAAgB;AAC1B,oBAAIC,KAAJ,EAAWd,EAAX,EAAeT,GAAf,EAAoBwB,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC;AACAH,wBAAS,UAAUG,MAAV,EAAkB;AACvB7B,8BAAU0B,KAAV,EAAiBG,MAAjB;;AAEA,6BAASH,KAAT,GAAiB;AACb,+BAAOA,MAAMlB,SAAN,CAAgBF,WAAhB,CAA4BQ,KAA5B,CAAkC,IAAlC,EAAwCC,SAAxC,CAAP;AACH;;AAED,2BAAOW,KAAP;AACH,iBARO,CAQL,IARK,CAAR;AASA,oBAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC5BE,2BAAOG,OAAOH,IAAP,CAAYD,MAAMnB,SAAlB,CAAP;AACAkB,yBAAKrB,IAAL,CAAUsB,KAAV,EAAiBA,KAAjB;AACAD,2BAAO,EAAP;AACAG,2BAAOF,MAAMnB,SAAb;AACA,yBAAKJ,GAAL,IAAYyB,IAAZ,EAAkB;AACdhB,6BAAKgB,KAAKzB,GAAL,CAAL;AACA,4BAAIa,UAAUZ,IAAV,CAAeuB,IAAf,EAAqBxB,GAArB,IAA4B,CAAhC,EAAmC;AAC/BsB,iCAAKtB,GAAL,IAAYS,EAAZ;AACH;AACJ;AACJ;AACDiB,yBAASH,MAAMlB,SAAf;AACA,qBAAKL,GAAL,IAAYsB,IAAZ,EAAkB;AACdb,yBAAKa,KAAKtB,GAAL,CAAL;AACA,wBAAI,OAAOS,EAAP,KAAc,UAAd,IAA4BW,OAAOQ,IAAP,CAAYnB,EAAZ,CAAhC,EAAiD;AAC7C,yBAAC,UAAUT,GAAV,EAAeS,EAAf,EAAmB;AAChB,mCAAOc,MAAMnB,SAAN,CAAgBJ,GAAhB,IAAuB,YAAY;AACtC,oCAAI6B,GAAJ,EAASC,GAAT;AACAA,sCAAM,KAAKJ,MAAX;AACA,qCAAKA,MAAL,GAAcA,OAAO1B,GAAP,CAAd;AACA6B,sCAAMpB,GAAGE,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAN;AACA,qCAAKc,MAAL,GAAcI,GAAd;AACA,uCAAOD,GAAP;AACH,6BAPD;AAQH,yBATD,EASG7B,GATH,EASQS,EATR;AAUH,qBAXD,MAWO;AACHc,8BAAMnB,SAAN,CAAgBJ,GAAhB,IAAuBS,EAAvB;AACH;AACJ;AACD,uBAAOc,KAAP;AACH,aA1CD;AA2CA,mBAAOJ,IAAP;AACH,SAnDoB,EAArB;;AAqDA,YAAIY,YAAYrC,GAAGqC,SAAH,GAAgB,YAAY;AACxC,qBAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACvB,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKC,WAAL,GAAmB,CAAnB;AACH;;AAEDF,sBAAU3B,SAAV,CAAoB8B,IAApB,GAA2B,YAAY;AACnC,oBAAIC,MAAJ;AACAA,yBAAS,IAAIJ,SAAJ,CAAc,KAAKC,MAAL,CAAYE,IAAZ,EAAd,CAAT;AACAC,uBAAOF,WAAP,GAAqB,KAAKA,WAA1B;AACA,uBAAOE,MAAP;AACH,aALD;;AAOAJ,sBAAU3B,SAAV,CAAoBgC,MAApB,GAA6B,YAAY;AACrC,uBAAO,IAAI,KAAKJ,MAAL,CAAYI,MAAhB,GAAyB,KAAKH,WAArC;AACH,aAFD;;AAIAF,sBAAU3B,SAAV,CAAoBiC,SAApB,GAAgC,UAAUC,IAAV,EAAgB;AAC5C,uBAAO,KAAKN,MAAL,CAAYK,SAAZ,CAAsB,CAACC,OAAO,CAAP,GAAW,KAAKL,WAAjB,IAAgC,CAAtD,CAAP;AACH,aAFD;;AAIAF,sBAAU3B,SAAV,CAAoBmC,OAApB,GAA8B,UAAUD,IAAV,EAAgB;AAC1C,oBAAIE,GAAJ;AACAA,sBAAM,KAAKP,WAAL,GAAmBK,IAAzB;AACA,qBAAKN,MAAL,CAAYO,OAAZ,CAAoBC,OAAO,CAA3B;AACA,uBAAO,KAAKP,WAAL,GAAmBO,MAAM,CAAhC;AACH,aALD;;AAOAT,sBAAU3B,SAAV,CAAoBqC,MAApB,GAA6B,UAAUH,IAAV,EAAgB;AACzC,oBAAIE,GAAJ;AACAA,sBAAM,KAAKP,WAAL,GAAmBK,IAAzB;AACA,qBAAKN,MAAL,CAAYS,MAAZ,CAAmBC,KAAKC,GAAL,CAASH,OAAO,CAAhB,CAAnB;AACA,uBAAO,KAAKP,WAAL,GAAmBO,MAAM,CAAhC;AACH,aALD;;AAOAT,sBAAU3B,SAAV,CAAoBwC,IAApB,GAA2B,UAAUR,MAAV,EAAkB;AACzC,oBAAIS,SAAJ;AACAA,4BAAY,KAAKT,MAAL,EAAZ;AACA,oBAAIA,SAASS,SAAb,EAAwB;AACpB,2BAAO,KAAKN,OAAL,CAAaH,SAASS,SAAtB,CAAP;AACH,iBAFD,MAEO,IAAIT,SAASS,SAAb,EAAwB;AAC3B,2BAAO,KAAKJ,MAAL,CAAYI,YAAYT,MAAxB,CAAP;AACH;AACJ,aARD;;AAUAL,sBAAU3B,SAAV,CAAoB0C,KAApB,GAA4B,YAAY;AACpC,oBAAI,KAAKb,WAAL,KAAqB,CAAzB,EAA4B;AACxB,yBAAKA,WAAL,GAAmB,CAAnB;AACA,2BAAO,KAAKD,MAAL,CAAYO,OAAZ,CAAoB,CAApB,CAAP;AACH;AACJ,aALD;;AAOAR,sBAAU3B,SAAV,CAAoB2C,IAApB,GAA2B,UAAUT,IAAV,EAAgBU,MAAhB,EAAwB;AAC/C,oBAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,KAA3B;AACA,oBAAIjB,SAAS,CAAb,EAAgB;AACZ,2BAAO,CAAP;AACH;AACDiB,wBAAQjB,OAAO,KAAKL,WAApB;AACA,oBAAIsB,SAAS,CAAb,EAAgB;AACZN,wBAAI,CAAE,KAAKjB,MAAL,CAAYwB,SAAZ,MAA2B,KAAKvB,WAAjC,GAAgD,IAAjD,MAA4D,IAAIK,IAApE;AACH,iBAFD,MAEO,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAI,CAAE,KAAKjB,MAAL,CAAYyB,UAAZ,MAA4B,KAAKxB,WAAlC,GAAiD,MAAlD,MAA+D,KAAKK,IAAxE;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAI,CAAE,KAAKjB,MAAL,CAAY0B,UAAZ,MAA4B,KAAKzB,WAAlC,GAAiD,QAAlD,MAAiE,KAAKK,IAA1E;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAK,KAAKjB,MAAL,CAAY2B,UAAZ,MAA4B,KAAK1B,WAAlC,KAAoD,KAAKK,IAA7D;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBL,yBAAK,KAAKlB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,IAA2B,YAAhC;AACAL,yBAAK,KAAKnB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,EAA5B,KAAmC,CAAxC;AACAJ,yBAAK,KAAKpB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,EAAjC;AACAH,yBAAK,KAAKrB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,CAAjC;AACAF,yBAAK,KAAKtB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAL;AACAP,wBAAIC,KAAKC,EAAL,GAAUC,EAAV,GAAeC,EAAf,GAAoBC,EAAxB;AACAL,yBAAKP,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAtB,CAAL;AACAgB,wBAAIP,KAAKmB,KAAL,CAAWZ,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAV,GAAwBK,IAApC,CAAf,CAAJ;AACH,iBATM,MASA;AACH,0BAAM,IAAIwB,KAAJ,CAAU,gBAAV,CAAN;AACH;AACD,oBAAId,MAAJ,EAAY;AACR,wBAAIO,QAAQ,EAAZ,EAAgB;AACZ,4BAAIN,MAAOX,OAAO,CAAlB,EAAsB;AAClBW,gCAAI,CAAC,CAAC,KAAKX,IAAL,KAAc,CAAf,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ,qBAJD,MAIO;AACH,4BAAIA,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,OAAO,CAAnB,CAAJ,GAA4B,CAAhC,EAAmC;AAC/BW,gCAAI,CAACP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ;AACJ;AACD,qBAAKV,OAAL,CAAaD,IAAb;AACA,uBAAOW,CAAP;AACH,aAvCD;;AAyCAlB,sBAAU3B,SAAV,CAAoB2D,IAApB,GAA2B,UAAUzB,IAAV,EAAgBU,MAAhB,EAAwB;AAC/C,oBAAIC,CAAJ,EAAOC,EAAP,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB,EAA2BC,KAA3B;AACA,oBAAIjB,SAAS,CAAb,EAAgB;AACZ,2BAAO,CAAP;AACH;AACDiB,wBAAQjB,OAAO,KAAKL,WAApB;AACA,oBAAIsB,SAAS,CAAb,EAAgB;AACZN,wBAAI,CAAE,KAAKjB,MAAL,CAAYwB,SAAZ,MAA2B,KAAKvB,WAAjC,GAAgD,IAAjD,MAA4D,IAAIK,IAApE;AACH,iBAFD,MAEO,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAI,CAAE,KAAKjB,MAAL,CAAYyB,UAAZ,MAA4B,KAAKxB,WAAlC,GAAiD,MAAlD,MAA+D,KAAKK,IAAxE;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAI,CAAE,KAAKjB,MAAL,CAAY0B,UAAZ,MAA4B,KAAKzB,WAAlC,GAAiD,QAAlD,MAAiE,KAAKK,IAA1E;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBN,wBAAK,KAAKjB,MAAL,CAAY2B,UAAZ,MAA4B,KAAK1B,WAAlC,KAAoD,KAAKK,IAA7D;AACH,iBAFM,MAEA,IAAIiB,SAAS,EAAb,EAAiB;AACpBL,yBAAK,KAAKlB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,IAA2B,YAAhC;AACAL,yBAAK,KAAKnB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,EAA5B,KAAmC,CAAxC;AACAJ,yBAAK,KAAKpB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,EAAjC;AACAH,yBAAK,KAAKrB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,KAA4B,CAAjC;AACAF,yBAAK,KAAKtB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAL;AACAP,wBAAIC,KAAKC,EAAL,GAAUC,EAAV,GAAeC,EAAf,GAAoBC,EAAxB;AACAL,yBAAKP,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAtB,CAAL;AACAgB,wBAAIP,KAAKmB,KAAL,CAAWZ,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAV,GAAwBK,IAApC,CAAf,CAAJ;AACH,iBATM,MASA;AACH,0BAAM,IAAIwB,KAAJ,CAAU,gBAAV,CAAN;AACH;AACD,oBAAId,MAAJ,EAAY;AACR,wBAAIO,QAAQ,EAAZ,EAAgB;AACZ,4BAAIN,MAAOX,OAAO,CAAlB,EAAsB;AAClBW,gCAAI,CAAC,CAAC,KAAKX,IAAL,KAAc,CAAf,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ,qBAJD,MAIO;AACH,4BAAIA,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,OAAO,CAAnB,CAAJ,GAA4B,CAAhC,EAAmC;AAC/BW,gCAAI,CAACP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ;AACJ;AACD,uBAAOA,CAAP;AACH,aAtCD;;AAwCAlB,sBAAU3B,SAAV,CAAoB4D,OAApB,GAA8B,UAAU1B,IAAV,EAAgBU,MAAhB,EAAwB;AAClD,oBAAIC,CAAJ,EAAOM,KAAP;AACA,oBAAIjB,SAAS,CAAb,EAAgB;AACZ,2BAAO,CAAP;AACH;AACD,oBAAIA,OAAO,EAAX,EAAe;AACX,0BAAM,IAAIwB,KAAJ,CAAU,gBAAV,CAAN;AACH;AACDP,wBAAQjB,OAAO,KAAKL,WAApB;AACAgB,oBAAK,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,KAA+B,KAAKvB,WAAxC;AACA,oBAAIsB,QAAQ,CAAZ,EAAe;AACXN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,IAAI,KAAKvB,WAA7C;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,KAAK,KAAKvB,WAA9C;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,KAAK,KAAKvB,WAAzC,KAA0D,CAA/D;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,GAA6Bd,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAtB,CAAlC;AACH;AACD,oBAAIsB,SAAS,EAAb,EAAiB;AACbN,yBAAKP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,CAAL;AACH,iBAFD,MAEO;AACHW,yBAAK,CAAC,KAAKX,IAAN,IAAc,CAAnB;AACH;AACD,oBAAIU,MAAJ,EAAY;AACR,wBAAIO,QAAQ,EAAZ,EAAgB;AACZ,4BAAIN,MAAOX,OAAO,CAAlB,EAAsB;AAClBW,gCAAI,CAAC,CAAC,KAAKX,IAAL,KAAc,CAAf,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ,qBAJD,MAIO;AACH,4BAAIA,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,OAAO,CAAnB,CAAJ,GAA4B,CAAhC,EAAmC;AAC/BW,gCAAI,CAACP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ;AACJ;AACD,qBAAKV,OAAL,CAAaD,IAAb;AACA,uBAAOW,CAAP;AACH,aAxCD;;AA0CAlB,sBAAU3B,SAAV,CAAoB6D,OAApB,GAA8B,UAAU3B,IAAV,EAAgBU,MAAhB,EAAwB;AAClD,oBAAIC,CAAJ,EAAOM,KAAP;AACA,oBAAIjB,SAAS,CAAb,EAAgB;AACZ,2BAAO,CAAP;AACH;AACD,oBAAIA,OAAO,EAAX,EAAe;AACX,0BAAM,IAAIwB,KAAJ,CAAU,gBAAV,CAAN;AACH;AACDP,wBAAQjB,OAAO,KAAKL,WAApB;AACAgB,oBAAK,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,KAA+B,KAAKvB,WAAxC;AACA,oBAAIsB,QAAQ,CAAZ,EAAe;AACXN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,IAAI,KAAKvB,WAA7C;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,KAAK,KAAKvB,WAA9C;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,IAA+B,KAAK,KAAKvB,WAAzC,KAA0D,CAA/D;AACH;AACD,oBAAIsB,QAAQ,EAAZ,EAAgB;AACZN,yBAAM,KAAKjB,MAAL,CAAYwB,SAAZ,CAAsB,CAAtB,CAAD,GAA6Bd,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK3B,WAAtB,CAAlC;AACH;AACD,oBAAIsB,SAAS,EAAb,EAAiB;AACbN,yBAAKP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,CAAL;AACH,iBAFD,MAEO;AACHW,yBAAK,CAAC,KAAKX,IAAN,IAAc,CAAnB;AACH;AACD,oBAAIU,MAAJ,EAAY;AACR,wBAAIO,QAAQ,EAAZ,EAAgB;AACZ,4BAAIN,MAAOX,OAAO,CAAlB,EAAsB;AAClBW,gCAAI,CAAC,CAAC,KAAKX,IAAL,KAAc,CAAf,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ,qBAJD,MAIO;AACH,4BAAIA,IAAIP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,OAAO,CAAnB,CAAJ,GAA4B,CAAhC,EAAmC;AAC/BW,gCAAI,CAACP,KAAKkB,GAAL,CAAS,CAAT,EAAYtB,IAAZ,IAAoBW,CAArB,IAA0B,CAAC,CAA/B;AACH;AACJ;AACJ;AACD,uBAAOA,CAAP;AACH,aAvCD;;AAyCA,mBAAOlB,SAAP;AACH,SAzN8B,EAA/B;;AA2NA,YAAImC,WAAWxE,GAAGyE,MAAH,GAAa,YAAY;AACpC,gBAAIC,WAAJ,EAAiBC,GAAjB;;AAEA,qBAASH,QAAT,CAAkBI,KAAlB,EAAyB;AACrB,oBAAI7C,IAAJ;AACA,oBAAI6C,iBAAiBC,UAArB,EAAiC;AAC7B,yBAAKC,IAAL,GAAYF,KAAZ;AACH,iBAFD,MAEO,IAAIA,iBAAiBG,WAAjB,IAAgCC,MAAMC,OAAN,CAAcL,KAAd,CAAhC,IAAwD,OAAOA,KAAP,KAAiB,QAAzE,KAAsF,CAAC7C,OAAOhC,OAAO0E,MAAf,KAA0B,IAA1B,GAAiC1C,KAAKmD,QAAL,CAAcN,KAAd,CAAjC,GAAwD,KAAK,CAAnJ,CAAJ,EAA2J;AAC9J,yBAAKE,IAAL,GAAY,IAAID,UAAJ,CAAeD,KAAf,CAAZ;AACH,iBAFM,MAEA,IAAIA,MAAMO,MAAN,YAAwBJ,WAA5B,EAAyC;AAC5C,yBAAKD,IAAL,GAAY,IAAID,UAAJ,CAAeD,MAAMO,MAArB,EAA6BP,MAAMQ,UAAnC,EAA+CR,MAAMpD,MAAN,GAAeoD,MAAMS,iBAApE,CAAZ;AACH,iBAFM,MAEA,IAAIT,iBAAiBJ,QAArB,EAA+B;AAClC,yBAAKM,IAAL,GAAYF,MAAME,IAAlB;AACH,iBAFM,MAEA;AACH,0BAAM,IAAIV,KAAJ,CAAU,wCAAV,CAAN;AACH;AACD,qBAAK5C,MAAL,GAAc,KAAKsD,IAAL,CAAUtD,MAAxB;AACA,qBAAK8D,IAAL,GAAY,IAAZ;AACA,qBAAKC,IAAL,GAAY,IAAZ;AACH;;AAEDf,qBAASgB,QAAT,GAAoB,UAAUC,IAAV,EAAgB;AAChC,uBAAO,IAAIjB,QAAJ,CAAaiB,IAAb,CAAP;AACH,aAFD;;AAIAjB,qBAAS9D,SAAT,CAAmB8B,IAAnB,GAA0B,YAAY;AAClC,uBAAO,IAAIgC,QAAJ,CAAa,IAAIK,UAAJ,CAAe,KAAKC,IAApB,CAAb,CAAP;AACH,aAFD;;AAIAN,qBAAS9D,SAAT,CAAmBG,KAAnB,GAA2B,UAAU6E,QAAV,EAAoBlE,MAApB,EAA4B;AACnD,oBAAIA,UAAU,IAAd,EAAoB;AAChBA,6BAAS,KAAKA,MAAd;AACH;AACD,oBAAIkE,aAAa,CAAb,IAAkBlE,UAAU,KAAKA,MAArC,EAA6C;AACzC,2BAAO,IAAIgD,QAAJ,CAAa,KAAKM,IAAlB,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,IAAIN,QAAJ,CAAa,KAAKM,IAAL,CAAUa,QAAV,CAAmBD,QAAnB,EAA6BA,WAAWlE,MAAxC,CAAb,CAAP;AACH;AACJ,aATD;;AAWAkD,0BAAc3E,OAAO2E,WAAP,IAAsB3E,OAAO6F,cAA7B,IAA+C7F,OAAO8F,iBAApE;;AAEAlB,kBAAM5E,OAAO4E,GAAP,IAAc5E,OAAO+F,SAArB,IAAkC/F,OAAOgG,MAA/C;;AAEAvB,qBAASwB,QAAT,GAAoB,UAAUlB,IAAV,EAAgBmB,IAAhB,EAAsB;AACtC,oBAAIC,EAAJ;AACA,oBAAID,QAAQ,IAAZ,EAAkB;AACdA,2BAAO,0BAAP;AACH;AACD,oBAAI;AACA,2BAAO,IAAIE,IAAJ,CAAS,CAACrB,IAAD,CAAT,EAAiB;AACpBmB,8BAAMA;AADc,qBAAjB,CAAP;AAGH,iBAJD,CAIE,OAAOG,MAAP,EAAe,CAChB;AACD,oBAAI1B,eAAe,IAAnB,EAAyB;AACrBwB,yBAAK,IAAIxB,WAAJ,EAAL;AACAwB,uBAAGG,MAAH,CAAUvB,IAAV;AACA,2BAAOoB,GAAGI,OAAH,CAAWL,IAAX,CAAP;AACH;AACD,uBAAO,IAAP;AACH,aAjBD;;AAmBAzB,qBAAS+B,WAAT,GAAuB,UAAUzB,IAAV,EAAgBmB,IAAhB,EAAsB;AACzC,uBAAOtB,OAAO,IAAP,GAAcA,IAAI6B,eAAJ,CAAoB,KAAKR,QAAL,CAAclB,IAAd,EAAoBmB,IAApB,CAApB,CAAd,GAA+D,KAAK,CAA3E;AACH,aAFD;;AAIAzB,qBAASiC,aAAT,GAAyB,UAAUC,GAAV,EAAe;AACpC,uBAAO/B,OAAO,IAAP,GAAcA,IAAIgC,eAAJ,CAAoBD,GAApB,CAAd,GAAyC,KAAK,CAArD;AACH,aAFD;;AAIAlC,qBAAS9D,SAAT,CAAmBkG,MAAnB,GAA4B,YAAY;AACpC,uBAAOpC,SAASwB,QAAT,CAAkB,KAAKlB,IAAL,CAAUK,MAA5B,CAAP;AACH,aAFD;;AAIAX,qBAAS9D,SAAT,CAAmBmG,SAAnB,GAA+B,YAAY;AACvC,uBAAOrC,SAAS+B,WAAT,CAAqB,KAAKzB,IAAL,CAAUK,MAA/B,CAAP;AACH,aAFD;;AAIA,mBAAOX,QAAP;AACH,SAhF0B,EAA3B;;AAkFA,YAAIsC,iBAAiB9G,GAAG8G,cAAH,GAAqB,UAAU9E,MAAV,EAAkB;AACxD7B,sBAAU2G,cAAV,EAA0B9E,MAA1B;;AAEA,qBAAS8E,cAAT,GAA0B;AACtBA,+BAAenG,SAAf,CAAyBF,WAAzB,CAAqCQ,KAArC,CAA2C,IAA3C,EAAiDC,SAAjD;AACA,qBAAK6F,IAAL,GAAY,gBAAZ;AACA,qBAAKC,KAAL,GAAa,IAAI5C,KAAJ,GAAY4C,KAAzB;AACH;;AAED,mBAAOF,cAAP;AACH,SAVwC,CAUtC1C,KAVsC,CAAzC;;AAYA,YAAI6C,aAAajH,GAAGiH,UAAH,GAAiB,YAAY;AAC1C,qBAASA,UAAT,GAAsB;AAClB,qBAAKC,KAAL,GAAa,IAAb;AACA,qBAAKC,IAAL,GAAY,IAAZ;AACA,qBAAKC,UAAL,GAAkB,CAAlB;AACA,qBAAKC,cAAL,GAAsB,CAAtB;AACA,qBAAKC,gBAAL,GAAwB,CAAxB;AACH;;AAEDL,uBAAWvG,SAAX,CAAqB8B,IAArB,GAA4B,YAAY;AACpC,oBAAIC,MAAJ;AACAA,yBAAS,IAAIwE,UAAJ,EAAT;AACAxE,uBAAOyE,KAAP,GAAe,KAAKA,KAApB;AACAzE,uBAAO0E,IAAP,GAAc,KAAKA,IAAnB;AACA1E,uBAAO2E,UAAP,GAAoB,KAAKA,UAAzB;AACA3E,uBAAO4E,cAAP,GAAwB,KAAKA,cAA7B;AACA5E,uBAAO6E,gBAAP,GAA0B,KAAKA,gBAA/B;AACA,uBAAO7E,MAAP;AACH,aATD;;AAWAwE,uBAAWvG,SAAX,CAAqB2F,MAArB,GAA8B,UAAUlB,MAAV,EAAkB;AAC5C,oBAAIpD,IAAJ;AACAoD,uBAAOI,IAAP,GAAc,KAAK4B,IAAnB;AACA,oBAAI,CAACpF,OAAO,KAAKoF,IAAb,KAAsB,IAA1B,EAAgC;AAC5BpF,yBAAKuD,IAAL,GAAYH,MAAZ;AACH;AACD,qBAAKgC,IAAL,GAAYhC,MAAZ;AACA,oBAAI,KAAK+B,KAAL,IAAc,IAAlB,EAAwB;AACpB,yBAAKA,KAAL,GAAa/B,MAAb;AACH;AACD,qBAAKkC,cAAL,IAAuBlC,OAAO3D,MAA9B;AACA,qBAAK8F,gBAAL;AACA,uBAAO,KAAKF,UAAL,EAAP;AACH,aAbD;;AAeAH,uBAAWvG,SAAX,CAAqBmC,OAArB,GAA+B,YAAY;AACvC,oBAAI,KAAKqE,KAAT,EAAgB;AACZ,yBAAKG,cAAL,IAAuB,KAAKH,KAAL,CAAW1F,MAAlC;AACA,yBAAK8F,gBAAL;AACA,yBAAKJ,KAAL,GAAa,KAAKA,KAAL,CAAW5B,IAAxB;AACA,2BAAO,KAAK4B,KAAL,IAAc,IAArB;AACH;AACD,uBAAO,KAAP;AACH,aARD;;AAUAD,uBAAWvG,SAAX,CAAqBqC,MAArB,GAA8B,YAAY;AACtC,oBAAIhB,IAAJ;AACA,oBAAI,KAAKmF,KAAL,IAAc,CAAC,KAAKA,KAAL,CAAW3B,IAA9B,EAAoC;AAChC,2BAAO,KAAP;AACH;AACD,qBAAK2B,KAAL,GAAa,CAAC,CAACnF,OAAO,KAAKmF,KAAb,KAAuB,IAAvB,GAA8BnF,KAAKwD,IAAnC,GAA0C,KAAK,CAAhD,KAAsD,KAAK4B,IAAxE;AACA,oBAAI,KAAKD,KAAT,EAAgB;AACZ,yBAAKG,cAAL,IAAuB,KAAKH,KAAL,CAAW1F,MAAlC;AACA,yBAAK8F,gBAAL;AACH;AACD,uBAAO,KAAKJ,KAAL,IAAc,IAArB;AACH,aAXD;;AAaAD,uBAAWvG,SAAX,CAAqB6G,KAArB,GAA6B,YAAY;AACrC,oBAAIC,QAAJ;AACAA,2BAAW,EAAX;AACA,uBAAO,KAAKzE,MAAL,EAAP,EAAsB;AAClB;AACH;AACD,uBAAOyE,QAAP;AACH,aAPD;;AASA,mBAAOP,UAAP;AAEH,SArEgC,EAAjC;;AAuEA,YAAIQ,eAAezH,GAAGiH,UAAH,GAAiB,UAAUjF,MAAV,EAAkB;AAClD7B,sBAAUsH,YAAV,EAAwBzF,MAAxB;;AAEA,qBAASyF,YAAT,GAAwB;AACpB,uBAAOA,aAAa9G,SAAb,CAAuBF,WAAvB,CAAmCQ,KAAnC,CAAyC,IAAzC,EAA+CC,SAA/C,CAAP;AACH;;AAEDuG,yBAAa/G,SAAb,CAAuBgH,EAAvB,GAA4B,UAAUC,KAAV,EAAiB5G,EAAjB,EAAqB;AAC7C,oBAAI6G,KAAJ;AACA,oBAAI,KAAKC,MAAL,IAAe,IAAnB,EAAyB;AACrB,yBAAKA,MAAL,GAAc,EAAd;AACH;AACD,oBAAI,CAACD,QAAQ,KAAKC,MAAd,EAAsBF,KAAtB,KAAgC,IAApC,EAA0C;AACtCC,0BAAMD,KAAN,IAAe,EAAf;AACH;AACD,uBAAO,KAAKE,MAAL,CAAYF,KAAZ,EAAmBG,IAAnB,CAAwB/G,EAAxB,CAAP;AACH,aATD;;AAWA0G,yBAAa/G,SAAb,CAAuBqH,GAAvB,GAA6B,UAAUJ,KAAV,EAAiB5G,EAAjB,EAAqB;AAC9C,oBAAI8G,MAAJ,EAAYG,KAAZ,EAAmBjG,IAAnB;AACA,oBAAI,KAAK8F,MAAL,IAAe,IAAnB,EAAyB;AACrB;AACH;AACD,oBAAI,CAAC9F,OAAO,KAAK8F,MAAb,KAAwB,IAAxB,GAA+B9F,KAAK4F,KAAL,CAA/B,GAA6C,KAAK,CAAtD,EAAyD;AACrD,wBAAI5G,MAAM,IAAV,EAAgB;AACZiH,gCAAQ,KAAKH,MAAL,CAAYF,KAAZ,EAAmBvG,OAAnB,CAA2BL,EAA3B,CAAR;AACA,4BAAI,CAACiH,KAAL,EAAY;AACR,mCAAO,KAAKH,MAAL,CAAYF,KAAZ,EAAmBM,MAAnB,CAA0BD,KAA1B,EAAiC,CAAjC,CAAP;AACH;AACJ,qBALD,MAKO;AACH,+BAAO,KAAKH,MAAL,CAAYF,KAAZ,CAAP;AACH;AACJ,iBATD,MASO,IAAIA,SAAS,IAAb,EAAmB;AACtB,2BAAOE,SAAS,EAAhB;AACH;AACJ,aAjBD;;AAmBAJ,yBAAa/G,SAAb,CAAuBwH,IAAvB,GAA8B,UAAUP,KAAV,EAAiB5G,EAAjB,EAAqB;AAC/C,oBAAIoH,GAAJ;AACA,uBAAO,KAAKT,EAAL,CAAQC,KAAR,EAAeQ,MAAK,cAAY;AACnC,yBAAKJ,GAAL,CAASJ,KAAT,EAAgBQ,GAAhB;AACA,2BAAOpH,GAAGE,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;AACH,iBAHM,CAAP;AAIH,aAND;;AAQAuG,yBAAa/G,SAAb,CAAuB0H,IAAvB,GAA8B,YAAY;AACtC,oBAAIC,IAAJ,EAAUV,KAAV,EAAiB5G,EAAjB,EAAqBuH,EAArB,EAAyBC,IAAzB,EAA+BxG,IAA/B,EAAqCyG,KAArC;AACAb,wBAAQzG,UAAU,CAAV,CAAR,EAAsBmH,OAAO,KAAKnH,UAAUM,MAAf,GAAwBZ,QAAQL,IAAR,CAAaW,SAAb,EAAwB,CAAxB,CAAxB,GAAqD,EAAlF;AACA,oBAAI,EAAE,CAACa,OAAO,KAAK8F,MAAb,KAAwB,IAAxB,GAA+B9F,KAAK4F,KAAL,CAA/B,GAA6C,KAAK,CAApD,CAAJ,EAA4D;AACxD;AACH;AACDa,wBAAQ,KAAKX,MAAL,CAAYF,KAAZ,EAAmB9G,KAAnB,EAAR;AACA,qBAAKyH,KAAK,CAAL,EAAQC,OAAOC,MAAMhH,MAA1B,EAAkC8G,KAAKC,IAAvC,EAA6CD,IAA7C,EAAmD;AAC/CvH,yBAAKyH,MAAMF,EAAN,CAAL;AACAvH,uBAAGE,KAAH,CAAS,IAAT,EAAeoH,IAAf;AACH;AACJ,aAXD;;AAaA,mBAAOZ,YAAP;AAEH,SA5DkC,CA4DhChG,IA5DgC,CAAnC;;AA8DA,YAAIgH,SAASzI,GAAGyI,MAAH,GAAa,YAAY;AAClC,gBAAIC,GAAJ,EAASC,YAAT,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,eAAzC,EAA0DC,OAA1D,EAAmEC,KAAnE,EAA0EC,KAA1E,EAAiFC,IAAjF,EAAuFC,YAAvF,EAAqGC,MAArG,EACIC,MADJ,EACYC,KADZ;;AAGAZ,kBAAM,IAAI3D,WAAJ,CAAgB,EAAhB,CAAN;;AAEAuE,oBAAQ,IAAIzE,UAAJ,CAAe6D,GAAf,CAAR;;AAEAQ,mBAAO,IAAIK,SAAJ,CAAcb,GAAd,CAAP;;AAEAU,qBAAS,IAAII,WAAJ,CAAgBd,GAAhB,CAAT;;AAEAM,oBAAQ,IAAIS,UAAJ,CAAef,GAAf,CAAR;;AAEAW,qBAAS,IAAIK,WAAJ,CAAgBhB,GAAhB,CAAT;;AAEAO,oBAAQ,IAAIU,UAAJ,CAAejB,GAAf,CAAR;;AAEAE,sBAAU,IAAIgB,YAAJ,CAAiBlB,GAAjB,CAAV;;AAEA,gBAAI,OAAOmB,YAAP,KAAwB,WAAxB,IAAuCA,iBAAiB,IAA5D,EAAkE;AAC9DhB,0BAAU,IAAIgB,YAAJ,CAAiBnB,GAAjB,CAAV;AACH;;AAEDS,2BAAe,IAAIK,WAAJ,CAAgB,IAAI3E,UAAJ,CAAe,CAAC,IAAD,EAAO,IAAP,CAAf,EAA6BM,MAA7C,EAAqD,CAArD,MAA4D,MAA3E;;AAEA,qBAASsD,MAAT,CAAgBqB,IAAhB,EAAsB;AAClB,qBAAKA,IAAL,GAAYA,IAAZ;AACA,qBAAKC,WAAL,GAAmB,CAAnB;AACA,qBAAKrH,MAAL,GAAc,CAAd;AACH;;AAED+F,mBAAOuB,UAAP,GAAoB,UAAU7E,MAAV,EAAkB;AAClC,oBAAI2E,IAAJ;AACAA,uBAAO,IAAI7C,UAAJ,EAAP;AACA6C,qBAAKzD,MAAL,CAAYlB,MAAZ;AACA,uBAAO,IAAIsD,MAAJ,CAAWqB,IAAX,CAAP;AACH,aALD;;AAOArB,mBAAO/H,SAAP,CAAiB8B,IAAjB,GAAwB,YAAY;AAChC,oBAAIC,MAAJ;AACAA,yBAAS,IAAIgG,MAAJ,CAAW,KAAKqB,IAAL,CAAUtH,IAAV,EAAX,CAAT;AACAC,uBAAOsH,WAAP,GAAqB,KAAKA,WAA1B;AACAtH,uBAAOC,MAAP,GAAgB,KAAKA,MAArB;AACA,uBAAOD,MAAP;AACH,aAND;;AAQAgG,mBAAO/H,SAAP,CAAiBiC,SAAjB,GAA6B,UAAUsH,KAAV,EAAiB;AAC1C,uBAAOA,SAAS,KAAKH,IAAL,CAAUzC,cAAV,GAA2B,KAAK0C,WAAhD;AACH,aAFD;;AAIAtB,mBAAO/H,SAAP,CAAiBwJ,cAAjB,GAAkC,YAAY;AAC1C,uBAAO,KAAKJ,IAAL,CAAUzC,cAAV,GAA2B,KAAK0C,WAAvC;AACH,aAFD;;AAIAtB,mBAAO/H,SAAP,CAAiBmC,OAAjB,GAA2B,UAAUoH,KAAV,EAAiB;AACxC,oBAAI,CAAC,KAAKtH,SAAL,CAAesH,KAAf,CAAL,EAA4B;AACxB,0BAAM,IAAInD,cAAJ,EAAN;AACH;AACD,qBAAKiD,WAAL,IAAoBE,KAApB;AACA,qBAAKvH,MAAL,IAAeuH,KAAf;AACA,uBAAO,KAAKH,IAAL,CAAU5C,KAAV,IAAmB,KAAK6C,WAAL,IAAoB,KAAKD,IAAL,CAAU5C,KAAV,CAAgB1F,MAA9D,EAAsE;AAClE,yBAAKuI,WAAL,IAAoB,KAAKD,IAAL,CAAU5C,KAAV,CAAgB1F,MAApC;AACA,yBAAKsI,IAAL,CAAUjH,OAAV;AACH;AACD,uBAAO,IAAP;AACH,aAXD;;AAaA4F,mBAAO/H,SAAP,CAAiBqC,MAAjB,GAA0B,UAAUkH,KAAV,EAAiB;AACvC,oBAAIA,QAAQ,KAAKvH,MAAjB,EAAyB;AACrB,0BAAM,IAAIoE,cAAJ,EAAN;AACH;AACD,oBAAI,CAAC,KAAKgD,IAAL,CAAU5C,KAAf,EAAsB;AAClB,yBAAK4C,IAAL,CAAU/G,MAAV;AACA,yBAAKgH,WAAL,GAAmB,KAAKD,IAAL,CAAU5C,KAAV,CAAgB1F,MAAnC;AACH;AACD,qBAAKuI,WAAL,IAAoBE,KAApB;AACA,qBAAKvH,MAAL,IAAeuH,KAAf;AACA,uBAAO,KAAKH,IAAL,CAAU5C,KAAV,CAAgB3B,IAAhB,IAAwB,KAAKwE,WAAL,GAAmB,CAAlD,EAAqD;AACjD,yBAAKD,IAAL,CAAU/G,MAAV;AACA,yBAAKgH,WAAL,IAAoB,KAAKD,IAAL,CAAU5C,KAAV,CAAgB1F,MAApC;AACH;AACD,uBAAO,IAAP;AACH,aAfD;;AAiBAiH,mBAAO/H,SAAP,CAAiBwC,IAAjB,GAAwB,UAAUwC,QAAV,EAAoB;AACxC,oBAAIA,WAAW,KAAKhD,MAApB,EAA4B;AACxB,2BAAO,KAAKG,OAAL,CAAa6C,WAAW,KAAKhD,MAA7B,CAAP;AACH,iBAFD,MAEO,IAAIgD,WAAW,KAAKhD,MAApB,EAA4B;AAC/B,2BAAO,KAAKK,MAAL,CAAY,KAAKL,MAAL,GAAcgD,QAA1B,CAAP;AACH;AACJ,aAND;;AAQA+C,mBAAO/H,SAAP,CAAiByJ,SAAjB,GAA6B,YAAY;AACrC,oBAAI5G,CAAJ;AACA,oBAAI,CAAC,KAAKZ,SAAL,CAAe,CAAf,CAAL,EAAwB;AACpB,0BAAM,IAAImE,cAAJ,EAAN;AACH;AACDvD,oBAAI,KAAKuG,IAAL,CAAU5C,KAAV,CAAgBpC,IAAhB,CAAqB,KAAKiF,WAA1B,CAAJ;AACA,qBAAKA,WAAL,IAAoB,CAApB;AACA,qBAAKrH,MAAL,IAAe,CAAf;AACA,oBAAI,KAAKqH,WAAL,KAAqB,KAAKD,IAAL,CAAU5C,KAAV,CAAgB1F,MAAzC,EAAiD;AAC7C,yBAAKuI,WAAL,GAAmB,CAAnB;AACA,yBAAKD,IAAL,CAAUjH,OAAV;AACH;AACD,uBAAOU,CAAP;AACH,aAbD;;AAeAkF,mBAAO/H,SAAP,CAAiBoD,SAAjB,GAA6B,UAAUpB,MAAV,EAAkB;AAC3C,oBAAIyC,MAAJ;AACA,oBAAIzC,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,oBAAI,CAAC,KAAKC,SAAL,CAAeD,SAAS,CAAxB,CAAL,EAAiC;AAC7B,0BAAM,IAAIoE,cAAJ,EAAN;AACH;AACDpE,yBAAS,KAAKqH,WAAL,GAAmBrH,MAA5B;AACAyC,yBAAS,KAAK2E,IAAL,CAAU5C,KAAnB;AACA,uBAAO/B,MAAP,EAAe;AACX,wBAAIA,OAAO3D,MAAP,GAAgBkB,MAApB,EAA4B;AACxB,+BAAOyC,OAAOL,IAAP,CAAYpC,MAAZ,CAAP;AACH;AACDA,8BAAUyC,OAAO3D,MAAjB;AACA2D,6BAASA,OAAOG,IAAhB;AACH;AACD,uBAAO,CAAP;AACH,aAlBD;;AAoBAmD,mBAAO/H,SAAP,CAAiB2C,IAAjB,GAAwB,UAAU4G,KAAV,EAAiBG,YAAjB,EAA+B;AACnD,oBAAI9I,CAAJ,EAAOgH,EAAP,EAAW+B,EAAX,EAAetI,IAAf;AACA,oBAAIqI,gBAAgB,IAApB,EAA0B;AACtBA,mCAAe,KAAf;AACH;AACD,oBAAIA,iBAAiBjB,YAArB,EAAmC;AAC/B,yBAAK7H,IAAIgH,KAAK,CAAd,EAAiBA,KAAK2B,KAAtB,EAA6B3I,IAAIgH,MAAM,CAAvC,EAA0C;AACtCgB,8BAAMhI,CAAN,IAAW,KAAK6I,SAAL,EAAX;AACH;AACJ,iBAJD,MAIO;AACH,yBAAK7I,IAAI+I,KAAKtI,OAAOkI,QAAQ,CAA7B,EAAgCI,MAAM,CAAtC,EAAyC/I,IAAI+I,MAAM,CAAC,CAApD,EAAuD;AACnDf,8BAAMhI,CAAN,IAAW,KAAK6I,SAAL,EAAX;AACH;AACJ;AACJ,aAdD;;AAgBA1B,mBAAO/H,SAAP,CAAiB2D,IAAjB,GAAwB,UAAU4F,KAAV,EAAiBvH,MAAjB,EAAyB0H,YAAzB,EAAuC;AAC3D,oBAAI9I,CAAJ,EAAOgH,EAAP,EAAW+B,EAAX;AACA,oBAAID,gBAAgB,IAApB,EAA0B;AACtBA,mCAAe,KAAf;AACH;AACD,oBAAIA,iBAAiBjB,YAArB,EAAmC;AAC/B,yBAAK7H,IAAIgH,KAAK,CAAd,EAAiBA,KAAK2B,KAAtB,EAA6B3I,IAAIgH,MAAM,CAAvC,EAA0C;AACtCgB,8BAAMhI,CAAN,IAAW,KAAKwC,SAAL,CAAepB,SAASpB,CAAxB,CAAX;AACH;AACJ,iBAJD,MAIO;AACH,yBAAKA,IAAI+I,KAAK,CAAd,EAAiBA,KAAKJ,KAAtB,EAA6B3I,IAAI+I,MAAM,CAAvC,EAA0C;AACtCf,8BAAMW,QAAQ3I,CAAR,GAAY,CAAlB,IAAuB,KAAKwC,SAAL,CAAepB,SAASpB,CAAxB,CAAvB;AACH;AACJ;AACJ,aAdD;;AAgBAmH,mBAAO/H,SAAP,CAAiB4J,QAAjB,GAA4B,YAAY;AACpC,qBAAKjH,IAAL,CAAU,CAAV;AACA,uBAAO6F,KAAK,CAAL,CAAP;AACH,aAHD;;AAKAT,mBAAO/H,SAAP,CAAiB6J,QAAjB,GAA4B,UAAU7H,MAAV,EAAkB;AAC1C,oBAAIA,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb;AACA,uBAAOwG,KAAK,CAAL,CAAP;AACH,aAND;;AAQAT,mBAAO/H,SAAP,CAAiB8J,UAAjB,GAA8B,UAAUJ,YAAV,EAAwB;AAClD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,uBAAOhB,OAAO,CAAP,CAAP;AACH,aAHD;;AAKAX,mBAAO/H,SAAP,CAAiBqD,UAAjB,GAA8B,UAAUrB,MAAV,EAAkB0H,YAAlB,EAAgC;AAC1D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,uBAAOhB,OAAO,CAAP,CAAP;AACH,aAND;;AAQAX,mBAAO/H,SAAP,CAAiB+J,SAAjB,GAA6B,UAAUL,YAAV,EAAwB;AACjD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,uBAAOpB,MAAM,CAAN,CAAP;AACH,aAHD;;AAKAP,mBAAO/H,SAAP,CAAiBgK,SAAjB,GAA6B,UAAUhI,MAAV,EAAkB0H,YAAlB,EAAgC;AACzD,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,uBAAOpB,MAAM,CAAN,CAAP;AACH,aAND;;AAQAP,mBAAO/H,SAAP,CAAiBiK,UAAjB,GAA8B,UAAUP,YAAV,EAAwB;AAClD,oBAAIA,YAAJ,EAAkB;AACd,2BAAO,KAAKI,UAAL,CAAgB,IAAhB,KAAyB,KAAKL,SAAL,MAAoB,EAA7C,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,CAAC,KAAKK,UAAL,MAAqB,CAAtB,IAA2B,KAAKL,SAAL,EAAlC;AACH;AACJ,aAND;;AAQA1B,mBAAO/H,SAAP,CAAiBsD,UAAjB,GAA8B,UAAUtB,MAAV,EAAkB0H,YAAlB,EAAgC;AAC1D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,oBAAI0H,YAAJ,EAAkB;AACd,2BAAO,KAAKrG,UAAL,CAAgBrB,MAAhB,EAAwB,IAAxB,KAAiC,KAAKoB,SAAL,CAAepB,SAAS,CAAxB,KAA8B,EAA/D,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,CAAC,KAAKqB,UAAL,CAAgBrB,MAAhB,KAA2B,CAA5B,IAAiC,KAAKoB,SAAL,CAAepB,SAAS,CAAxB,CAAxC;AACH;AACJ,aATD;;AAWA+F,mBAAO/H,SAAP,CAAiBkK,SAAjB,GAA6B,UAAUR,YAAV,EAAwB;AACjD,oBAAIA,YAAJ,EAAkB;AACd,2BAAO,KAAKI,UAAL,CAAgB,IAAhB,KAAyB,KAAKF,QAAL,MAAmB,EAA5C,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,CAAC,KAAKG,SAAL,MAAoB,CAArB,IAA0B,KAAKN,SAAL,EAAjC;AACH;AACJ,aAND;;AAQA1B,mBAAO/H,SAAP,CAAiBmK,SAAjB,GAA6B,UAAUnI,MAAV,EAAkB0H,YAAlB,EAAgC;AACzD,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,oBAAI0H,YAAJ,EAAkB;AACd,2BAAO,KAAKrG,UAAL,CAAgBrB,MAAhB,EAAwB,IAAxB,KAAiC,KAAK6H,QAAL,CAAc7H,SAAS,CAAvB,KAA6B,EAA9D,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,CAAC,KAAKgI,SAAL,CAAehI,MAAf,KAA0B,CAA3B,IAAgC,KAAKoB,SAAL,CAAepB,SAAS,CAAxB,CAAvC;AACH;AACJ,aATD;;AAWA+F,mBAAO/H,SAAP,CAAiBoK,UAAjB,GAA8B,UAAUV,YAAV,EAAwB;AAClD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,uBAAOf,OAAO,CAAP,CAAP;AACH,aAHD;;AAKAZ,mBAAO/H,SAAP,CAAiBuD,UAAjB,GAA8B,UAAUvB,MAAV,EAAkB0H,YAAlB,EAAgC;AAC1D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,uBAAOf,OAAO,CAAP,CAAP;AACH,aAND;;AAQAZ,mBAAO/H,SAAP,CAAiBqK,SAAjB,GAA6B,UAAUX,YAAV,EAAwB;AACjD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,uBAAOnB,MAAM,CAAN,CAAP;AACH,aAHD;;AAKAR,mBAAO/H,SAAP,CAAiBsK,SAAjB,GAA6B,UAAUtI,MAAV,EAAkB0H,YAAlB,EAAgC;AACzD,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,uBAAOnB,MAAM,CAAN,CAAP;AACH,aAND;;AAQAR,mBAAO/H,SAAP,CAAiBuK,WAAjB,GAA+B,UAAUb,YAAV,EAAwB;AACnD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,uBAAOxB,QAAQ,CAAR,CAAP;AACH,aAHD;;AAKAH,mBAAO/H,SAAP,CAAiBwK,WAAjB,GAA+B,UAAUxI,MAAV,EAAkB0H,YAAlB,EAAgC;AAC3D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,uBAAOxB,QAAQ,CAAR,CAAP;AACH,aAND;;AAQAH,mBAAO/H,SAAP,CAAiByK,WAAjB,GAA+B,UAAUf,YAAV,EAAwB;AACnD,qBAAK/G,IAAL,CAAU,CAAV,EAAa+G,YAAb;AACA,oBAAIvB,OAAJ,EAAa;AACT,2BAAOA,QAAQ,CAAR,CAAP;AACH,iBAFD,MAEO;AACH,2BAAOC,iBAAP;AACH;AACJ,aAPD;;AASAA,8BAAkB,2BAAY;AAC1B,oBAAIsC,GAAJ,EAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B;AACAF,sBAAMlC,OAAO,CAAP,CAAN,EAAiBiC,OAAOjC,OAAO,CAAP,CAAxB;AACA,oBAAI,CAACiC,IAAD,IAASA,SAAS,UAAtB,EAAkC;AAC9B,2BAAO,GAAP;AACH;AACDG,uBAAO,IAAI,CAACH,SAAS,EAAV,IAAgB,CAA3B;AACAF,sBAAOE,SAAS,EAAV,GAAgB,KAAtB;AACAD,uBAAOC,OAAO,OAAd;AACA,oBAAIF,QAAQ,KAAZ,EAAmB;AACf,wBAAIC,IAAJ,EAAU;AACN,+BAAOK,GAAP;AACH;AACD,2BAAOD,OAAOE,QAAd;AACH;AACDP,uBAAO,IAAP;AACAI,sBAAM,CAACH,OAAO,QAAR,IAAoBrI,KAAKkB,GAAL,CAAS,CAAT,EAAYkH,MAAM,EAAlB,CAA1B;AACAI,uBAAOD,MAAMvI,KAAKkB,GAAL,CAAS,CAAT,EAAYkH,MAAM,EAAlB,CAAb;AACA,uBAAOK,OAAOD,GAAd;AACH,aAnBD;;AAqBA/C,mBAAO/H,SAAP,CAAiBkL,WAAjB,GAA+B,UAAUlJ,MAAV,EAAkB0H,YAAlB,EAAgC;AAC3D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,CAAV,EAAa3B,MAAb,EAAqB0H,YAArB;AACA,oBAAIvB,OAAJ,EAAa;AACT,2BAAOA,QAAQ,CAAR,CAAP;AACH,iBAFD,MAEO;AACH,2BAAOC,iBAAP;AACH;AACJ,aAVD;;AAYAL,mBAAO/H,SAAP,CAAiBmL,WAAjB,GAA+B,UAAUzB,YAAV,EAAwB;AACnD,qBAAK/G,IAAL,CAAU,EAAV,EAAc+G,YAAd;AACA,uBAAOrB,SAAP;AACH,aAHD;;AAKAA,sBAAU,mBAAY;AAClB,oBAAIvF,EAAJ,EAAQC,EAAR,EAAY2H,GAAZ,EAAiBE,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC;AACAH,uBAAOjC,OAAO,CAAP,CAAP,EAAkBkC,MAAMlC,OAAO,CAAP,CAAxB;AACA7F,qBAAK8F,MAAM,CAAN,CAAL;AACA7F,qBAAK6F,MAAM,CAAN,CAAL;AACAmC,uBAAO,IAAI,CAACjI,OAAO,CAAR,IAAa,CAAxB;AACA4H,sBAAO,CAAC5H,KAAK,IAAN,KAAe,CAAhB,GAAqBC,EAA3B;AACA,oBAAI2H,QAAQ,CAAR,IAAaG,QAAQ,CAArB,IAA0BD,SAAS,CAAvC,EAA0C;AACtC,2BAAO,CAAP;AACH;AACD,oBAAIF,QAAQ,MAAZ,EAAoB;AAChB,wBAAIG,QAAQ,CAAR,IAAaD,SAAS,CAA1B,EAA6B;AACzB,+BAAOG,OAAOE,QAAd;AACH;AACD,2BAAOD,GAAP;AACH;AACDN,uBAAO,KAAP;AACAI,sBAAMD,MAAMvI,KAAKkB,GAAL,CAAS,CAAT,EAAYkH,MAAM,EAAlB,CAAZ;AACAI,uBAAOF,OAAOtI,KAAKkB,GAAL,CAAS,CAAT,EAAYkH,MAAM,EAAlB,CAAd;AACA,uBAAOK,OAAOD,GAAd;AACH,aApBD;;AAsBA/C,mBAAO/H,SAAP,CAAiBoL,WAAjB,GAA+B,UAAUpJ,MAAV,EAAkB0H,YAAlB,EAAgC;AAC3D,oBAAI1H,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,qBAAK2B,IAAL,CAAU,EAAV,EAAc3B,MAAd,EAAsB0H,YAAtB;AACA,uBAAOrB,SAAP;AACH,aAND;;AAQAN,mBAAO/H,SAAP,CAAiBqL,UAAjB,GAA8B,UAAUvK,MAAV,EAAkB;AAC5C,oBAAIF,CAAJ,EAAOmB,MAAP,EAAeuJ,EAAf,EAAmB1D,EAAnB;AACA7F,yBAAS+B,SAASgB,QAAT,CAAkBhE,MAAlB,CAAT;AACAwK,qBAAKvJ,OAAOqC,IAAZ;AACA,qBAAKxD,IAAIgH,KAAK,CAAd,EAAiBA,KAAK9G,MAAtB,EAA8BF,IAAIgH,MAAM,CAAxC,EAA2C;AACvC0D,uBAAG1K,CAAH,IAAQ,KAAK6I,SAAL,EAAR;AACH;AACD,uBAAO1H,MAAP;AACH,aARD;;AAUAgG,mBAAO/H,SAAP,CAAiBuL,UAAjB,GAA8B,UAAUvJ,MAAV,EAAkBlB,MAAlB,EAA0B;AACpD,oBAAIF,CAAJ,EAAOmB,MAAP,EAAeuJ,EAAf,EAAmB1D,EAAnB;AACA,oBAAI5F,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACDD,yBAAS+B,SAASgB,QAAT,CAAkBhE,MAAlB,CAAT;AACAwK,qBAAKvJ,OAAOqC,IAAZ;AACA,qBAAKxD,IAAIgH,KAAK,CAAd,EAAiBA,KAAK9G,MAAtB,EAA8BF,IAAIgH,MAAM,CAAxC,EAA2C;AACvC0D,uBAAG1K,CAAH,IAAQ,KAAKwC,SAAL,CAAepB,SAASpB,CAAxB,CAAR;AACH;AACD,uBAAOmB,MAAP;AACH,aAXD;;AAaAgG,mBAAO/H,SAAP,CAAiBwL,gBAAjB,GAAoC,UAAU1K,MAAV,EAAkB;AAClD,oBAAIiB,MAAJ;AACAA,yBAAS,KAAKqH,IAAL,CAAU5C,KAAV,CAAgBrG,KAAhB,CAAsB,KAAKkJ,WAA3B,EAAwCvI,MAAxC,CAAT;AACA,qBAAKqB,OAAL,CAAaJ,OAAOjB,MAApB;AACA,uBAAOiB,MAAP;AACH,aALD;;AAOAgG,mBAAO/H,SAAP,CAAiByL,gBAAjB,GAAoC,UAAUzJ,MAAV,EAAkBlB,MAAlB,EAA0B;AAC1D,oBAAIiB,MAAJ;AACAA,yBAAS,KAAKqH,IAAL,CAAU5C,KAAV,CAAgBrG,KAAhB,CAAsB,KAAKkJ,WAAL,GAAmBrH,MAAzC,EAAiDlB,MAAjD,CAAT;AACA,uBAAOiB,MAAP;AACH,aAJD;;AAMAgG,mBAAO/H,SAAP,CAAiB0L,UAAjB,GAA8B,UAAU5K,MAAV,EAAkB6K,QAAlB,EAA4B;AACtD,oBAAIA,YAAY,IAAhB,EAAsB;AAClBA,+BAAW,OAAX;AACH;AACD,uBAAO1D,aAAapI,IAAb,CAAkB,IAAlB,EAAwB,CAAxB,EAA2BiB,MAA3B,EAAmC6K,QAAnC,EAA6C,IAA7C,CAAP;AACH,aALD;;AAOA5D,mBAAO/H,SAAP,CAAiB4L,UAAjB,GAA8B,UAAU5J,MAAV,EAAkBlB,MAAlB,EAA0B6K,QAA1B,EAAoC;AAC9D,oBAAI3J,UAAU,IAAd,EAAoB;AAChBA,6BAAS,CAAT;AACH;AACD,oBAAI2J,YAAY,IAAhB,EAAsB;AAClBA,+BAAW,OAAX;AACH;AACD,uBAAO1D,aAAapI,IAAb,CAAkB,IAAlB,EAAwBmC,MAAxB,EAAgClB,MAAhC,EAAwC6K,QAAxC,EAAkD,KAAlD,CAAP;AACH,aARD;;AAUA1D,2BAAe,sBAAUjG,MAAV,EAAkBlB,MAAlB,EAA0B6K,QAA1B,EAAoCxJ,OAApC,EAA6C;AACxD,oBAAI0J,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyBC,CAAzB,EAA4BC,GAA5B,EAAiCzC,YAAjC,EAA+C0C,OAA/C,EAAwDC,EAAxD,EAA4DtK,MAA5D,EAAoEuK,EAApE,EAAwEC,EAAxE;AACAZ,2BAAWA,SAASa,WAAT,EAAX;AACAJ,0BAAUtL,WAAW,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAjC;AACA,oBAAIA,UAAU,IAAd,EAAoB;AAChBA,6BAASmK,QAAT;AACH;AACDkB,sBAAMnK,SAASlB,MAAf;AACAiB,yBAAS,EAAT;AACA,wBAAQ4J,QAAR;AACI,yBAAK,OAAL;AACA,yBAAK,QAAL;AACI,+BAAO3J,SAASmK,GAAT,IAAgB,CAACD,IAAI,KAAK9I,SAAL,CAAepB,QAAf,CAAL,MAAmCoK,OAA1D,EAAmE;AAC/DrK,sCAAU0K,OAAOC,YAAP,CAAoBR,CAApB,CAAV;AACH;AACD;AACJ,yBAAK,MAAL;AACA,yBAAK,OAAL;AACI,+BAAOlK,SAASmK,GAAT,IAAgB,CAACN,KAAK,KAAKzI,SAAL,CAAepB,QAAf,CAAN,MAAoCoK,OAA3D,EAAoE;AAChE,gCAAI,CAACP,KAAK,IAAN,MAAgB,CAApB,EAAuB;AACnB9J,0CAAU0K,OAAOC,YAAP,CAAoBb,EAApB,CAAV;AACH,6BAFD,MAEO,IAAI,CAACA,KAAK,IAAN,MAAgB,IAApB,EAA0B;AAC7BC,qCAAK,KAAK1I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACAD,0CAAU0K,OAAOC,YAAP,CAAqB,CAACb,KAAK,IAAN,KAAe,CAAhB,GAAqBC,EAAzC,CAAV;AACH,6BAHM,MAGA,IAAI,CAACD,KAAK,IAAN,MAAgB,IAApB,EAA0B;AAC7BC,qCAAK,KAAK1I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACA+J,qCAAK,KAAK3I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACAD,0CAAU0K,OAAOC,YAAP,CAAqB,CAACb,KAAK,IAAN,KAAe,EAAhB,GAAuBC,MAAM,CAA7B,GAAkCC,EAAtD,CAAV;AACH,6BAJM,MAIA,IAAI,CAACF,KAAK,IAAN,MAAgB,IAApB,EAA0B;AAC7BC,qCAAK,KAAK1I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACA+J,qCAAK,KAAK3I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACAgK,qCAAK,KAAK5I,SAAL,CAAepB,QAAf,IAA2B,IAAhC;AACAqK,qCAAK,CAAE,CAACR,KAAK,IAAN,KAAe,EAAhB,GAAuBC,MAAM,EAA7B,GAAoCC,MAAM,CAA1C,GAA+CC,EAAhD,IAAsD,OAA3D;AACAjK,0CAAU0K,OAAOC,YAAP,CAAoB,UAAUL,MAAM,EAAhB,CAApB,EAAyC,UAAUA,KAAK,KAAf,CAAzC,CAAV;AACH;AACJ;AACD;AACJ,yBAAK,UAAL;AACA,yBAAK,SAAL;AACA,yBAAK,SAAL;AACA,yBAAK,UAAL;AACA,yBAAK,UAAL;AACA,yBAAK,WAAL;AACI,gCAAQV,QAAR;AACI,iCAAK,SAAL;AACA,iCAAK,UAAL;AACIjC,+CAAe,KAAf;AACA;AACJ,iCAAK,SAAL;AACA,iCAAK,UAAL;AACIA,+CAAe,IAAf;AACA;AACJ,iCAAK,UAAL;AACA,iCAAK,WAAL;AACI,oCAAI5I,SAAS,CAAT,IAAc,CAACmL,MAAM,KAAK5I,UAAL,CAAgBrB,MAAhB,CAAP,MAAoCoK,OAAtD,EAA+D;AAC3D,wCAAIjK,OAAJ,EAAa;AACT,6CAAKA,OAAL,CAAaH,UAAU,CAAvB;AACH;AACD,2CAAOD,MAAP;AACH;AACD2H,+CAAeuC,QAAQ,MAAvB;AACAjK,0CAAU,CAAV;AAlBR;AAoBA,+BAAOA,SAASmK,GAAT,IAAgB,CAACG,KAAK,KAAKjJ,UAAL,CAAgBrB,MAAhB,EAAwB0H,YAAxB,CAAN,MAAiD0C,OAAxE,EAAiF;AAC7EpK,sCAAU,CAAV;AACA,gCAAIsK,KAAK,MAAL,IAAeA,KAAK,MAAxB,EAAgC;AAC5BvK,0CAAU0K,OAAOC,YAAP,CAAoBJ,EAApB,CAAV;AACH,6BAFD,MAEO;AACH,oCAAIA,KAAK,MAAT,EAAiB;AACb,0CAAM,IAAI5I,KAAJ,CAAU,yBAAV,CAAN;AACH;AACD6I,qCAAK,KAAKlJ,UAAL,CAAgBrB,MAAhB,EAAwB0H,YAAxB,CAAL;AACA,oCAAI6C,KAAK,MAAL,IAAeA,KAAK,MAAxB,EAAgC;AAC5B,0CAAM,IAAI7I,KAAJ,CAAU,yBAAV,CAAN;AACH;AACD3B,0CAAU0K,OAAOC,YAAP,CAAoBJ,EAApB,EAAwBC,EAAxB,CAAV;AACAvK,0CAAU,CAAV;AACH;AACJ;AACD,4BAAIsK,OAAOF,OAAX,EAAoB;AAChBpK,sCAAU,CAAV;AACH;AACD;AACJ;AACI,8BAAM,IAAI0B,KAAJ,CAAU,uBAAuBiI,QAAjC,CAAN;AA3ER;AA6EA,oBAAIxJ,OAAJ,EAAa;AACT,yBAAKA,OAAL,CAAaH,MAAb;AACH;AACD,uBAAOD,MAAP;AACH,aA1FD;;AA4FA,mBAAOgG,MAAP;AAEH,SApfwB,EAAzB;;AAsfA,YAAI4E,UAAUrN,GAAGqN,OAAH,GAAc,UAAUrL,MAAV,EAAkB;AAC1C,gBAAIsL,MAAJ;;AAEAnN,sBAAUkN,OAAV,EAAmBrL,MAAnB;;AAEA,qBAASqL,OAAT,CAAiBE,OAAjB,EAA0BC,MAA1B,EAAkC;AAC9B,oBAAI1D,IAAJ;AACA,qBAAKyD,OAAL,GAAeA,OAAf;AACA,qBAAKC,MAAL,GAAcA,MAAd;AACA1D,uBAAO,IAAI7C,UAAJ,EAAP;AACA,qBAAK3E,MAAL,GAAc,IAAImG,MAAJ,CAAWqB,IAAX,CAAd;AACA,qBAAK2D,SAAL,GAAiB,IAAIpL,SAAJ,CAAc,KAAKC,MAAnB,CAAjB;AACA,qBAAKoL,mBAAL,GAA2B,KAA3B;AACA,qBAAKC,OAAL,GAAe,KAAf;AACA,qBAAKJ,OAAL,CAAa7F,EAAb,CAAgB,QAAhB,EAA2B,UAAUkG,KAAV,EAAiB;AACxC,2BAAO,UAAUC,MAAV,EAAkB;AACrB,4BAAIC,KAAJ;AACA,4BAAI;AACA,mCAAOF,MAAMG,SAAN,CAAgBF,MAAhB,CAAP;AACH,yBAFD,CAEE,OAAOzH,MAAP,EAAe;AACb0H,oCAAQ1H,MAAR;AACA,mCAAOwH,MAAMxF,IAAN,CAAW,OAAX,EAAoB0F,KAApB,CAAP;AACH;AACJ,qBARD;AASH,iBAVyB,CAUvB,IAVuB,CAA1B;AAWA,qBAAKP,OAAL,CAAa7F,EAAb,CAAgB,MAAhB,EAAyB,UAAUkG,KAAV,EAAiB;AACtC,2BAAO,UAAUI,KAAV,EAAiB;AACpBlE,6BAAKzD,MAAL,CAAY2H,KAAZ;AACA,4BAAIJ,MAAMD,OAAV,EAAmB;AACf,mCAAOC,MAAMK,MAAN,EAAP;AACH;AACJ,qBALD;AAMH,iBAPuB,CAOrB,IAPqB,CAAxB;AAQA,qBAAKV,OAAL,CAAa7F,EAAb,CAAgB,KAAhB,EAAwB,UAAUkG,KAAV,EAAiB;AACrC,2BAAO,YAAY;AACfA,8BAAMF,mBAAN,GAA4B,IAA5B;AACA,4BAAIE,MAAMD,OAAV,EAAmB;AACf,mCAAOC,MAAMK,MAAN,EAAP;AACH;AACJ,qBALD;AAMH,iBAPsB,CAOpB,IAPoB,CAAvB;AAQA,qBAAKC,IAAL;AACH;;AAEDb,oBAAQ3M,SAAR,CAAkBwN,IAAlB,GAAyB,YAAY,CACpC,CADD;;AAGAb,oBAAQ3M,SAAR,CAAkBqN,SAAlB,GAA8B,UAAUF,MAAV,EAAkB,CAC/C,CADD;;AAGAR,oBAAQ3M,SAAR,CAAkByN,SAAlB,GAA8B,YAAY,CACzC,CADD;;AAGAd,oBAAQ3M,SAAR,CAAkBuN,MAAlB,GAA2B,YAAY;AACnC,oBAAIH,KAAJ,EAAWpL,MAAX,EAAmB0L,MAAnB;AACA,qBAAKT,OAAL,GAAe,CAAC,KAAKD,mBAArB;AACAhL,yBAAS,KAAK+K,SAAL,CAAe/K,MAAf,EAAT;AACA,oBAAI;AACA0L,6BAAS,KAAKD,SAAL,EAAT;AACH,iBAFD,CAEE,OAAO/H,MAAP,EAAe;AACb0H,4BAAQ1H,MAAR;AACA,wBAAI,EAAE0H,iBAAiBhH,cAAnB,CAAJ,EAAwC;AACpC,6BAAKsB,IAAL,CAAU,OAAV,EAAmB0F,KAAnB;AACA,+BAAO,KAAP;AACH;AACJ;AACD,oBAAIM,MAAJ,EAAY;AACR,yBAAKhG,IAAL,CAAU,MAAV,EAAkBgG,MAAlB;AACA,wBAAI,KAAKV,mBAAT,EAA8B;AAC1B,6BAAKtF,IAAL,CAAU,KAAV;AACH;AACD,2BAAO,IAAP;AACH,iBAND,MAMO,IAAI,CAAC,KAAKsF,mBAAV,EAA+B;AAClC,yBAAKD,SAAL,CAAevK,IAAf,CAAoBR,MAApB;AACA,yBAAKiL,OAAL,GAAe,IAAf;AACH,iBAHM,MAGA;AACH,yBAAKvF,IAAL,CAAU,KAAV;AACH;AACD,uBAAO,KAAP;AACH,aA1BD;;AA4BAiF,oBAAQ3M,SAAR,CAAkBwC,IAAlB,GAAyB,UAAUmL,SAAV,EAAqB;AAC1C,oBAAIC,SAAJ;AACAA,4BAAY,KAAKf,OAAL,CAAarK,IAAb,CAAkBmL,SAAlB,CAAZ;AACA,qBAAK/L,MAAL,CAAYY,IAAZ,CAAiBoL,UAAU5L,MAA3B;AACA,uBAAO4L,UAAUD,SAAjB;AACH,aALD;;AAOAf,qBAAS,EAAT;;AAEAD,oBAAQkB,QAAR,GAAmB,UAAUC,EAAV,EAAcC,OAAd,EAAuB;AACtC,uBAAOnB,OAAOkB,EAAP,IAAaC,OAApB;AACH,aAFD;;AAIApB,oBAAQqB,IAAR,GAAe,UAAUF,EAAV,EAAc;AACzB,uBAAOlB,OAAOkB,EAAP,KAAc,IAArB;AACH,aAFD;;AAIA,mBAAOnB,OAAP;AAEH,SApG0B,CAoGxB5F,YApGwB,CAA3B;;AAsGA,YAAIkH,UAAU3O,GAAG2O,OAAH,GAAc,UAAU3M,MAAV,EAAkB;AAC1C,gBAAI4M,OAAJ;;AAEAzO,sBAAUwO,OAAV,EAAmB3M,MAAnB;;AAEA2M,oBAAQE,KAAR,GAAgB,UAAU1J,MAAV,EAAkB;AAC9B,uBAAO,KAAP;AACH,aAFD;;AAIA,qBAASwJ,OAAT,CAAiBG,MAAjB,EAAyBd,KAAzB,EAAgC;AAC5B,oBAAIlE,IAAJ,EAAUiF,QAAV;AACAjF,uBAAO,IAAI7C,UAAJ,EAAP;AACA6C,qBAAKzD,MAAL,CAAY2H,KAAZ;AACA,qBAAK1L,MAAL,GAAc,IAAImG,MAAJ,CAAWqB,IAAX,CAAd;AACAiF,2BAAW,KAAX;AACAD,uBAAOpH,EAAP,CAAU,MAAV,EAAmB,UAAUkG,KAAV,EAAiB;AAChC,2BAAO,UAAUI,KAAV,EAAiB;AACpB,4BAAIgB,CAAJ;AACAD,mCAAW,IAAX;AACAjF,6BAAKzD,MAAL,CAAY2H,KAAZ;AACA,4BAAI;AACA,mCAAOJ,MAAMO,SAAN,CAAgBH,KAAhB,CAAP;AACH,yBAFD,CAEE,OAAO5H,MAAP,EAAe;AACb4I,gCAAI5I,MAAJ;AACA,mCAAOwH,MAAMxF,IAAN,CAAW,OAAX,EAAoB4G,CAApB,CAAP;AACH;AACJ,qBAVD;AAWH,iBAZiB,CAYf,IAZe,CAAlB;AAaAF,uBAAOpH,EAAP,CAAU,OAAV,EAAoB,UAAUkG,KAAV,EAAiB;AACjC,2BAAO,UAAUqB,GAAV,EAAe;AAClB,+BAAOrB,MAAMxF,IAAN,CAAW,OAAX,EAAoB6G,GAApB,CAAP;AACH,qBAFD;AAGH,iBAJkB,CAIhB,IAJgB,CAAnB;AAKAH,uBAAOpH,EAAP,CAAU,KAAV,EAAkB,UAAUkG,KAAV,EAAiB;AAC/B,2BAAO,YAAY;AACf,4BAAI,CAACmB,QAAL,EAAe;AACXnB,kCAAMO,SAAN,CAAgBH,KAAhB;AACH;AACD,+BAAOJ,MAAMxF,IAAN,CAAW,KAAX,CAAP;AACH,qBALD;AAMH,iBAPgB,CAOd,IAPc,CAAjB;AAQA,qBAAK8G,UAAL,GAAkB,EAAlB;AACA,qBAAKhB,IAAL;AACH;;AAEDS,oBAAQjO,SAAR,CAAkBwN,IAAlB,GAAyB,YAAY,CACpC,CADD;;AAGAS,oBAAQjO,SAAR,CAAkByN,SAAlB,GAA8B,UAAUH,KAAV,EAAiB,CAC9C,CADD;;AAGAW,oBAAQjO,SAAR,CAAkByO,YAAlB,GAAiC,UAAUzM,MAAV,EAAkB2L,SAAlB,EAA6B;AAC1D,oBAAIrG,KAAJ;AACAA,wBAAQ,KAAKoH,eAAL,CAAqBf,SAArB,CAAR;AACA,uBAAO,KAAKa,UAAL,CAAgBjH,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B,EAAiC;AACpCtF,4BAAQA,MAD4B;AAEpC2L,+BAAWA;AAFyB,iBAAjC,CAAP;AAIH,aAPD;;AASAM,oBAAQjO,SAAR,CAAkB0O,eAAlB,GAAoC,UAAUf,SAAV,EAAqBgB,QAArB,EAA+B;AAC/D,oBAAI/D,IAAJ,EAAUC,GAAV,EAAe+D,GAAf,EAAoBC,IAApB;AACAhE,sBAAM,CAAN;AACAD,uBAAO,KAAK4D,UAAL,CAAgB1N,MAAvB;AACA,oBAAI8J,OAAO,CAAP,IAAY,KAAK4D,UAAL,CAAgB5D,OAAO,CAAvB,EAA0B+C,SAA1B,GAAsCA,SAAtD,EAAiE;AAC7D,2BAAO/C,IAAP;AACH;AACD,uBAAOC,MAAMD,IAAb,EAAmB;AACfgE,0BAAO/D,MAAMD,IAAP,IAAgB,CAAtB;AACAiE,2BAAO,KAAKL,UAAL,CAAgBI,GAAhB,EAAqBjB,SAA5B;AACA,wBAAIkB,OAAOlB,SAAX,EAAsB;AAClB9C,8BAAM+D,MAAM,CAAZ;AACH,qBAFD,MAEO,IAAIC,QAAQlB,SAAZ,EAAuB;AAC1B/C,+BAAOgE,GAAP;AACH;AACJ;AACD,oBAAIhE,OAAO,KAAK4D,UAAL,CAAgB1N,MAA3B,EAAmC;AAC/B8J,2BAAO,KAAK4D,UAAL,CAAgB1N,MAAvB;AACH;AACD,uBAAO8J,IAAP;AACH,aApBD;;AAsBAqD,oBAAQjO,SAAR,CAAkBwC,IAAlB,GAAyB,UAAUmL,SAAV,EAAqB;AAC1C,oBAAIrG,KAAJ,EAAWsG,SAAX;AACA,oBAAI,KAAKd,MAAL,IAAe,KAAKA,MAAL,CAAYgC,eAAZ,GAA8B,CAA7C,IAAkD,KAAKhC,MAAL,CAAYiC,cAAZ,GAA6B,CAAnF,EAAsF;AAClFnB,gCAAY;AACRD,mCAAWA,SADH;AAER3L,gCAAQ,KAAK8K,MAAL,CAAYiC,cAAZ,GAA6BpB,SAA7B,GAAyC,KAAKb,MAAL,CAAYgC;AAFrD,qBAAZ;AAIA,2BAAOlB,SAAP;AACH,iBAND,MAMO;AACHtG,4BAAQ,KAAKoH,eAAL,CAAqBf,SAArB,CAAR;AACA,2BAAO,KAAKa,UAAL,CAAgBlH,KAAhB,CAAP;AACH;AACJ,aAZD;;AAcA4G,sBAAU,EAAV;;AAEAD,oBAAQJ,QAAR,GAAmB,UAAUhB,OAAV,EAAmB;AAClC,uBAAOqB,QAAQ9G,IAAR,CAAayF,OAAb,CAAP;AACH,aAFD;;AAIAoB,oBAAQD,IAAR,GAAe,UAAUvJ,MAAV,EAAkB;AAC7B,oBAAI6J,CAAJ,EAAOxB,MAAP,EAAe9K,MAAf,EAAuBJ,MAAvB,EAA+BgG,EAA/B,EAAmCC,IAAnC;AACAjG,yBAASmG,OAAOuB,UAAP,CAAkB7E,MAAlB,CAAT;AACA,qBAAKmD,KAAK,CAAL,EAAQC,OAAOqG,QAAQpN,MAA5B,EAAoC8G,KAAKC,IAAzC,EAA+CD,IAA/C,EAAqD;AACjDkF,6BAASoB,QAAQtG,EAAR,CAAT;AACA5F,6BAASJ,OAAOI,MAAhB;AACA,wBAAI;AACA,4BAAI8K,OAAOqB,KAAP,CAAavM,MAAb,CAAJ,EAA0B;AACtB,mCAAOkL,MAAP;AACH;AACJ,qBAJD,CAIE,OAAOpH,MAAP,EAAe;AACb4I,4BAAI5I,MAAJ;AACH;AACD9D,2BAAOY,IAAP,CAAYR,MAAZ;AACH;AACD,uBAAO,IAAP;AACH,aAhBD;;AAkBA,mBAAOiM,OAAP;AAEH,SA1H0B,CA0HxBlH,YA1HwB,CAA3B;;AA4HA,YAAIiI,cAAc1P,GAAG0P,WAAH,GAAkB,UAAU1N,MAAV,EAAkB;AAClD,gBAAI2N,OAAJ;;AAEAxP,sBAAUuP,WAAV,EAAuB1N,MAAvB;;AAEA,qBAAS0N,WAAT,CAAqBE,UAArB,EAAiCC,QAAjC,EAA2C;AACvC,qBAAKD,UAAL,GAAkBA,UAAlB;AACA,qBAAKC,QAAL,GAAgBA,QAAhB;AACA,qBAAKC,UAAL,GAAkBhP,OAAO,KAAKgP,UAAZ,EAAwB,IAAxB,CAAlB;AACA,qBAAKC,OAAL,GAAe,KAAf;AACA,qBAAKC,WAAL,GAAmB,CAAnB;AACA,qBAAKC,SAAL,GAAiB,CAAjB;AACH;;AAEDP,wBAAYhP,SAAZ,CAAsBwP,KAAtB,GAA8B,YAAY;AACtC,oBAAI,KAAKH,OAAT,EAAkB;AACd;AACH;AACD,qBAAKA,OAAL,GAAe,IAAf;AACA,oBAAI,KAAKI,MAAL,IAAe,IAAnB,EAAyB;AACrB,yBAAKA,MAAL,GAAcT,YAAYU,MAAZ,CAAmB,KAAKR,UAAxB,EAAoC,KAAKC,QAAzC,CAAd;AACH;AACD,oBAAI,CAAC,KAAKM,MAAV,EAAkB;AACd,0BAAM,IAAI/L,KAAJ,CAAU,kCAAV,CAAN;AACH;AACD,qBAAK6L,SAAL,GAAiB,KAAKE,MAAL,CAAYE,aAAZ,EAAjB;AACA,qBAAKC,MAAL,GAAcC,YAAY,KAAKT,UAAjB,EAA6B,GAA7B,CAAd,CAZsC,CAYY;AAClD,uBAAO,KAAKK,MAAL,CAAYzI,EAAZ,CAAe,QAAf,EAAyB,KAAK8I,MAAL,GAAe,UAAU5C,KAAV,EAAiB;AAC5D,2BAAO,UAAUzI,MAAV,EAAkB;AACrB,+BAAOyI,MAAMxF,IAAN,CAAW,QAAX,EAAqBjD,MAArB,CAAP;AACH,qBAFD;AAGH,iBAJ6C,CAI3C,IAJ2C,CAAvC,CAAP;AAKH,aAlBD;;AAoBAuK,wBAAYhP,SAAZ,CAAsB+P,IAAtB,GAA6B,YAAY;AACrC,oBAAI,CAAC,KAAKV,OAAV,EAAmB;AACf;AACH;AACD,qBAAKA,OAAL,GAAe,KAAf;AACA,oBAAG,KAAKI,MAAR,EACI,KAAKA,MAAL,CAAYpI,GAAZ,CAAgB,QAAhB,EAA0B,KAAKyI,MAA/B;AACJ,uBAAOE,cAAc,KAAKJ,MAAnB,CAAP;AACH,aARD;;AAUAZ,wBAAYhP,SAAZ,CAAsBiQ,OAAtB,GAAgC,YAAY;AACxC,oBAAI5O,IAAJ;AACA,qBAAK0O,IAAL;AACA,uBAAO,CAAC1O,OAAO,KAAKoO,MAAb,KAAwB,IAAxB,GAA+BpO,KAAK4O,OAAL,EAA/B,GAAgD,KAAK,CAA5D;AACH,aAJD;;AAMAjB,wBAAYhP,SAAZ,CAAsBwC,IAAtB,GAA6B,UAAU8M,WAAV,EAAuB;AAChD,qBAAKA,WAAL,GAAmBA,WAAnB;AACA,oBAAI,KAAKD,OAAT,EAAkB;AACd,yBAAKE,SAAL,GAAiB,KAAKE,MAAL,CAAYE,aAAZ,EAAjB;AACH;AACD,uBAAO,KAAKjI,IAAL,CAAU,YAAV,EAAwB,KAAK4H,WAA7B,CAAP;AACH,aAND;;AAQAN,wBAAYhP,SAAZ,CAAsBoP,UAAtB,GAAmC,YAAY;AAC3C,oBAAIP,IAAJ;AACAA,uBAAO,KAAKY,MAAL,CAAYE,aAAZ,EAAP;AACA,qBAAKL,WAAL,IAAoB,CAACT,OAAO,KAAKU,SAAb,IAA0B,KAAKE,MAAL,CAAYP,UAAtC,GAAmD,IAAnD,GAA0D,CAA9E;AACA,qBAAKK,SAAL,GAAiBV,IAAjB;AACA,uBAAO,KAAKnH,IAAL,CAAU,YAAV,EAAwB,KAAK4H,WAA7B,CAAP;AACH,aAND;;AAQAL,sBAAU,EAAV;;AAEAD,wBAAYnB,QAAZ,GAAuB,UAAU4B,MAAV,EAAkB;AACrC,uBAAOR,QAAQ7H,IAAR,CAAaqI,MAAb,CAAP;AACH,aAFD;;AAIAT,wBAAYU,MAAZ,GAAqB,UAAUR,UAAV,EAAsBC,QAAtB,EAAgC;AACjD,oBAAIM,MAAJ,EAAY7H,EAAZ,EAAgBC,IAAhB;AACA,qBAAKD,KAAK,CAAL,EAAQC,OAAOoH,QAAQnO,MAA5B,EAAoC8G,KAAKC,IAAzC,EAA+CD,IAA/C,EAAqD;AACjD6H,6BAASR,QAAQrH,EAAR,CAAT;AACA,wBAAI6H,OAAOS,SAAX,EAAsB;AAClB,+BAAO,IAAIT,MAAJ,CAAWP,UAAX,EAAuBC,QAAvB,CAAP;AACH;AACJ;AACD,uBAAO,IAAP;AACH,aATD;;AAWA,mBAAOH,WAAP;AAEH,SArFkC,CAqFhCjI,YArFgC,CAAnC;;AAuFA,YAAIoJ,qBAAqB7Q,GAAG6Q,kBAAH,GAAyB,UAAU7O,MAAV,EAAkB;AAChE,gBAAI8O,WAAJ,EAAiBC,YAAjB;;AAEA5Q,sBAAU0Q,kBAAV,EAA8B7O,MAA9B;;AAEA0N,wBAAYnB,QAAZ,CAAqBsC,kBAArB;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAGG,GAAGC,GAAH,CAAOC,QAAV,EACA;AACIL,mCAAmBD,SAAnB,GAA+B,KAA/B;AACH,aAHD,MAKA;AACIC,mCAAmBD,SAAnB,GAAgC,OAAOO,KAAP,KAAiB,WAAjB,IAAgCA,UAAU,IAA3C,IAAoD,mBAAmB,IAAIA,KAAJ,EAAtG;AACH;;AAED,qBAASN,kBAAT,CAA4BjB,UAA5B,EAAwCC,QAAxC,EAAkD;AAC9C,qBAAKD,UAAL,GAAkBA,UAAlB;AACA,qBAAKC,QAAL,GAAgBA,QAAhB;AACA,qBAAKW,MAAL,GAAc1P,OAAO,KAAK0P,MAAZ,EAAoB,IAApB,CAAd;AACA,qBAAKY,KAAL,GAAa,IAAID,KAAJ,EAAb;AACA,qBAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKxB,QAAzB,EAAmC,KAAKD,UAAxC;AACA,qBAAK0B,aAAL,GAAqB,CAArB;AACA,qBAAKC,aAAL,GAAqB,KAAK3B,UAAL,GAAkB,CAAvC;AACA,qBAAK4B,IAAL,GAAY,IAAZ;AACA,qBAAKC,KAAL,GAAaX,YAAY,KAAKN,MAAjB,EAAyB,GAAzB,CAAb;AACH;;AAEDK,+BAAmBnQ,SAAnB,CAA6B8P,MAA7B,GAAsC,YAAY;AAC9C,oBAAI7N,SAAJ,EAAewC,MAAf,EAAuBuM,eAAvB,EAAwCC,OAAxC;AACA,oBAAI,KAAKH,IAAT,EAAe;AACXG,8BAAU,KAAKP,KAAL,CAAWQ,aAAX,CAAyB,KAAKJ,IAA9B,CAAV;AACA,yBAAKF,aAAL,IAAsBK,OAAtB;AACA,wBAAI,KAAKL,aAAL,GAAqB,KAAKE,IAAL,CAAUhQ,MAAnC,EAA2C;AACvC,6BAAKgQ,IAAL,GAAY,KAAKA,IAAL,CAAU7L,QAAV,CAAmBgM,OAAnB,CAAZ;AACH,qBAFD,MAEO;AACH,6BAAKH,IAAL,GAAY,IAAZ;AACH;AACJ;AACDE,kCAAkB,KAAKN,KAAL,CAAWS,sBAAX,EAAlB;AACAlP,4BAAY+O,kBAAkB,KAAKH,aAAvB,GAAuC,KAAKD,aAAxD;AACA,oBAAI3O,YAAY,CAAhB,EAAmB;AACfwC,6BAAS,IAAIyE,YAAJ,CAAiBjH,SAAjB,CAAT;AACA,yBAAKyF,IAAL,CAAU,QAAV,EAAoBjD,MAApB;AACAwM,8BAAU,KAAKP,KAAL,CAAWQ,aAAX,CAAyBzM,MAAzB,CAAV;AACA,wBAAIwM,UAAUxM,OAAO3D,MAArB,EAA6B;AACzB,6BAAKgQ,IAAL,GAAYrM,OAAOQ,QAAP,CAAgBgM,OAAhB,CAAZ;AACH;AACD,yBAAKL,aAAL,IAAsBK,OAAtB;AACH;AACJ,aAtBD;;AAwBAd,+BAAmBnQ,SAAnB,CAA6BiQ,OAA7B,GAAuC,YAAY;AAC/C,uBAAOI,aAAa,KAAKU,KAAlB,CAAP;AACH,aAFD;;AAIAZ,+BAAmBnQ,SAAnB,CAA6B2P,aAA7B,GAA6C,YAAY;AACrD,uBAAO,KAAKe,KAAL,CAAWS,sBAAX,KAAsC,KAAKhC,QAAlD;AACH,aAFD;;AAIAiB,0BAAc,qBAAU/P,EAAV,EAAc+Q,QAAd,EAAwB;AAClC,oBAAIpL,GAAJ,EAASqL,MAAT;AACArL,sBAAMlC,SAAS+B,WAAT,CAAqB,sDAAsDuL,QAAtD,GAAiE,IAAtF,CAAN;AACA,oBAAIpL,OAAO,IAAX,EAAiB;AACb,2BAAO6J,YAAYxP,EAAZ,EAAgB+Q,QAAhB,CAAP;AACH;AACDC,yBAAS,IAAIC,MAAJ,CAAWtL,GAAX,CAAT;AACAqL,uBAAOE,SAAP,GAAmBlR,EAAnB;AACAgR,uBAAOrL,GAAP,GAAaA,GAAb;AACA,uBAAOqL,MAAP;AACH,aAVD;;AAYAhB,2BAAe,sBAAUU,KAAV,EAAiB;AAC5B,oBAAIA,MAAMS,SAAV,EAAqB;AACjBT,0BAAMS,SAAN;AACA,2BAAOvN,IAAIgC,eAAJ,CAAoB8K,MAAM/K,GAA1B,CAAP;AACH,iBAHD,MAGO;AACH,2BAAOgK,cAAce,KAAd,CAAP;AACH;AACJ,aAPD;;AASA,mBAAOZ,kBAAP;AAEH,SAxFgD,CAwF9CpJ,YAxF8C,CAAjD;;AA0FA,YAAI0K,QAAQnS,GAAGmS,KAAH,GAAY,UAAUnQ,MAAV,EAAkB;AACtC7B,sBAAUgS,KAAV,EAAiBnQ,MAAjB;;AAEA,qBAASmQ,KAAT,CAAerD,MAAf,EAAuB;AACnB,qBAAKA,MAAL,GAAcA,MAAd;AACA,qBAAKsD,OAAL,GAAetR,OAAO,KAAKsR,OAAZ,EAAqB,IAArB,CAAf;AACA,qBAAKC,WAAL,GAAmBvR,OAAO,KAAKuR,WAAZ,EAAyB,IAAzB,CAAnB;AACA,qBAAKxD,KAAL,GAAa/N,OAAO,KAAK+N,KAAZ,EAAmB,IAAnB,CAAb;AACA,qBAAKyD,QAAL,GAAgB,CAAhB;AACA,qBAAKC,QAAL,GAAgB,IAAhB;AACA,qBAAK/E,MAAL,GAAc,IAAd;AACA,qBAAKgF,QAAL,GAAgB,IAAhB;AACA,qBAAKC,MAAL,GAAc,KAAd;AACA,qBAAKlF,OAAL,GAAe,IAAf;AACA,qBAAKkB,OAAL,GAAe,IAAf;AACA,qBAAKK,MAAL,CAAY5G,IAAZ,CAAiB,MAAjB,EAAyB,KAAK2G,KAA9B;AACA,qBAAKC,MAAL,CAAYpH,EAAZ,CAAe,OAAf,EAAyB,UAAUkG,KAAV,EAAiB;AACtC,2BAAO,UAAUqB,GAAV,EAAe;AAClBrB,8BAAMxF,IAAN,CAAW,OAAX,EAAoB6G,GAApB;AACA,+BAAOrB,MAAM6C,IAAN,EAAP;AACH,qBAHD;AAIH,iBALuB,CAKrB,IALqB,CAAxB;AAMA,qBAAK3B,MAAL,CAAYpH,EAAZ,CAAe,UAAf,EAA4B,UAAUkG,KAAV,EAAiB;AACzC,2BAAO,UAAU0E,QAAV,EAAoB;AACvB1E,8BAAM0E,QAAN,GAAiBA,QAAjB;AACA,+BAAO1E,MAAMxF,IAAN,CAAW,QAAX,EAAqBwF,MAAM0E,QAA3B,CAAP;AACH,qBAHD;AAIH,iBAL0B,CAKxB,IALwB,CAA3B;AAMH;;AAEDH,kBAAMnI,UAAN,GAAmB,UAAU7E,MAAV,EAAkB;AACjC,uBAAO,IAAIgN,KAAJ,CAAU,IAAIO,YAAJ,CAAiBvN,MAAjB,CAAV,CAAP;AACH,aAFD;AAGAgN,kBAAMQ,gBAAN,GAAyB,UAAUC,SAAV,EAAqB;AAC1C,uBAAO,IAAI5S,GAAGmS,KAAP,CAAa,IAAInS,GAAG0S,YAAP,EAAb,CAAP;AACH,aAFD;AAGAP,kBAAMzR,SAAN,CAAgBwP,KAAhB,GAAwB,UAAUjC,MAAV,EAAkB;AACtC,oBAAI,KAAKwE,MAAT,EAAiB;AACb;AACH;AACD,oBAAIxE,UAAU,IAAd,EAAoB;AAChB,yBAAK4E,YAAL,GAAoB5E,MAApB;AACH;AACD,oBAAI,KAAK4E,YAAL,IAAqB,IAAzB,EAA+B;AAC3B,yBAAKA,YAAL,GAAoB,IAApB;AACH;AACD,qBAAKJ,MAAL,GAAc,IAAd;AACA,qBAAK3D,MAAL,CAAYoB,KAAZ;AACA,oBAAI,KAAKzB,OAAL,IAAgB,KAAKoE,YAAzB,EAAuC;AACnC,2BAAO,KAAKT,OAAL,EAAP;AACH;AACJ,aAfD;;AAiBAD,kBAAMzR,SAAN,CAAgB+P,IAAhB,GAAuB,YAAY;AAC/B,oBAAI,CAAC,KAAKgC,MAAV,EAAkB;AACd;AACH;AACD,qBAAKA,MAAL,GAAc,KAAd;AACA,uBAAO,KAAK3D,MAAL,CAAYgE,KAAZ,EAAP;AACH,aAND;;AAQAX,kBAAMzR,SAAN,CAAgBqS,GAAhB,GAAsB,UAAUpL,KAAV,EAAiBqL,QAAjB,EAA2B;AAC7C,oBAAIrL,UAAU,QAAV,IAAsBA,UAAU,UAAhC,IAA8CA,UAAU,UAA5D,EAAwE;AACpE;AACH;AACD,oBAAI,KAAKA,KAAL,KAAe,IAAnB,EAAyB;AACrB,2BAAOqL,SAAS,KAAKrL,KAAL,CAAT,CAAP;AACH,iBAFD,MAEO;AACH,yBAAKO,IAAL,CAAUP,KAAV,EAAkB,UAAUiG,KAAV,EAAiB;AAC/B,+BAAO,UAAUqF,KAAV,EAAiB;AACpBrF,kCAAM6C,IAAN;AACA,mCAAOuC,SAASC,KAAT,CAAP;AACH,yBAHD;AAIH,qBALgB,CAKd,IALc,CAAjB;AAMA,2BAAO,KAAK/C,KAAL,EAAP;AACH;AACJ,aAfD;;AAiBAiC,kBAAMzR,SAAN,CAAgBwS,YAAhB,GAA+B,YAAY;AACvC,uBAAO,KAAKzE,OAAL,CAAaR,MAAb,EAAP;AACH,aAFD;;AAIAkE,kBAAMzR,SAAN,CAAgByS,cAAhB,GAAiC,UAAUH,QAAV,EAAoB;AACjD,oBAAII,MAAJ,EAAYC,WAAZ,EAAyB7R,MAAzB;AACAA,yBAAS,CAAT;AACA4R,yBAAS,EAAT;AACA,qBAAK1L,EAAL,CAAQ,MAAR,EAAgB2L,cAAc,qBAAUrF,KAAV,EAAiB;AAC3CxM,8BAAUwM,MAAMxM,MAAhB;AACA,2BAAO4R,OAAOtL,IAAP,CAAYkG,KAAZ,CAAP;AACH,iBAHD;AAIA,qBAAK9F,IAAL,CAAU,KAAV,EAAiB,YAAY;AACzB,wBAAIQ,GAAJ,EAASsF,KAAT,EAAgBtL,MAAhB,EAAwB4F,EAAxB,EAA4BC,IAA5B;AACAG,0BAAM,IAAIkB,YAAJ,CAAiBpI,MAAjB,CAAN;AACAkB,6BAAS,CAAT;AACA,yBAAK4F,KAAK,CAAL,EAAQC,OAAO6K,OAAO5R,MAA3B,EAAmC8G,KAAKC,IAAxC,EAA8CD,IAA9C,EAAoD;AAChD0F,gCAAQoF,OAAO9K,EAAP,CAAR;AACAI,4BAAI4K,GAAJ,CAAQtF,KAAR,EAAetL,MAAf;AACAA,kCAAUsL,MAAMxM,MAAhB;AACH;AACD,yBAAKuG,GAAL,CAAS,MAAT,EAAiBsL,WAAjB;AACA,2BAAOL,SAAStK,GAAT,CAAP;AACH,iBAXD;AAYA,uBAAO,KAAKwH,KAAL,EAAP;AACH,aArBD;;AAuBAiC,kBAAMzR,SAAN,CAAgBmO,KAAhB,GAAwB,UAAUb,KAAV,EAAiB;AACrC,oBAAIT,OAAJ;AACA,oBAAI,CAAC,KAAKkF,MAAV,EAAkB;AACd;AACH;AACDlF,0BAAUoB,QAAQD,IAAR,CAAaV,KAAb,CAAV;AACA,oBAAI,CAACT,OAAL,EAAc;AACV,2BAAO,KAAKnF,IAAL,CAAU,OAAV,EAAmB,6CAAnB,CAAP;AACH;AACD,qBAAKmF,OAAL,GAAe,IAAIA,OAAJ,CAAY,KAAKuB,MAAjB,EAAyBd,KAAzB,CAAf;AACA,qBAAKT,OAAL,CAAa7F,EAAb,CAAgB,QAAhB,EAA0B,KAAK2K,WAA/B;AACA,qBAAK9E,OAAL,CAAa7F,EAAb,CAAgB,UAAhB,EAA6B,UAAUkG,KAAV,EAAiB;AAC1C,2BAAO,UAAU2E,QAAV,EAAoB;AACvB3E,8BAAM2E,QAAN,GAAiBA,QAAjB;AACA,+BAAO3E,MAAMxF,IAAN,CAAW,UAAX,EAAuBwF,MAAM2E,QAA7B,CAAP;AACH,qBAHD;AAIH,iBAL2B,CAKzB,IALyB,CAA5B;AAMA,qBAAKhF,OAAL,CAAa7F,EAAb,CAAgB,UAAhB,EAA6B,UAAUkG,KAAV,EAAiB;AAC1C,2BAAO,UAAU4E,QAAV,EAAoB;AACvB5E,8BAAM4E,QAAN,GAAiBA,QAAjB;AACA,+BAAO5E,MAAMxF,IAAN,CAAW,UAAX,EAAuBwF,MAAM4E,QAA7B,CAAP;AACH,qBAHD;AAIH,iBAL2B,CAKzB,IALyB,CAA5B;AAMA,uBAAO,KAAKjF,OAAL,CAAa7F,EAAb,CAAgB,OAAhB,EAA0B,UAAUkG,KAAV,EAAiB;AAC9C,2BAAO,UAAUqB,GAAV,EAAe;AAClBrB,8BAAMxF,IAAN,CAAW,OAAX,EAAoB6G,GAApB;AACA,+BAAOrB,MAAM6C,IAAN,EAAP;AACH,qBAHD;AAIH,iBAL+B,CAK7B,IAL6B,CAAzB,CAAP;AAMH,aA7BD;;AA+BA0B,kBAAMzR,SAAN,CAAgB2R,WAAhB,GAA8B,UAAU7E,MAAV,EAAkB;AAC5C,oBAAIiB,OAAJ,EAAa8E,GAAb;AACA,qBAAK/F,MAAL,GAAcA,MAAd;AACA,oBAAI,CAAC,KAAKiF,MAAV,EAAkB;AACd;AACH;AACD,qBAAKrK,IAAL,CAAU,QAAV,EAAoB,KAAKoF,MAAzB;AACAiB,0BAAUpB,QAAQqB,IAAR,CAAa,KAAKlB,MAAL,CAAYgG,QAAzB,CAAV;AACA,oBAAI,CAAC/E,OAAL,EAAc;AACV,2BAAO,KAAKrG,IAAL,CAAU,OAAV,EAAmB,mBAAmB,KAAKoF,MAAL,CAAYgG,QAA/B,GAA0C,iBAA7D,CAAP;AACH;AACD,qBAAK/E,OAAL,GAAe,IAAIA,OAAJ,CAAY,KAAKlB,OAAjB,EAA0B,KAAKC,MAA/B,CAAf;AACA,oBAAI,KAAKA,MAAL,CAAYiG,aAAhB,EAA+B;AAC3B,yBAAKhF,OAAL,CAAa/G,EAAb,CAAgB,MAAhB,EAAyB,UAAUkG,KAAV,EAAiB;AACtC,+BAAO,UAAUzI,MAAV,EAAkB;AACrB,mCAAOyI,MAAMxF,IAAN,CAAW,MAAX,EAAmBjD,MAAnB,CAAP;AACH,yBAFD;AAGH,qBAJuB,CAIrB,IAJqB,CAAxB;AAKH,iBAND,MAMO;AACHoO,0BAAMvQ,KAAKkB,GAAL,CAAS,CAAT,EAAY,KAAKsJ,MAAL,CAAYkG,cAAZ,GAA6B,CAAzC,CAAN;AACA,yBAAKjF,OAAL,CAAa/G,EAAb,CAAgB,MAAhB,EAAyB,UAAUkG,KAAV,EAAiB;AACtC,+BAAO,UAAUzI,MAAV,EAAkB;AACrB,gCAAIuD,GAAJ,EAASpH,CAAT,EAAYqS,MAAZ,EAAoBrL,EAApB,EAAwBC,IAAxB;AACAG,kCAAM,IAAIkB,YAAJ,CAAiBzE,OAAO3D,MAAxB,CAAN;AACA,iCAAKF,IAAIgH,KAAK,CAAT,EAAYC,OAAOpD,OAAO3D,MAA/B,EAAuC8G,KAAKC,IAA5C,EAAkDjH,IAAI,EAAEgH,EAAxD,EAA4D;AACxDqL,yCAASxO,OAAO7D,CAAP,CAAT;AACAoH,oCAAIpH,CAAJ,IAASqS,SAASJ,GAAlB;AACH;AACD,mCAAO3F,MAAMxF,IAAN,CAAW,MAAX,EAAmBM,GAAnB,CAAP;AACH,yBARD;AASH,qBAVuB,CAUrB,IAVqB,CAAxB;AAWH;AACD,qBAAK+F,OAAL,CAAa/G,EAAb,CAAgB,OAAhB,EAA0B,UAAUkG,KAAV,EAAiB;AACvC,2BAAO,UAAUqB,GAAV,EAAe;AAClBrB,8BAAMxF,IAAN,CAAW,OAAX,EAAoB6G,GAApB;AACA,+BAAOrB,MAAM6C,IAAN,EAAP;AACH,qBAHD;AAIH,iBALwB,CAKtB,IALsB,CAAzB;AAMA,qBAAKhC,OAAL,CAAa/G,EAAb,CAAgB,KAAhB,EAAwB,UAAUkG,KAAV,EAAiB;AACrC,2BAAO,YAAY;AACf,+BAAOA,MAAMxF,IAAN,CAAW,KAAX,CAAP;AACH,qBAFD;AAGH,iBAJsB,CAIpB,IAJoB,CAAvB;AAKA,qBAAKA,IAAL,CAAU,aAAV;AACA,oBAAI,KAAKyK,YAAT,EAAuB;AACnB,2BAAO,KAAKT,OAAL,EAAP;AACH;AACJ,aA/CD;;AAiDAD,kBAAMzR,SAAN,CAAgB0R,OAAhB,GAA0B,YAAY;AAClC,uBAAO,KAAK3D,OAAL,CAAaR,MAAb,MAAyB,KAAKwE,MAArC,EAA6C;AACzC;AACH;AACD,oBAAI,KAAKA,MAAT,EAAiB;AACb,2BAAO,KAAKhE,OAAL,CAAavG,IAAb,CAAkB,MAAlB,EAA0B,KAAKkK,OAA/B,CAAP;AACH;AACJ,aAPD;;AASAD,kBAAMzR,SAAN,CAAgBiQ,OAAhB,GAA0B,YAAY;AAClC,oBAAI5O,IAAJ,EAAUyG,KAAV,EAAiBoL,KAAjB;AACA,qBAAKnD,IAAL;AACA,oBAAI,CAAC1O,OAAO,KAAKwL,OAAb,KAAyB,IAA7B,EAAmC;AAC/BxL,yBAAKgG,GAAL;AACH;AACD,oBAAI,CAACS,QAAQ,KAAKiG,OAAd,KAA0B,IAA9B,EAAoC;AAChCjG,0BAAMT,GAAN;AACH;AACD,oBAAI,CAAC6L,QAAQ,KAAK9E,MAAd,KAAyB,IAA7B,EAAmC;AAC/B8E,0BAAM7L,GAAN;AACH;AACD,uBAAO,KAAKA,GAAL,EAAP;AACH,aAbD;;AAeA,mBAAOoK,KAAP;AAEH,SAnNsB,CAmNpB1K,YAnNoB,CAAvB;;AAqNA,YAAIoM,YAAY7T,GAAG6T,SAAH,GAAgB,YAAY;AACxC;AACA;AACA;AACA,qBAASA,SAAT,CAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDlE,QAAjD,EAA2DmE,iBAA3D,EAA8E;AAC1E,qBAAKF,cAAL,GAAsB,CAACA,cAAvB;AACA,qBAAKC,YAAL,GAAoB,CAACA,YAArB;AACA,qBAAKlE,QAAL,GAAgBA,WAAW,CAA3B;AACA,qBAAKmE,iBAAL,GAAyBA,iBAAzB;AACA,qBAAKC,UAAL;AACH;;AAEDJ,sBAAUnT,SAAV,CAAoBuT,UAApB,GAAiC,YAAY;AACzC;AACA,oBAAI,KAAKH,cAAL,GAAsB,CAAtB,IAA2B,KAAKC,YAAL,GAAoB,CAA/C,IAAoD,KAAKlE,QAAL,GAAgB,CAAxE,EAA2E;AACvE,wBAAI,KAAKiE,cAAL,IAAuB,KAAKC,YAAhC,EAA8C;AAC1C;AACA,6BAAKG,SAAL,GAAiB,KAAKC,eAAtB,CAF0C,CAEA;AAC1C,6BAAKC,WAAL,GAAmB,CAAnB;AACH,qBAJD,MAIO;AACH,6BAAKA,WAAL,GAAmB,KAAKN,cAAL,GAAsB,KAAKC,YAA9C;AACA,4BAAI,KAAKD,cAAL,GAAsB,KAAKC,YAA/B,EAA6C;AACzC;;;;;AAKA,iCAAKM,kCAAL;AACA,iCAAKC,UAAL,GAAkB,CAAlB;AACH,yBARD,MAQO;AACH;;;;;AAKA,iCAAKC,uBAAL;AACA,iCAAKC,UAAL,GAAkB,KAAlB;AACA,iCAAKF,UAAL,GAAkB,CAAlB;AACH;;AAED,4BAAIG,mBAAoBzR,KAAK0R,IAAL,CAAU,KAAKV,iBAAL,GAAyB,KAAKD,YAA9B,GAA6C,KAAKD,cAAlD,GAAmE,KAAKjE,QAAxE,GAAmF,IAA7F,IAAqG,KAAKA,QAA3G,GAAuH,KAAKA,QAAnJ;AACA,6BAAK8E,YAAL,GAAoB,IAAI/K,YAAJ,CAAiB6K,gBAAjB,CAApB;AACA,6BAAKG,UAAL,GAAkB,IAAIhL,YAAJ,CAAiB,KAAKiG,QAAtB,CAAlB;AACH;AACJ,iBA9BD,MA8BO;AACH,0BAAM,IAAIzL,KAAJ,CAAU,+CAAV,CAAN;AACH;AACJ,aAnCD;;AAqCAyP,sBAAUnT,SAAV,CAAoB2T,kCAApB,GAAyD,YAAY;AACjE,oBAAIQ,YAAY;;;;;;;;;wCAAA,GASW,KAAKT,WAThB,GAS8B;;4CAT9C;AAYA,qBAAK,IAAIU,UAAU,CAAnB,EAAsBA,UAAU,KAAKjF,QAArC,EAA+C,EAAEiF,OAAjD,EAA0D;AACtDD,iCAAa,qDAAqDC,OAArD,GAA+D,6BAA/D,GAA+FA,OAA/F,GAAyG,oBAAtH;AACH;AACDD,6BAAa;;gCAAA,GAEM,KAAKhF,QAFX,GAEsB,wCAFtB,GAEiE,KAAKA,QAFtE,GAEiF;;4CAF9F;AAKA,qBAAK,IAAIiF,UAAU,CAAnB,EAAsBA,UAAU,KAAKjF,QAArC,EAA+C,EAAEiF,OAAjD,EAA0D;AACtDD,iCAAa,yDAA0DC,UAAU,CAAX,GAAiB,QAAQA,OAAzB,GAAoC,EAA7F,IAAmG,4CAAnG,IAAmJ,KAAKjF,QAAL,GAAgBiF,OAAnK,IAA8K,oBAA3L;AACH;AACDD,6BAAa,eAAe,KAAKT,WAApB,GAAkC;iDAAlC,GACuB,KAAKvE,QAD5B,GACuC;YADpD;AAGA,qBAAK,IAAIiF,UAAU,CAAnB,EAAsBA,UAAU,KAAKjF,QAArC,EAA+C,EAAEiF,OAAjD,EAA0D;AACtDD,iCAAa,qBAAqBC,OAArB,GAA+B,6BAA5C;AACH;AACDD,6BAAa;;kCAAb;;AAIA,qBAAKX,SAAL,GAAiBa,SAAS,QAAT,EAAmBF,SAAnB,CAAjB;AACH,aAnCD;;AAqCAhB,sBAAUnT,SAAV,CAAoB6T,uBAApB,GAA8C,YAAY;AACtD,oBAAIM,YAAY;;;0BAAhB;AAIA,qBAAK,IAAIC,UAAU,CAAnB,EAAsBA,UAAU,KAAKjF,QAArC,EAA+C,EAAEiF,OAAjD,EAA0D;AACtDD,iCAAa,eAAeC,OAAf,GAAyB,OAAtC;AACH;AACDD,6BAAa;;;;;;;;wBAAA,GAQF,KAAKT,WARH,GAQiB,GAR9B;AASA,qBAAKU,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,WAAWC,OAAX,GAAqB,OAAlC;AACH;AACDD,6BAAa;;wCAAb;AAGA,qBAAKC,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,WAAWC,OAAX,GAAqB,qBAArB,GAA6CA,OAA7C,GAAuD,IAApE;AACH;AACDD,6BAAa;;;;4CAAb;AAKA,qBAAKC,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,WAAWC,OAAX,GAAqB,8CAAlC;AACH;AACDD,6BAAa;;;qBAAb;AAIA,qBAAKC,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,WAAWC,OAAX,GAAqB,2BAArB,IAAqDA,UAAU,CAAX,GAAiB,QAAQA,OAAzB,GAAoC,EAAxF,IAA8F,aAA3G;AACH;AACDD,6BAAa;;;;;+BAAb;AAMA,qBAAKC,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,0CAA0CC,OAA1C,GAAoD,KAApD,GAA4D,KAAKV,WAAjE,GAA+E,GAA5F;AACH;AACDS,6BAAa;;wCAAb;AAGA,qBAAKC,UAAU,CAAf,EAAkBA,UAAU,KAAKjF,QAAjC,EAA2C,EAAEiF,OAA7C,EAAsD;AAClDD,iCAAa,qBAAqBC,OAArB,GAA+B,YAA/B,GAA8CA,OAA9C,GAAwD,GAArE;AACH;AACDD,6BAAa;;;;;kCAAb;;AAOA,qBAAKX,SAAL,GAAiBa,SAAS,QAAT,EAAmBF,SAAnB,CAAjB;AACH,aAhED;;AAkEAhB,sBAAUnT,SAAV,CAAoByT,eAApB,GAAsC,UAAUa,WAAV,EAAuB;AACzD,uBAAOA,WAAP;AACH,aAFD;AAGA,mBAAOnB,SAAP;AACH,SA5J8B,EAA/B;;AA8JA,YAAIoB,iBAAiBjV,GAAGiV,cAAH,GAAqB,UAAUjT,MAAV,EAAkB;AACxD,gBAAIkT,eAAJ;AAAA,gBAAqBC,gBAAgB,IAArC;AAAA,gBAA2CC,eAAerV,OAAOqV,YAAP,IAAuBrV,OAAOsV,kBAAxF;;AAEAlV,sBAAU8U,cAAV,EAA0BjT,MAA1B;;AAEA0N,wBAAYnB,QAAZ,CAAqB0G,cAArB;;AAEAA,2BAAerE,SAAf,GAA2BwE,iBAAiB,OAAOA,aAAa1U,SAAb,CAAuBwU,kBAAkB,uBAAzC,CAAP,KAA6E,UAA7E,IAA2F,OAAOE,aAAa1U,SAAb,CAAuBwU,kBAAkB,sBAAzC,CAAP,KAA4E,UAAxL,CAA3B;;AAEAD,2BAAe/G,IAAf,GAAsB,YAAU;AAC5B,oBAAG+G,eAAerE,SAAlB,EAA4B;AACxB,wBAAG,CAACuE,aAAJ,EAAmB;AACfA,wCAAgB,IAAIC,YAAJ,EAAhB;AACA,4BAAIE,OAAOH,cAAcD,eAAd,EAA+B,IAA/B,EAAqC,CAArC,EAAwC,CAAxC,CAAX;AACAI,6BAAKC,OAAL,CAAaJ,cAAcK,WAA3B;AACH,qBAJD,MAIO;AACH,4BAAGL,cAAcM,KAAd,KAAwB,WAA3B,EAAwC;AACpCN,0CAAcO,KAAd;AACAP,4CAAgB,IAAIC,YAAJ,EAAhB;AACA,gCAAIE,OAAOH,cAAcD,eAAd,EAA+B,IAA/B,EAAqC,CAArC,EAAwC,CAAxC,CAAX;AACAI,iCAAKC,OAAL,CAAaJ,cAAcK,WAA3B;AACH;AACJ;AACJ;AACJ,aAfD;;AAiBA,qBAASP,cAAT,CAAwBrF,UAAxB,EAAoCC,QAApC,EAA8C;AAC1C,oBAAI8F,WAAW,IAAf,CAD0C,CACrB;AACrB,qBAAK/F,UAAL,GAAkBA,UAAlB;AACA,qBAAKC,QAAL,GAAgBA,QAAhB;AACA,qBAAKW,MAAL,GAAc1P,OAAO,KAAK0P,MAAZ,EAAoB,IAApB,CAAd;AACA,qBAAKoF,OAAL,GAAeT,iBAAiB,IAAjB,GAAwBA,aAAxB,GAAwCA,gBAAgB,IAAIC,YAAJ,EAAvE;AACA,qBAAKS,gBAAL,GAAwB,KAAKD,OAAL,CAAahG,UAArC;AACA,qBAAKkG,UAAL,GAAkB9S,KAAK0R,IAAL,CAAUiB,YAAY,KAAKE,gBAAL,GAAwB,KAAKjG,UAAzC,IAAuD,KAAKC,QAAtE,CAAlB;AACA,qBAAKiG,UAAL,IAAmB,KAAKA,UAAL,GAAkB,KAAKjG,QAA1C;AACA,oBAAI,KAAKgG,gBAAL,KAA0B,KAAKjG,UAAnC,EAA+C;AAC3C,yBAAKsE,SAAL,GAAiB,IAAIL,SAAJ,CAAc,KAAKjE,UAAnB,EAA+B,KAAKiG,gBAApC,EAAsD,KAAKhG,QAA3D,EAAqE,KAAKiG,UAA1E,CAAjB;AACH;AACD,qBAAKR,IAAL,GAAY,KAAKM,OAAL,CAAaV,eAAb,EAA8BS,QAA9B,EAAwC,KAAK9F,QAA7C,EAAuD,KAAKA,QAA5D,CAAZ;AACA,qBAAKyF,IAAL,CAAUS,cAAV,GAA2B,KAAKvF,MAAhC;AACA,qBAAK8E,IAAL,CAAUC,OAAV,CAAkB,KAAKK,OAAL,CAAaJ,WAA/B;AACH;;AAEDP,2BAAevU,SAAf,CAAyB8P,MAAzB,GAAkC,UAAU7I,KAAV,EAAiB;AAC/C,oBAAIqO,YAAJ,EAAkBnG,QAAlB,EAA4B/K,IAA5B,EAAkCxD,CAAlC,EAAqC2U,CAArC,EAAwCtB,YAAxC,EAAsDrM,EAAtD,EAA0D+B,EAA1D,EAA8D6L,EAA9D,EAAkEnU,IAAlE;AACA4S,+BAAehN,MAAMgN,YAArB;AACAqB,+BAAerB,aAAawB,gBAA5B;AACAtG,2BAAW,IAAI7K,KAAJ,CAAUgR,YAAV,CAAX;AACA,qBAAK1U,IAAIgH,KAAK,CAAd,EAAiBA,KAAK0N,YAAtB,EAAoC1U,IAAIgH,MAAM,CAA9C,EAAiD;AAC7CuH,6BAASvO,CAAT,IAAcqT,aAAayB,cAAb,CAA4B9U,CAA5B,CAAd;AACH;AACDwD,uBAAO,IAAI8E,YAAJ,CAAiB,KAAKkM,UAAtB,CAAP;AACA,qBAAK1N,IAAL,CAAU,QAAV,EAAoBtD,IAApB;AACA,oBAAI,KAAKoP,SAAT,EAAoB;AAChBpP,2BAAO,KAAKoP,SAAL,CAAeA,SAAf,CAAyBpP,IAAzB,CAAP;AACH;AACD,qBAAKxD,IAAI+I,KAAK,CAAT,EAAYtI,OAAO4S,aAAanT,MAArC,EAA6C6I,KAAKtI,IAAlD,EAAwDT,IAAI+I,MAAM,CAAlE,EAAqE;AACjE,yBAAK4L,IAAIC,KAAK,CAAd,EAAiBA,KAAKF,YAAtB,EAAoCC,IAAIC,MAAM,CAA9C,EAAiD;AAC7CrG,iCAASoG,CAAT,EAAY3U,CAAZ,IAAiBwD,KAAKxD,IAAI0U,YAAJ,GAAmBC,CAAxB,CAAjB;AACH;AACJ;AACJ,aAlBD;;AAoBAhB,2BAAevU,SAAf,CAAyBiQ,OAAzB,GAAmC,YAAY;AAC3C,uBAAO,KAAK2E,IAAL,CAAUe,UAAV,CAAqB,CAArB,CAAP;AACH,aAFD;;AAIApB,2BAAevU,SAAf,CAAyB2P,aAAzB,GAAyC,YAAY;AACjD,uBAAO,KAAKuF,OAAL,CAAa5F,WAAb,GAA2B,KAAKJ,UAAvC;AACH,aAFD;;AAIA,mBAAOqF,cAAP;AAEH,SAzEwC,CAyEtCxN,YAzEsC,CAAzC;;AA2EA,YAAI6O,SAAStW,GAAGsW,MAAH,GAAa,YAAY;AAClC,qBAASA,MAAT,CAAgBV,OAAhB,EAAyBtV,GAAzB,EAA8B;AAC1B,oBAAIsV,WAAWtV,GAAf,EAAoB;AAChB2B,2BAAOsU,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AACjCxD,6BAAK,eAAY;AACb,mCAAO6C,QAAQtV,GAAR,CAAP;AACH;AAHgC,qBAArC;AAKH;AACJ;;AAEDgW,mBAAO5V,SAAP,CAAiB8V,OAAjB,GAA2B,UAAUrR,MAAV,EAAkB,CAC5C,CADD;;AAGA,mBAAOmR,MAAP;AAEH,SAhBwB,EAAzB;;AAkBA,YAAIG,gBAAgBzW,GAAGyW,aAAH,GAAoB,UAASzU,MAAT,EAAiB;AACrD7B,sBAAUsW,aAAV,EAAyBzU,MAAzB;;AAEA,qBAASyU,aAAT,GAAyB;AACrB,uBAAOA,cAAc9V,SAAd,CAAwBF,WAAxB,CAAoCQ,KAApC,CAA0C,IAA1C,EAAgDC,SAAhD,CAAP;AACH;;AAEDuV,0BAAc/V,SAAd,CAAwB8V,OAAxB,GAAkC,UAASrR,MAAT,EAAiB;AAC/C,oBAAI7D,CAAJ,EAAOoV,GAAP,EAAYpO,EAAZ,EAAgBvG,IAAhB;AACA,oBAAI,KAAKkR,KAAL,KAAe,CAAnB,EAAsB;AAClB;AACH;AACDyD,sBAAM1T,KAAK2T,GAAL,CAAS,CAAC,EAAV,EAAc3T,KAAK4T,GAAL,CAAS,EAAT,EAAa,KAAK3D,KAAlB,CAAd,CAAN;AACA,qBAAK3R,IAAIgH,KAAK,CAAT,EAAYvG,OAAOoD,OAAO3D,MAA/B,EAAuC8G,KAAKvG,IAA5C,EAAkDT,IAAIgH,MAAM,CAA5D,EAA+D;AAC3DnD,2BAAO7D,CAAP,KAAa0B,KAAK4T,GAAL,CAAS,CAAT,EAAY,CAAC,KAAKF,GAAN,IAAa,EAAzB,CAAb;AACAvR,2BAAO7D,IAAI,CAAX,KAAiB0B,KAAK4T,GAAL,CAAS,CAAT,EAAY,CAAC,KAAKF,GAAN,IAAa,EAAzB,CAAjB;AACH;AACJ,aAVD;;AAYA,mBAAOD,aAAP;AAEH,SArBsC,CAqBpCH,MArBoC,CAAvC;;AAuBA,YAAIO,eAAe7W,GAAG6W,YAAH,GAAmB,UAAS7U,MAAT,EAAiB;AACnD7B,sBAAU0W,YAAV,EAAwB7U,MAAxB;;AAEA,qBAAS6U,YAAT,GAAwB;AACpB,uBAAOA,aAAalW,SAAb,CAAuBF,WAAvB,CAAmCQ,KAAnC,CAAyC,IAAzC,EAA+CC,SAA/C,CAAP;AACH;;AAED2V,yBAAanW,SAAb,CAAuB8V,OAAvB,GAAiC,UAASrR,MAAT,EAAiB;AAC9C,oBAAI7D,CAAJ,EAAOwV,GAAP,EAAYxO,EAAZ,EAAgBvG,IAAhB;AACA,oBAAI,KAAKkR,KAAL,IAAc,GAAlB,EAAuB;AACnB;AACH;AACD6D,sBAAM9T,KAAK2T,GAAL,CAAS,CAAT,EAAY3T,KAAK4T,GAAL,CAAS,GAAT,EAAc,KAAK3D,KAAnB,CAAZ,IAAyC,GAA/C;AACA,qBAAK3R,IAAIgH,KAAK,CAAT,EAAYvG,OAAOoD,OAAO3D,MAA/B,EAAuC8G,KAAKvG,IAA5C,EAAkDT,IAAIgH,MAAM,CAA5D,EAA+D;AAC3DnD,2BAAO7D,CAAP,KAAawV,GAAb;AACH;AACJ,aATD;;AAWA,mBAAOD,YAAP;AAEH,SApBoC,CAoBlCP,MApBkC,CAArC;;AAsBAtW,WAAG+W,MAAH,GAAa,UAAS/U,MAAT,EAAiB;AAC1B7B,sBAAU4W,MAAV,EAAkB/U,MAAlB;;AAEA,qBAAS+U,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,qBAAKA,KAAL,GAAaA,KAAb;AACA,qBAAKC,YAAL,GAAoBnW,OAAO,KAAKmW,YAAZ,EAA0B,IAA1B,CAApB;AACA,qBAAKlH,OAAL,GAAe,KAAf;AACA,qBAAKuC,QAAL,GAAgB,CAAhB;AACA,qBAAKtC,WAAL,GAAmB,CAAnB;AACA,qBAAKuC,QAAL,GAAgB,CAAhB;AACA,qBAAK2E,MAAL,GAAc,GAAd;AACA,qBAAKR,GAAL,GAAW,CAAX;AACA,qBAAKlE,QAAL,GAAgB,EAAhB;AACA,qBAAK2E,OAAL,GAAe,CAAC,IAAIN,YAAJ,CAAiB,IAAjB,EAAuB,QAAvB,CAAD,EAAmC,IAAIJ,aAAJ,CAAkB,IAAlB,EAAwB,KAAxB,CAAnC,CAAf;AACA,qBAAKO,KAAL,CAAWtP,EAAX,CAAc,QAAd,EAAyB,UAASkG,KAAT,EAAgB;AACrC,2BAAO,UAAS0E,QAAT,EAAmB;AACtB1E,8BAAM0E,QAAN,GAAiBA,QAAjB;AACA,+BAAO1E,MAAMxF,IAAN,CAAW,QAAX,EAAqBwF,MAAM0E,QAA3B,CAAP;AACH,qBAHD;AAIH,iBALuB,CAKrB,IALqB,CAAxB;AAMA,qBAAK0E,KAAL,CAAWtP,EAAX,CAAc,aAAd,EAA8B,UAASkG,KAAT,EAAgB;AAC1C,2BAAO,YAAW;AACdA,8BAAMwJ,KAAN,GAAc,IAAIC,KAAJ,CAAUzJ,MAAMoJ,KAAhB,CAAd;AACA,+BAAOpJ,MAAMwJ,KAAN,CAAYlP,IAAZ,CAAiB,OAAjB,EAA0B0F,MAAMqJ,YAAhC,CAAP;AACH,qBAHD;AAIH,iBAL4B,CAK1B,IAL0B,CAA7B;AAMA,qBAAKD,KAAL,CAAWtP,EAAX,CAAc,QAAd,EAAyB,UAASkG,KAAT,EAAgB;AACrC,2BAAO,UAASJ,MAAT,EAAiB;AACpBI,8BAAMJ,MAAN,GAAeA,MAAf;AACA,+BAAOI,MAAMxF,IAAN,CAAW,QAAX,EAAqBwF,MAAMJ,MAA3B,CAAP;AACH,qBAHD;AAIH,iBALuB,CAKrB,IALqB,CAAxB;AAMA,qBAAKwJ,KAAL,CAAWtP,EAAX,CAAc,UAAd,EAA2B,UAASkG,KAAT,EAAgB;AACvC,2BAAO,UAAS4E,QAAT,EAAmB;AACtB5E,8BAAM4E,QAAN,GAAiBA,QAAjB;AACA,+BAAO5E,MAAMxF,IAAN,CAAW,UAAX,EAAuBwF,MAAM4E,QAA7B,CAAP;AACH,qBAHD;AAIH,iBALyB,CAKvB,IALuB,CAA1B;AAMA,qBAAKwE,KAAL,CAAWtP,EAAX,CAAc,UAAd,EAA2B,UAASkG,KAAT,EAAgB;AACvC,2BAAO,UAAS2E,QAAT,EAAmB;AACtB3E,8BAAM2E,QAAN,GAAiBA,QAAjB;AACA,+BAAO3E,MAAMxF,IAAN,CAAW,UAAX,EAAuBwF,MAAM2E,QAA7B,CAAP;AACH,qBAHD;AAIH,iBALyB,CAKvB,IALuB,CAA1B;AAMA,qBAAKyE,KAAL,CAAWtP,EAAX,CAAc,OAAd,EAAwB,UAASkG,KAAT,EAAgB;AACpC,2BAAO,UAASE,KAAT,EAAgB;AACnB,+BAAOF,MAAMxF,IAAN,CAAW,OAAX,EAAoB0F,KAApB,CAAP;AACH,qBAFD;AAGH,iBAJsB,CAIpB,IAJoB,CAAvB;AAKH;;AAEDiJ,mBAAO/M,UAAP,GAAoB,UAAS7E,MAAT,EAAiB;AACjC,uBAAO,IAAI4R,MAAJ,CAAW5E,MAAMnI,UAAN,CAAiB7E,MAAjB,CAAX,CAAP;AACH,aAFD;AAGA4R,mBAAOpE,gBAAP,GAA0B,YAAY;AAClC,uBAAO,IAAI3S,GAAG+W,MAAP,CAAc/W,GAAGmS,KAAH,CAASQ,gBAAT,EAAd,CAAP;AACH,aAFD;AAGAoE,mBAAOrW,SAAP,CAAiB4W,OAAjB,GAA2B,YAAW;AAClC,oBAAI,CAAC,KAAKN,KAAV,EAAiB;AACb;AACH;AACD,qBAAKO,iBAAL,GAAyB,IAAzB;AACA,uBAAO,KAAKP,KAAL,CAAW9G,KAAX,CAAiB,KAAjB,CAAP;AACH,aAND;;AAQA6G,mBAAOrW,SAAP,CAAiB8W,IAAjB,GAAwB,YAAW;AAC/B,oBAAIzV,IAAJ;AACA,oBAAI,KAAKgO,OAAT,EAAkB;AACd;AACH;AACD,oBAAI,CAAC,KAAKwH,iBAAV,EAA6B;AACzB,yBAAKD,OAAL;AACH;AACD,qBAAKvH,OAAL,GAAe,IAAf;AACA,uBAAO,CAAChO,OAAO,KAAKoO,MAAb,KAAwB,IAAxB,GAA+BpO,KAAKmO,KAAL,EAA/B,GAA8C,KAAK,CAA1D;AACH,aAVD;;AAYA6G,mBAAOrW,SAAP,CAAiBoS,KAAjB,GAAyB,YAAW;AAChC,oBAAI/Q,IAAJ;AACA,oBAAI,CAAC,KAAKgO,OAAV,EAAmB;AACf;AACH;AACD,qBAAKA,OAAL,GAAe,KAAf;AACA,uBAAO,CAAChO,OAAO,KAAKoO,MAAb,KAAwB,IAAxB,GAA+BpO,KAAK0O,IAAL,EAA/B,GAA6C,KAAK,CAAzD;AACH,aAPD;;AASAsG,mBAAOrW,SAAP,CAAiB+W,cAAjB,GAAkC,YAAW;AACzC,oBAAI,KAAK1H,OAAT,EAAkB;AACd,2BAAO,KAAK+C,KAAL,EAAP;AACH,iBAFD,MAEO;AACH,2BAAO,KAAK0E,IAAL,EAAP;AACH;AACJ,aAND;;AAQAT,mBAAOrW,SAAP,CAAiB+P,IAAjB,GAAwB,YAAW;AAC/B,oBAAI1O,IAAJ;AACA,qBAAK+Q,KAAL;AACA,qBAAKkE,KAAL,CAAWvG,IAAX;AACA,uBAAO,CAAC1O,OAAO,KAAKoO,MAAb,KAAwB,IAAxB,GAA+BpO,KAAK4O,OAAL,EAA/B,GAAgD,KAAK,CAA5D;AACH,aALD;;AAOAoG,mBAAOrW,SAAP,CAAiBwC,IAAjB,GAAwB,UAASmL,SAAT,EAAoB;AACxC,oBAAItM,IAAJ;AACA,oBAAI,CAACA,OAAO,KAAKoO,MAAb,KAAwB,IAA5B,EAAkC;AAC9BpO,yBAAK0O,IAAL;AACH;AACD,qBAAK2G,KAAL,CAAWlP,IAAX,CAAgB,OAAhB,EAA0B,UAAS0F,KAAT,EAAgB;AACtC,2BAAO,YAAW;AACd,4BAAIpF,KAAJ,EAAWoL,KAAX;AACA,4BAAI,CAACpL,QAAQoF,MAAMuC,MAAf,KAA0B,IAA9B,EAAoC;AAChC3H,kCAAMtF,IAAN,CAAW0K,MAAMoC,WAAjB;AACH;AACD,4BAAIpC,MAAMmC,OAAV,EAAmB;AACf,mCAAO,CAAC6D,QAAQhG,MAAMuC,MAAf,KAA0B,IAA1B,GAAiCyD,MAAM1D,KAAN,EAAjC,GAAiD,KAAK,CAA7D;AACH;AACJ,qBARD;AASH,iBAVwB,CAUtB,IAVsB,CAAzB;AAWA7B,4BAAaA,YAAY,IAAb,GAAqB,KAAKb,MAAL,CAAYoC,UAA7C;AACAvB,4BAAY,KAAK2I,KAAL,CAAWvI,OAAX,CAAmBvL,IAAnB,CAAwBmL,SAAxB,CAAZ;AACA,qBAAK2B,WAAL,GAAmB3B,YAAY,KAAKb,MAAL,CAAYoC,UAAxB,GAAqC,IAArC,GAA4C,CAA/D;AACA,qBAAKwH,KAAL,CAAW7P,KAAX;AACA,uBAAO,KAAKyI,WAAZ;AACH,aArBD;;AAuBA+G,mBAAOrW,SAAP,CAAiBuW,YAAjB,GAAgC,YAAW;AACvC,oBAAIS,KAAJ,EAAWC,WAAX;AACAD,wBAAQ,KAAKN,KAAL,CAAW/T,IAAX,EAAR;AACAsU,8BAAc,CAAd;AACA,qBAAKxH,MAAL,GAAc,IAAIT,WAAJ,CAAgB,KAAKlC,MAAL,CAAYoC,UAA5B,EAAwC,KAAKpC,MAAL,CAAYoK,gBAApD,CAAd;AACA,qBAAKzH,MAAL,CAAYzI,EAAZ,CAAe,YAAf,EAA8B,UAASkG,KAAT,EAAgB;AAC1C,2BAAO,UAASoC,WAAT,EAAsB;AACzBpC,8BAAMoC,WAAN,GAAoBA,WAApB;AACA,+BAAOpC,MAAMxF,IAAN,CAAW,UAAX,EAAuBwF,MAAMoC,WAA7B,CAAP;AACH,qBAHD;AAIH,iBAL4B,CAK1B,IAL0B,CAA7B;AAMA,qBAAKQ,MAAL,GAAe,UAAS5C,KAAT,EAAgB;AAC3B,2BAAO,UAASzI,MAAT,EAAiB;AACpB,4BAAI0S,YAAJ,EAAkBC,MAAlB,EAA0BxW,CAA1B,EAA6BqV,GAA7B,EAAkCrO,EAAlC,EAAsC+B,EAAtC,EAA0C9B,IAA1C,EAAgDxG,IAAhD;AACA,4BAAI,CAAC6L,MAAMmC,OAAX,EAAoB;AAChB;AACH;AACD,4BAAI,CAAC2H,KAAL,EAAY;AACRA,oCAAQ9J,MAAMwJ,KAAN,CAAY/T,IAAZ,EAAR;AACAsU,0CAAc,CAAd;AACH;AACDE,uCAAe,CAAf;AACA,+BAAOH,SAASG,eAAe1S,OAAO3D,MAAtC,EAA8C;AAC1CmV,kCAAM3T,KAAK4T,GAAL,CAASc,MAAMlW,MAAN,GAAemW,WAAxB,EAAqCxS,OAAO3D,MAAP,GAAgBqW,YAArD,CAAN;AACA,iCAAKvW,IAAIgH,KAAK,CAAd,EAAiBA,KAAKqO,GAAtB,EAA2BrV,IAAIgH,MAAM,CAArC,EAAwC;AACpCnD,uCAAO0S,cAAP,IAAyBH,MAAMC,aAAN,CAAzB;AACH;AACD,gCAAIA,gBAAgBD,MAAMlW,MAA1B,EAAkC;AAC9BkW,wCAAQ9J,MAAMwJ,KAAN,CAAY/T,IAAZ,EAAR;AACAsU,8CAAc,CAAd;AACH;AACJ;AACD5V,+BAAO6L,MAAMuJ,OAAb;AACA,6BAAK9M,KAAK,CAAL,EAAQ9B,OAAOxG,KAAKP,MAAzB,EAAiC6I,KAAK9B,IAAtC,EAA4C8B,IAA5C,EAAkD;AAC9CyN,qCAAS/V,KAAKsI,EAAL,CAAT;AACAyN,mCAAOtB,OAAP,CAAerR,MAAf;AACH;AACD,4BAAI,CAACuS,KAAL,EAAY;AACR;AACA;;;;;;;;;;AAUH;AACJ,qBAtCD;AAuCH,iBAxCa,CAwCX,IAxCW,CAAd;AAyCA,qBAAKvH,MAAL,CAAYzI,EAAZ,CAAe,QAAf,EAAyB,KAAK8I,MAA9B;AACA,oBAAI,KAAKT,OAAT,EAAkB;AACd,yBAAKI,MAAL,CAAYD,KAAZ;AACH;AACD,uBAAO,KAAK9H,IAAL,CAAU,OAAV,CAAP;AACH,aAzDD;;AA2DA2O,mBAAOrW,SAAP,CAAiBiQ,OAAjB,GAA2B,YAAW;AAClC,oBAAI5O,IAAJ,EAAUyG,KAAV;AACA,qBAAKiI,IAAL;AACA,oBAAI,CAAC1O,OAAO,KAAKoO,MAAb,KAAwB,IAA5B,EAAkC;AAC9BpO,yBAAKgG,GAAL;AACH;AACD,oBAAI,CAACS,QAAQ,KAAKwO,KAAd,KAAwB,IAA5B,EAAkC;AAC9BxO,0BAAMmI,OAAN;AACH;AACD,uBAAO,KAAK5I,GAAL,EAAP;AACH,aAVD;;AAYA,mBAAOgP,MAAP;AAEH,SArMW,CAqMTtP,YArMS,CAAZ;;AAuMA,YAAI4P,QAAQrX,GAAGqX,KAAH,GAAY,UAASrV,MAAT,EAAiB;AACrC7B,sBAAUkX,KAAV,EAAiBrV,MAAjB;;AAEA,qBAASqV,KAAT,CAAeL,KAAf,EAAsB;AAClB,qBAAKA,KAAL,GAAaA,KAAb;AACA,qBAAKe,KAAL,GAAajX,OAAO,KAAKiX,KAAZ,EAAmB,IAAnB,CAAb;AACA,qBAAKC,SAAL,GAAiB,CAAjB,CAHkB,CAGG;AACrB,qBAAKC,QAAL,GAAgB,KAAhB;AACA,qBAAKC,SAAL,GAAiB,IAAjB;AACA,qBAAKC,KAAL,GAAa,KAAb;AACA,qBAAKC,OAAL,GAAe,EAAf;AACA,qBAAKpB,KAAL,CAAWtP,EAAX,CAAc,MAAd,EAAsB,KAAKqQ,KAA3B;AACA,qBAAKf,KAAL,CAAWtP,EAAX,CAAc,KAAd,EAAsB,UAASkG,KAAT,EAAgB;AAClC,2BAAO,YAAW;AACd,+BAAOA,MAAMuK,KAAN,GAAc,IAArB;AACH,qBAFD;AAGH,iBAJoB,CAIlB,IAJkB,CAArB;AAKA,qBAAKnB,KAAL,CAAW9D,YAAX;AACH;;AAEDmE,kBAAM3W,SAAN,CAAgBqX,KAAhB,GAAwB,UAAS5S,MAAT,EAAiB;AACrC,oBAAIA,MAAJ,EAAY;AACR,yBAAKiT,OAAL,CAAatQ,IAAb,CAAkB3C,MAAlB;AACH;AACD,oBAAI,KAAK+S,SAAT,EAAoB;AAChB,wBAAI,KAAKE,OAAL,CAAa5W,MAAb,IAAuB,KAAKwW,SAA5B,IAAyC,KAAKG,KAAlD,EAAyD;AACrD,6BAAKD,SAAL,GAAiB,KAAjB;AACA,+BAAO,KAAK9P,IAAL,CAAU,OAAV,CAAP;AACH,qBAHD,MAGO;AACH,+BAAO,KAAK4O,KAAL,CAAW9D,YAAX,EAAP;AACH;AACJ;AACJ,aAZD;;AAcAmE,kBAAM3W,SAAN,CAAgB2C,IAAhB,GAAuB,YAAW;AAC9B,oBAAI,KAAK+U,OAAL,CAAa5W,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,2BAAO,IAAP;AACH;AACD,qBAAKwV,KAAL,CAAW9D,YAAX;AACA,uBAAO,KAAKkF,OAAL,CAAaC,KAAb,EAAP;AACH,aAND;;AAQAhB,kBAAM3W,SAAN,CAAgB6G,KAAhB,GAAwB,YAAW;AAC/B,qBAAK6Q,OAAL,CAAa5W,MAAb,GAAsB,CAAtB;AACA,qBAAK0W,SAAL,GAAiB,IAAjB;AACA,uBAAO,KAAKlB,KAAL,CAAW9D,YAAX,EAAP;AACH,aAJD;;AAMA,mBAAOmE,KAAP;AAEH,SAlDsB,CAkDpB5P,YAlDoB,CAAvB;;AAoDA,YAAIiL,eAAe1S,GAAG0S,YAAH,GAAmB,UAAS1Q,MAAT,EAAiB;AACnD,gBAAIsW,cAAJ,EAAoBC,YAApB;;AAEApY,sBAAUuS,YAAV,EAAwB1Q,MAAxB;;AAEA,qBAAS0Q,YAAT,CAAsB9N,KAAtB,EAA6B;AACzB,qBAAK4T,IAAL,GAAY1X,OAAO,KAAK0X,IAAZ,EAAkB,IAAlB,CAAZ;AACA,oBAAI5T,iBAAiBqC,UAArB,EAAiC;AAC7B,yBAAK6C,IAAL,GAAYlF,KAAZ;AACH,iBAFD,MAEO;AACH,yBAAKkF,IAAL,GAAY,IAAI7C,UAAJ,EAAZ;AACA,wBAAIrC,SAAS,IAAb,EAAmB;AACf,6BAAKkF,IAAL,CAAUzD,MAAV,CAAiB,IAAI7B,QAAJ,CAAaI,KAAb,CAAjB;AACP;AACD,qBAAK6T,MAAL,GAAc,IAAd;AACH;;AAEDF,2BAAexY,OAAOwY,YAAP,IAAuB,UAAUxX,EAAV,EAAc;AAChD,uBAAOhB,OAAO2Y,UAAP,CAAkB3X,EAAlB,EAAsB,CAAtB,CAAP;AACH,aAFD;;AAIAuX,6BAAiBvY,OAAOuY,cAAP,IAAyB,UAAU7G,KAAV,EAAiB;AACvD,uBAAO1R,OAAO4Y,YAAP,CAAoBlH,KAApB,CAAP;AACH,aAFD;;AAIAiB,yBAAahS,SAAb,CAAuBwP,KAAvB,GAA+B,YAAY;AACvC,qBAAKuI,MAAL,GAAc,KAAd;AACA,uBAAO,IAAP,CAFuC,CAEzB;AACd;AACH,aAJD;;AAMA/F,yBAAahS,SAAb,CAAuBkY,GAAvB,GAA6B,UAAU9T,IAAV,EAAgB;AAAG;AAC5C,qBAAK+T,WAAL,IAAoB/T,KAAKtD,MAAzB;AACA;AACA,qBAAKsI,IAAL,CAAUzD,MAAV,CAAiB,IAAI7B,QAAJ,CAAaM,IAAb,CAAjB;AACA,qBAAKsD,IAAL,CAAU,MAAV,EAAkB,KAAK0B,IAAL,CAAU5C,KAA5B;AACA,qBAAK4C,IAAL,CAAUjH,OAAV;AACH,aAND;;AAQA6P,yBAAahS,SAAb,CAAuB8X,IAAvB,GAA8B,YAAY;AACtC,qBAAKpQ,IAAL,CAAU,UAAV,EAAsB,CAAC,KAAK0B,IAAL,CAAU1C,UAAV,GAAuB,KAAK0C,IAAL,CAAUxC,gBAAjC,GAAoD,CAArD,IAA0D,KAAKwC,IAAL,CAAU1C,UAApE,GAAiF,GAAjF,GAAuF,CAA7G;AACA,qBAAKgB,IAAL,CAAU,MAAV,EAAkB,KAAK0B,IAAL,CAAU5C,KAA5B;AACA,oBAAI,KAAK4C,IAAL,CAAUjH,OAAV,EAAJ,EAAyB;AACrB,2BAAO0V,aAAa,KAAKC,IAAlB,CAAP;AACH,iBAFD,MAEO;AACH,2BAAO,KAAKpQ,IAAL,CAAU,KAAV,CAAP;AACH;AACJ,aARD;;AAUAsK,yBAAahS,SAAb,CAAuBoS,KAAvB,GAA+B,YAAY;AACvCwF,+BAAe,KAAKhI,MAApB;AACA,uBAAO,KAAKmI,MAAL,GAAc,IAArB;AACH,aAHD;;AAKA/F,yBAAahS,SAAb,CAAuB6G,KAAvB,GAA+B,YAAY;AACvC,qBAAKuL,KAAL;AACA,uBAAO,KAAKhJ,IAAL,CAAU/G,MAAV,EAAP;AACH,aAHD;;AAKA,mBAAO2P,YAAP;AAEH,SA7DoC,CA6DlCjL,YA7DkC,CAArC;AA8DH,KA/sED,EA+sEG3H,IA/sEH;AAgtEA;;;;;;;;;;;;;;;;;;;AAmBA,KAAC,UAAUC,MAAV,EAAkB;AACf,YAAIC,KAAKD,OAAOC,EAAhB;;AAEA,YAAI8Y,cAAc9Y,GAAG2O,OAAH,CAAWhN,MAAX,CAAkB,YAAY;AAC5C3B,eAAG2O,OAAH,CAAWJ,QAAX,CAAoB,IAApB;;AAEA,iBAAKM,KAAL,GAAa,UAAUvM,MAAV,EAAkB;AAC3B,oBAAII,SAASJ,OAAOI,MAApB;;AAEA;AACA,uBAAOJ,OAAOK,SAAP,CAAiB,CAAjB,CAAP,EAA4B;AACxB,wBAAI,CAACL,OAAOkI,UAAP,KAAsB,MAAvB,MAAmC,MAAvC,EAA+C;AAC3ClI,+BAAOY,IAAP,CAAYR,MAAZ;AACA,+BAAO,IAAP;AACH;AACJ;;AAEDJ,uBAAOY,IAAP,CAAYR,MAAZ;AACA,uBAAO,KAAP;AACH,aAbD;;AAeA,iBAAKhC,SAAL,CAAewN,IAAf,GAAsB,YAAY;AAC9B,qBAAKT,SAAL,GAAiB,IAAIzN,GAAGqC,SAAP,CAAiB,KAAKC,MAAtB,CAAjB;AACH,aAFD;;AAIA;AACA;AACA,iBAAKyW,UAAL,GAAkB,UAAUzW,MAAV,EAAkB;AAChC,oBAAIA,OAAOe,IAAP,CAAY,EAAZ,MAAoB,KAAxB,EACI,MAAM,IAAIe,KAAJ,CAAU,sBAAV,CAAN;;AAEJ,oBAAIjC,MAAM,EAAV;AACAG,uBAAOO,OAAP,CAAe,CAAf,EALgC,CAKb;AACnB,oBAAImW,mBAAmB,CAAC,CAAC1W,OAAOe,IAAP,CAAY,CAAZ,CAAzB;;AAEAlB,oBAAI8W,OAAJ,GAAc3W,OAAOe,IAAP,CAAY,CAAZ,IAAiB,CAA/B;AACAlB,oBAAI+W,aAAJ,GAAoB5W,OAAOe,IAAP,CAAY,CAAZ,CAApB;;AAEAf,uBAAOO,OAAP,CAAe,CAAf,EAXgC,CAWb;AACnBV,oBAAIgX,UAAJ,GAAiB7W,OAAOe,IAAP,CAAY,CAAZ,CAAjB;AACAf,uBAAOO,OAAP,CAAe,CAAf,EAbgC,CAab;;AAEnBV,oBAAIiX,WAAJ,GAAkB9W,OAAOe,IAAP,CAAY,EAAZ,CAAlB;AACAf,uBAAOO,OAAP,CAAe,EAAf,EAhBgC,CAgBZ;;AAEpBV,oBAAIkX,SAAJ,GAAgB/W,OAAOe,IAAP,CAAY,CAAZ,IAAiB,CAAjC;;AAEA,oBAAI,CAAC2V,gBAAL,EACI1W,OAAOO,OAAP,CAAe,EAAf;;AAEJ,uBAAOV,GAAP;AACH,aAxBD;;AA0BA,iBAAKzB,SAAL,CAAeyN,SAAf,GAA2B,YAAY;AACnC,oBAAI,CAAC,KAAKmL,UAAV,EAAsB;AAClB,wBAAI5W,SAAS,KAAKJ,MAAL,CAAYI,MAAzB;AACA,wBAAI6W,SAAST,YAAYC,UAAZ,CAAuB,KAAKtL,SAA5B,CAAb;;AAEA,yBAAKrF,IAAL,CAAU,QAAV,EAAoB;AAChBoL,kCAAU,MADM;AAEhB5D,oCAAY4J,aAAaD,OAAOL,aAApB,CAFI;AAGhBtB,0CAAkB2B,OAAOJ,UAHT;AAIhBzF,wCAAgB;AAJA,qBAApB;;AAOA;AACA,wBAAI7F,SAAS,IAAIhJ,UAAJ,CAAe,CAAf,CAAb;AACAgJ,2BAAO,CAAP,IAAa0L,OAAON,OAAP,IAAkB,CAAnB,GAA0BM,OAAOL,aAAP,IAAwB,CAAzB,GAA8B,CAAnE;AACArL,2BAAO,CAAP,IAAa,CAAC0L,OAAOL,aAAP,GAAuB,CAAxB,KAA8B,CAA/B,GAAqCK,OAAOJ,UAAP,IAAqB,CAAtE;AACA,yBAAK/Q,IAAL,CAAU,QAAV,EAAoB,IAAIpI,GAAGyE,MAAP,CAAcoJ,MAAd,CAApB;;AAEA,yBAAKvL,MAAL,CAAYY,IAAZ,CAAiBR,MAAjB;AACA,yBAAK4W,UAAL,GAAkB,IAAlB;AACH;;AAED,uBAAO,KAAKhX,MAAL,CAAYK,SAAZ,CAAsB,CAAtB,CAAP,EAAiC;AAC7B,wBAAIwC,SAAS,KAAK7C,MAAL,CAAY4J,gBAAZ,CAA6B,KAAK5J,MAAL,CAAY4H,cAAZ,EAA7B,CAAb;AACA,yBAAK9B,IAAL,CAAU,MAAV,EAAkBjD,MAAlB;AACH;AACJ,aA1BD;AA2BH,SA7EiB,CAAlB;;AA+EA;AACA,YAAIsU,aAAc,YAAY;AAC1B,qBAASA,UAAT,CAAoBC,MAApB,EAA4B;AACxB,qBAAKC,GAAL,GAAW,IAAIC,QAAJ,CAAaF,MAAb,CAAX;AACA,qBAAKG,WAAL,GAAmB,IAAI7U,KAAJ,CAAU,CAAV,CAAnB;AACA,qBAAK8U,QAAL,GAAgB,IAAInQ,UAAJ,CAAe,CAAf,CAAhB;AACA,qBAAKoQ,QAAL,GAAgB,IAAIpQ,UAAJ,CAAe,CAAf,CAAhB;AACA,qBAAKqQ,IAAL,GAAY,IAAIhV,KAAJ,CAAU,EAAV,CAAZ;AACH;;AAEDyU,uBAAWQ,UAAX,GAAwB,CAAxB;AACAR,uBAAWS,SAAX,GAAuB,CAAvB;AACAT,uBAAWU,WAAX,GAAyB,CAAzB;;AAEA,gBAAIC,YAAY,IAAIxQ,YAAJ,CAAiB,CAC7B,sBAD6B,EAE7B,sBAF6B,EAG7B,2BAH6B,EAI7B,GAJ6B,CAAjB,CAAhB;;AAOA6P,uBAAW/Y,SAAX,GAAuB;AACnBuN,wBAAQ,gBAAU3L,MAAV,EAAkBoX,MAAlB,EAA0B;AAC9B,wBAAIG,cAAc,KAAKA,WAAvB;AAAA,wBACIC,WAAW,KAAKA,QADpB;AAAA,wBAEIC,WAAW,KAAKA,QAFpB;;AAIA,yBAAKM,aAAL,GAAqB,IAAI/X,OAAOe,IAAP,CAAY,CAAZ,CAAzB;AACA,yBAAKiX,YAAL,GAAoBhY,OAAOe,IAAP,CAAY,CAAZ,CAApB;;AAEA,wBAAIkX,YAAY,CAAhB;AACA,yBAAK,IAAIjZ,IAAI,CAAb,EAAgBA,KAAK,KAAKgZ,YAA1B,EAAwChZ,GAAxC,EAA6C;AACzCiZ;AACAV,oCAAYvY,CAAZ,IAAiBgB,OAAOe,IAAP,CAAY,CAAZ,CAAjB;AACAyW,iCAASxY,CAAT,IAAcgB,OAAOe,IAAP,CAAY,CAAZ,CAAd;;AAEA,4BAAIwW,YAAYvY,CAAZ,CAAJ,EAAoB;AAChByY,qCAASzY,CAAT,IAAcgB,OAAOe,IAAP,CAAY,CAAZ,CAAd;AACA,gCAAI0W,SAASzY,CAAT,MAAgB,CAApB,EACIiZ;AAEP,yBALD,MAKO;AACHR,qCAASzY,CAAT,IAAc,CAAd;AACH;AACJ;;AAED,yBAAK+Y,aAAL,IAAsB/X,OAAOe,IAAP,CAAY,CAAZ,CAAtB;AACA,yBAAKgX,aAAL,IAAuB,KAAKA,aAAL,KAAuB,CAA9C;;AAEA,wBAAI5O,OAAOnJ,OAAOe,IAAP,CAAY,CAAZ,CAAX;AAAA,wBACImX,QAAQJ,UAAU9X,OAAOe,IAAP,CAAY,CAAZ,CAAV,CADZ;;AAGA,yBAAKsW,GAAL,CAAS1L,MAAT,CAAgB3L,MAAhB,EAAwBoX,MAAxB,EAAgC,KAAhC;;AAEA,wBAAIe,aAAa,KAAKd,GAAL,CAASe,IAAT,CAAcD,UAA/B;AAAA,wBACIE,SAAS,KAAKhB,GAAL,CAASe,IAAT,CAAcC,MAD3B;AAAA,wBAEIC,YAAY,KAAKjB,GAAL,CAASiB,SAFzB;;AAIA,yBAAK,IAAItZ,IAAI,CAAb,EAAgBA,IAAIiZ,SAApB,EAA+BjZ,GAA/B,EAAoC;AAChC,4BAAIuZ,MAAM,CAAV;AAAA,4BACIC,MAAM,CADV;AAAA,4BAEId,OAAO,CAFX;AAAA,4BAGIe,YAAY,CAHhB;;AAKA,4BAAIzZ,IAAI,CAAR,EAAW;AACPwZ,kCAAM,KAAKT,aAAL,KAAuBZ,WAAWU,WAAlC,GAAgD,CAAhD,GAAoD7X,OAAOe,IAAP,CAAY,CAAZ,CAA1D;AACA2W,mCAAOc,MAAME,QAAQC,iBAAR,CAA0B3Y,MAA1B,IAAoC,EAA1C,GAA+C,CAAtD;AACAyY,wCAAY/X,KAAKkB,GAAL,CAASsW,KAAT,EAAgB,CAACR,IAAjB,CAAZ;AACH;;AAED,4BAAIkB,SAAS,KAAKlB,IAAL,CAAU1Y,CAAV,IAAe,IAAIsI,YAAJ,CAAiB,GAAjB,CAA5B;;AAEA,4BAAI,KAAKyQ,aAAL,KAAuBZ,WAAWU,WAAtC,EAAmD;AAC/Ce,mCAAO,CAAP,IAAYH,SAAZ;AACH,yBAFD,MAEO;AACH,iCAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIV,UAApB,EAAgCU,GAAhC,EAAqC;AACjC,qCAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMT,MAAxB,EAAgCS,KAAhC,EAAuC;AACnC,wCAAIR,UAAUC,GAAV,MAAmBjB,SAASyB,OAAhC,EAAyC;AACrC,4CAAIP,QAAQ,CAAZ,EAAe;AACX,gDAAIQ,IAAIN,QAAQC,iBAAR,CAA0B3Y,MAA1B,IAAoC,EAA5C;AACA,gDAAIgZ,MAAM,CAAV,EAAa;AACT,oDAAIC,IAAI,CAAR;AACAD,oDAAItB,QAAQsB,CAAZ;AACA,oDAAI,CAAC7P,IAAL,EAAW;AACP8P,yDAAK,KAAKD,IAAI,GAAT,CAAL;AACAA,2DAAO,CAAP;AACH;AACDP,4DAAY/X,KAAKkB,GAAL,CAASsW,KAAT,EAAgB,CAACc,CAAjB,IAAsBC,CAAlC;AACH;AACJ;AACDL,+CAAOL,KAAP,IAAgBE,SAAhB;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,iBA3EkB;;AA6EnBS,0CAA0B,kCAAUxT,KAAV,EAAiBlD,IAAjB,EAAuB;AAC7C,wBAAIkV,OAAO,KAAKA,IAAL,CAAUhS,KAAV,EAAiB,CAAjB,CAAX;AAAA,wBACIyT,SAAS,KAAK9B,GAAL,CAAS7U,IADtB;;AAGA,yBAAK,IAAIxD,IAAI,CAAb,EAAgBA,IAAIwD,KAAKtD,MAAzB,EAAiCF,GAAjC,EAAsC;AAClCwD,6BAAKxD,CAAL,KAAW0Y,OAAOyB,OAAOna,CAAP,CAAlB;AACH;AACJ,iBApFkB;;AAsFnBoa,wCAAwB,gCAAU1T,KAAV,EAAiBlD,IAAjB,EAAuB;AAC3C,wBAAI4V,OAAO,KAAKf,GAAL,CAASe,IAApB;AAAA,wBACIiB,aAAajB,KAAKiB,UADtB;AAAA,wBAEIlB,aAAaC,KAAKD,UAFtB;AAAA,wBAGIE,SAASD,KAAKC,MAHlB;AAAA,wBAIIC,YAAY,KAAKjB,GAAL,CAASiB,SAJzB;AAAA,wBAKIa,SAAS,KAAK9B,GAAL,CAAS7U,IALtB;;AAOA,wBAAI+V,MAAM,CAAV;AAAA,wBACInY,SAAS,CADb;AAAA,wBAEIkZ,QAAQ,KAAK5B,IAAL,CAAUhS,KAAV,CAFZ;;AAIA,yBAAK,IAAImT,IAAI,CAAb,EAAgBA,IAAIV,UAApB,EAAgCU,GAAhC,EAAqC;AACjC,4BAAIU,MAAMnB,KAAKoB,WAAL,CAAiBX,CAAjB,CAAV;;AAEA,6BAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMT,MAAxB,EAAgCS,OAAOP,KAAvC,EAA8C;AAC1C,gCAAID,UAAUC,GAAV,MAAmBjB,SAASyB,OAAhC,EAAyC;AACrC,oCAAIrB,OAAO4B,MAAMf,GAAN,CAAX;AACA,qCAAK,IAAIkB,QAAQ,CAAjB,EAAoBA,QAAQF,GAA5B,EAAiCE,OAAjC,EAA0C;AACtC,yCAAK,IAAIC,IAAIL,WAAWP,GAAX,CAAb,EAA8BY,IAAIL,WAAWM,MAAM,CAAjB,CAAlC,EAAuDD,GAAvD,EAA4D;AACxDlX,6CAAKpC,SAASqZ,QAAQ,GAAjB,GAAuBC,CAA5B,KAAkChC,OAAOyB,OAAO/Y,SAASqZ,QAAQ,GAAjB,GAAuBC,CAA9B,CAAzC;AACH;AACJ;AACJ;AACJ;;AAEDtZ,kCAAUmZ,MAAM,GAAhB;AACH;AACJ;AAlHkB,aAAvB;AAoHA,mBAAOpC,UAAP;AACH,SAzIgB,EAAjB;;AA2IA;AACA,YAAIyC,aAAc,YAAU;AACxB,qBAASA,UAAT,CAAoBxC,MAApB,EAA4B;AACxB,qBAAKyC,OAAL,GAAe,EAAf;AACA,qBAAKC,IAAL,GAAY,IAAIxC,QAAJ,CAAaF,MAAb,CAAZ;AACA,qBAAK2C,KAAL,GAAa,IAAIzC,QAAJ,CAAaF,MAAb,CAAb;AACH;;AAED,gBAAI4C,cAAc,GAAlB;;AAEA,gBAAIC,kBAAkB,CAAtB;AAAA,gBACIC,iBAAiB,CADrB;AAAA,gBAEIC,kBAAkB,CAFtB;AAAA,gBAGIC,qBAAqB,CAHzB;;AAKAR,uBAAWxb,SAAX,CAAqBuN,MAArB,GAA8B,UAAS3L,MAAT,EAAiBoX,MAAjB,EAAyB;AACnD,oBAAI0C,OAAO,KAAKA,IAAhB;AAAA,oBACIC,QAAQ,KAAKA,KADjB;AAAA,oBAEIF,UAAU,KAAKA,OAFnB;;AAIA,oBAAI,KAAKQ,YAAL,GAAoB,CAAC,CAACra,OAAOe,IAAP,CAAY,CAAZ,CAA1B,EAA0C;AACtC+Y,yBAAK1B,IAAL,CAAUzM,MAAV,CAAiB3L,MAAjB,EAAyBoX,MAAzB,EAAiC,IAAjC;AACA2C,0BAAM3B,IAAN,GAAa0B,KAAK1B,IAAlB;;AAEA,wBAAIkC,OAAOta,OAAOe,IAAP,CAAY,CAAZ,CAAX;AACA,yBAAKwZ,WAAL,GAAmB,CAAC,CAACD,IAArB;;AAEA,4BAAQA,IAAR;AACI,6BAAKJ,cAAL;AACI,gCAAIX,MAAMO,KAAK1B,IAAL,CAAUD,UAAV,GAAuB2B,KAAK1B,IAAL,CAAUC,MAA3C;AACA,iCAAK,IAAIrZ,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1B6a,wCAAQ7a,CAAR,IAAa,CAAC,CAACgB,OAAOe,IAAP,CAAY,CAAZ,CAAf;AACH;AACD;;AAEJ,6BAAKkZ,eAAL;AACA,6BAAKE,eAAL;AACI,gCAAIK,MAAM,CAAC,CAACF,IAAZ;AACA,iCAAK,IAAItb,IAAI,CAAb,EAAgBA,IAAIgb,WAApB,EAAiChb,GAAjC,EAAsC;AAClC6a,wCAAQ7a,CAAR,IAAawb,GAAb;AACH;AACD;;AAEJ;AACI,kCAAM,IAAI1Y,KAAJ,CAAU,4BAA4BwY,IAAtC,CAAN;AAjBR;AAmBH,iBA1BD,MA0BO;AACH,yBAAK,IAAItb,IAAI,CAAb,EAAgBA,IAAIgb,WAApB,EAAiChb,GAAjC;AACI6a,gCAAQ7a,CAAR,IAAa,KAAb;AADJ;AAEH;;AAED8a,qBAAKnO,MAAL,CAAY3L,MAAZ,EAAoBoX,MAApB,EAA4B,KAAKiD,YAAjC;AACAN,sBAAMpO,MAAN,CAAa3L,MAAb,EAAqBoX,MAArB,EAA6B,KAAKiD,YAAlC;AACH,aAtCD;;AAwCA,mBAAOT,UAAP;AACH,SAvDgB,EAAjB;;AAyDA,YAAIa,aAAa/c,GAAGqN,OAAH,CAAW1L,MAAX,CAAkB,YAAW;AAC1C3B,eAAGqN,OAAH,CAAWkB,QAAX,CAAoB,MAApB,EAA4B,IAA5B;AACAvO,eAAGqN,OAAH,CAAWkB,QAAX,CAAoB,MAApB,EAA4B,IAA5B;;AAEA;AACA,gBAAIyO,eAAe,CAAnB;AAAA,gBAAsB;AAClBC,yBAAa,CADjB;AAAA,gBACsB;AAClBC,0BAAc,CAFlB;AAAA,gBAEsB;AAClBC,yBAAa,EAHjB;;AAKA;AACA,gBAAIC,sBAAsB,CAA1B;AAAA,gBACIC,sBAAsB,CAD1B;AAAA,gBAEIC,wBAAwB,CAF5B;AAAA,gBAGIC,oCAAoC,CAHxC;AAAA,gBAIIC,mDAAmD,CAJvD;AAAA,gBAKIC,sBAAsB,CAL1B;AAAA,gBAMIC,+BAA+B,CANnC;AAAA,gBAOIC,gCAAgC,CAPpC;;AASA,iBAAKjd,SAAL,CAAewN,IAAf,GAAsB,YAAW;AAC7B,qBAAKV,MAAL,CAAYiG,aAAZ,GAA4B,IAA5B;AACH,aAFD;;AAIA,iBAAK/S,SAAL,CAAeqN,SAAf,GAA2B,UAAS5I,MAAT,EAAiB;AACxC,oBAAIL,OAAO9E,GAAGyI,MAAH,CAAUuB,UAAV,CAAqB7E,MAArB,CAAX;AAAA,oBACI7C,SAAS,IAAItC,GAAGqC,SAAP,CAAiByC,IAAjB,CADb;;AAGA,qBAAK4U,MAAL,GAAc,EAAd;;AAEA,qBAAKA,MAAL,CAAYT,OAAZ,GAAsB3W,OAAOe,IAAP,CAAY,CAAZ,CAAtB;AACA,oBAAI,KAAKqW,MAAL,CAAYT,OAAZ,KAAwBkE,UAA5B,EACI,KAAKzD,MAAL,CAAYT,OAAZ,GAAsB,KAAK3W,OAAOe,IAAP,CAAY,CAAZ,CAA3B;;AAEJ,qBAAKqW,MAAL,CAAYkE,WAAZ,GAA0Btb,OAAOe,IAAP,CAAY,CAAZ,CAA1B;AACA,oBAAI,KAAKqW,MAAL,CAAYkE,WAAZ,KAA4B,IAAhC,EAAsC;AAClC,yBAAKlE,MAAL,CAAY9J,UAAZ,GAAyBtN,OAAOe,IAAP,CAAY,EAAZ,CAAzB;AACA,yBAAK,IAAI/B,IAAI,CAAb,EAAgBA,IAAIkY,aAAahY,MAAjC,EAAyCF,GAAzC,EAA8C;AAC1C,4BAAIkY,aAAalY,CAAb,MAAoB,KAAKoY,MAAL,CAAY9J,UAApC,EAAgD;AAC5C,iCAAK8J,MAAL,CAAYkE,WAAZ,GAA0Btc,CAA1B;AACA;AACH;AACJ;AACJ,iBARD,MAQO;AACH,yBAAKoY,MAAL,CAAY9J,UAAZ,GAAyB4J,aAAa,KAAKE,MAAL,CAAYkE,WAAzB,CAAzB;AACH;;AAED,qBAAKlE,MAAL,CAAYP,UAAZ,GAAyB7W,OAAOe,IAAP,CAAY,CAAZ,CAAzB;AACA,qBAAKmK,MAAL,CAAYoK,gBAAZ,GAA+B,KAAK8B,MAAL,CAAYP,UAA3C,CAxBwC,CAwBe;;AAEvD,wBAAQ,KAAKO,MAAL,CAAYT,OAApB;AACI,yBAAK+D,YAAL;AACA,yBAAKC,UAAL;AACA,yBAAKC,WAAL;AACI,4BAAI5a,OAAOe,IAAP,CAAY,CAAZ,CAAJ,EAAoB;AAChB,kCAAM,IAAIe,KAAJ,CAAU,+BAAV,CAAN;;AAEJ,6BAAKsV,MAAL,CAAYN,WAAZ,GAA0B,IAA1B;;AAEA,4BAAI9W,OAAOe,IAAP,CAAY,CAAZ,CAAJ,EAAoB;AAChBf,mCAAOO,OAAP,CAAe,EAAf,EAPR,CAO4B;;AAExB,4BAAIP,OAAOe,IAAP,CAAY,CAAZ,CAAJ,EAAoB;AAAE;AAClB,gCAAI,KAAKqW,MAAL,CAAYT,OAAZ,GAAsB,EAA1B,EAA8B;AAAE;AAC5B,qCAAKS,MAAL,CAAYmE,qBAAZ,GAAoCvb,OAAOe,IAAP,CAAY,CAAZ,CAApC;AACA,qCAAKqW,MAAL,CAAYoE,qBAAZ,GAAoCxb,OAAOe,IAAP,CAAY,CAAZ,CAApC;AACA,qCAAKqW,MAAL,CAAYqE,sBAAZ,GAAqCzb,OAAOe,IAAP,CAAY,CAAZ,CAArC;AACH;;AAEDf,mCAAOO,OAAP,CAAe,CAAf;AACH;;AAED,4BAAI,KAAK6W,MAAL,CAAYP,UAAZ,KAA2BiE,mBAA/B,EAAoD;AAChD9a,mCAAOO,OAAP,CAAe,CAAf,EADgD,CAC9B;AAClB,kCAAM,IAAIuB,KAAJ,CAAU,mBAAV,CAAN;AACH;;AAED;;AAEJ;AACI,8BAAM,IAAIA,KAAJ,CAAU,iBAAiB,KAAKsV,MAAL,CAAYT,OAA7B,GAAuC,iBAAjD,CAAN;AA9BR;;AAiCA,qBAAK+E,WAAL,GAAmB,IAAIC,UAAJ,CAAe,KAAf,EAAsB,KAAKvE,MAAL,CAAYP,UAAlC,CAAnB;AACH,aA5DD;;AA8DA,gBAAI+E,cAAc,CAAlB;AAAA,gBACIC,cAAc,CADlB;AAAA,gBAEIC,cAAc,CAFlB;AAAA,gBAGIC,cAAc,CAHlB;AAAA,gBAIIC,cAAc,CAJlB;AAAA,gBAKIC,cAAc,CALlB;AAAA,gBAMIC,cAAc,CANlB;AAAA,gBAOIC,cAAc,CAPlB;;AASA;AACA,iBAAK/d,SAAL,CAAeyN,SAAf,GAA2B,YAAW;AAClC,oBAAI7L,SAAS,KAAKmL,SAAlB;;AAEA;AACA,oBAAInL,OAAO+B,IAAP,CAAY,EAAZ,MAAoB,KAAxB,EACIyU,YAAYC,UAAZ,CAAuBzW,MAAvB;;AAEJ,qBAAKoc,IAAL,GAAY,EAAZ;AACA,oBAAIC,WAAW,EAAf;AAAA,oBACIjF,SAAS,KAAKA,MADlB;AAAA,oBAEIN,cAAcM,OAAON,WAFzB;AAAA,oBAGIwF,cAAc,IAHlB;;AAKA,uBAAO,CAACA,cAActc,OAAOe,IAAP,CAAY,CAAZ,CAAf,MAAmCob,WAA1C,EAAuD;AACnD,wBAAIjQ,KAAKlM,OAAOe,IAAP,CAAY,CAAZ,CAAT;;AAEA,4BAAQub,WAAR;AACI;AACA,6BAAKV,WAAL;AACA,6BAAKG,WAAL;AACI,gCAAI1E,MAAM,IAAIC,QAAJ,CAAa,KAAKF,MAAlB,CAAV;AACAC,gCAAInL,EAAJ,GAASA,EAAT;AACAmQ,qCAAS7W,IAAT,CAAc6R,GAAd;AACAA,gCAAI1L,MAAJ,CAAW3L,MAAX,EAAmBoX,MAAnB,EAA2B,KAA3B;AACA;;AAEJ;AACA,6BAAKyE,WAAL;AACI,gCAAIU,MAAM,IAAI3C,UAAJ,CAAe,KAAKxC,MAApB,CAAV;AACAmF,gCAAIrQ,EAAJ,GAASA,EAAT;AACAmQ,qCAAS7W,IAAT,CAAc+W,GAAd;AACAA,gCAAI5Q,MAAJ,CAAW3L,MAAX,EAAmBoX,MAAnB;AACA;;AAEJ;AACA,6BAAK0E,WAAL;AACI,gCAAIU,MAAM,IAAIrF,UAAJ,CAAe,KAAKC,MAApB,CAAV;AACA,iCAAKgF,IAAL,CAAU5W,IAAV,CAAegX,GAAf;AACAA,gCAAI7Q,MAAJ,CAAW3L,MAAX,EAAmBoX,MAAnB;AACA;;AAEJ;AACA,6BAAK4E,WAAL;AACI,gCAAIlb,QAAQd,OAAOe,IAAP,CAAY,CAAZ,CAAZ;AAAA,gCACI0b,QAAQzc,OAAOe,IAAP,CAAY,CAAZ,CADZ;;AAGA,gCAAI0b,UAAU,GAAd,EACIA,SAASzc,OAAOe,IAAP,CAAY,CAAZ,CAAT;;AAEJ,gCAAID,KAAJ,EACId,OAAOc,KAAP;;AAEJ;AACAd,mCAAOO,OAAP,CAAekc,QAAQ,CAAvB;AACA;;AAEJ;AACA,6BAAKR,WAAL;AACI,kCAAM,IAAIna,KAAJ,CAAU,mBAAV,CAAN;AACA;;AAEJ;AACA,6BAAKoa,WAAL;AACI,gCAAIhQ,OAAO,EAAX,EACIA,MAAMlM,OAAOe,IAAP,CAAY,CAAZ,IAAiB,CAAvB;;AAEJ;AACAf,mCAAOO,OAAP,CAAe2L,KAAK,CAApB;AACA;;AAEJ;AACI,kCAAM,IAAIpK,KAAJ,CAAU,iBAAV,CAAN;AAvDR;AAyDH;;AAED9B,uBAAOc,KAAP;AACA,qBAAKoT,OAAL,CAAamI,QAAb;;AAEA;AACA,oBAAI7Z,OAAO,KAAKA,IAAhB;AAAA,oBACI+K,WAAW/K,KAAKtD,MADpB;AAAA,oBAEIwd,SAAS,IAAIpV,YAAJ,CAAiBwP,cAAcvJ,QAA/B,CAFb;AAAA,oBAGIoP,IAAI,CAHR;;AAKA,qBAAK,IAAIjD,IAAI,CAAb,EAAgBA,IAAI5C,WAApB,EAAiC4C,GAAjC,EAAsC;AAClC,yBAAK,IAAI1a,IAAI,CAAb,EAAgBA,IAAIuO,QAApB,EAA8BvO,GAA9B,EAAmC;AAC/B0d,+BAAOC,GAAP,IAAcna,KAAKxD,CAAL,EAAQ0a,CAAR,IAAa,KAA3B;AACH;AACJ;;AAED,uBAAOgD,MAAP;AACH,aA3FD;;AA6FA,iBAAKte,SAAL,CAAe8V,OAAf,GAAyB,UAASmI,QAAT,EAAmB;AACxC,oBAAI9O,WAAW,KAAK6J,MAAL,CAAYP,UAA3B;;AAEA;AACA;AACA,oBAAI+F,OAAO,CAAX;;AAEA,oBAAIrD,MAAMqD,OAAO,KAAKxF,MAAL,CAAYN,WAA7B;AACA,oBAAItU,OAAO,KAAKA,IAAL,GAAY,EAAvB;;AAEA;AACA,qBAAK,IAAIxD,IAAI,CAAb,EAAgBA,IAAIuO,QAApB,EAA8BvO,GAA9B,EAAmC;AAC/BwD,yBAAKxD,CAAL,IAAU,IAAIsI,YAAJ,CAAiBiS,GAAjB,CAAV;AACH;;AAED,oBAAI/G,UAAU,CAAd;AACA,qBAAK,IAAIxT,IAAI,CAAb,EAAgBA,IAAIqd,SAASnd,MAAb,IAAuBsT,UAAUjF,QAAjD,EAA2DvO,GAA3D,EAAgE;AAC5D,wBAAI0N,IAAI2P,SAASrd,CAAT,CAAR;;AAEA,wBAAI0N,aAAa4K,QAAjB,EAA2B;AAAE;AACzB9E,mCAAW,KAAKqK,aAAL,CAAmBnQ,CAAnB,EAAsB8F,OAAtB,CAAX;AACH,qBAFD,MAEO,IAAI9F,aAAakN,UAAjB,EAA6B;AAChC,6BAAKkD,WAAL,CAAiBpQ,CAAjB,EAAoB8F,OAApB;AACAA,mCAAW,CAAX;AACH,qBAHM,MAGA,IAAI9F,aAAayK,UAAjB,EAA6B;AAChC3E;AACH,qBAFM,MAEA;AACH,8BAAM,IAAI1Q,KAAJ,CAAU,wBAAV,CAAN;AACH;AACJ;AACJ,aA9BD;;AAgCA,iBAAK1D,SAAL,CAAeye,aAAf,GAA+B,UAASE,OAAT,EAAkBvK,OAAlB,EAA2B;AACtD,oBAAImE,UAAU,KAAKS,MAAL,CAAYT,OAA1B;AAAA,oBACIyB,OAAO2E,QAAQ3E,IADnB;AAAA,oBAEI5V,OAAOua,QAAQva,IAFnB;;AAIA,oBAAImU,YAAY+D,YAAhB,EACI,MAAM,IAAI5Y,KAAJ,CAAU,+BAAV,CAAN;;AAEJ,oBAAI6U,YAAYiE,WAAhB,EACI,MAAM,IAAI9Y,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,qBAAKkb,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWQ,UAA9C,EAA0DnV,IAA1D,EAAgE,IAAhE;;AAEA,oBAAIua,QAAQE,UAAZ,EACIF,QAAQG,GAAR,CAAYhJ,OAAZ,CAAoB6I,OAApB,EAA6Bva,IAA7B,EAAmC,KAAnC;;AAEJ,qBAAKwa,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWS,SAA9C,EAAyDpV,IAAzD,EAA+D,IAA/D;;AAEA;AACA,qBAAKkZ,WAAL,CAAiBxH,OAAjB,CAAyBkE,IAAzB,EAA+B5V,IAA/B,EAAqC,KAAKA,IAAL,CAAUgQ,OAAV,CAArC,EAAyDA,OAAzD;;AAEA,oBAAImE,YAAYiE,WAAhB,EACI,MAAM,IAAI9Y,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,qBAAKkb,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWU,WAA9C,EAA2D,KAAKrV,IAAL,CAAUgQ,OAAV,CAA3D,EAA+E,IAA/E;;AAEA,oBAAIuK,QAAQI,WAAZ,EACI,MAAM,IAAIrb,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,oBAAI,KAAKsb,UAAT,EACI,MAAM,IAAItb,KAAJ,CAAU,qBAAV,CAAN;;AAEJ,uBAAO,CAAP;AACH,aAjCD;;AAmCA,iBAAK1D,SAAL,CAAe0e,WAAf,GAA6B,UAASC,OAAT,EAAkBvK,OAAlB,EAA2B;AACpD,oBAAImE,UAAU,KAAKS,MAAL,CAAYT,OAA1B;AAAA,oBACImD,OAAOiD,QAAQjD,IADnB;AAAA,oBAEIC,QAAQgD,QAAQhD,KAFpB;AAAA,oBAGIsD,SAASvD,KAAK1B,IAHlB;AAAA,oBAIIkF,SAASvD,MAAM3B,IAJnB;AAAA,oBAKImF,SAASzD,KAAKtX,IALlB;AAAA,oBAMIgb,SAASzD,MAAMvX,IANnB;;AAQA;AACA,oBAAIua,QAAQ1C,YAAR,IAAwB0C,QAAQxC,WAApC,EACI,KAAKkD,SAAL,CAAeV,OAAf,EAAwBQ,MAAxB,EAAgCC,MAAhC;;AAEJ,oBAAI7G,YAAY+D,YAAhB,EACI,MAAM,IAAI5Y,KAAJ,CAAU,+BAAV,CAAN;;AAEJ;AACA,qBAAK4b,SAAL,CAAeX,OAAf,EAAwBQ,MAAxB,EAAgCC,MAAhC;;AAEA,oBAAI7G,YAAYiE,WAAhB,EACI,MAAM,IAAI9Y,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,qBAAKkb,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWQ,UAA9C,EAA0D4F,MAA1D,EAAkEC,MAAlE;;AAEA,oBAAI1D,KAAKmD,UAAT,EACInD,KAAKoD,GAAL,CAAShJ,OAAT,CAAiB4F,IAAjB,EAAuByD,MAAvB,EAA+B,KAA/B;;AAEJ,oBAAIxD,MAAMkD,UAAV,EACIlD,MAAMmD,GAAN,CAAUhJ,OAAV,CAAkB6F,KAAlB,EAAyByD,MAAzB,EAAiC,KAAjC;;AAEJ,qBAAKR,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWS,SAA9C,EAAyD2F,MAAzD,EAAiEC,MAAjE;;AAEA;AACA,qBAAK9B,WAAL,CAAiBxH,OAAjB,CAAyBmJ,MAAzB,EAAiCE,MAAjC,EAAyC,KAAK/a,IAAL,CAAUgQ,OAAV,CAAzC,EAA6DA,OAA7D;AACA,qBAAKkJ,WAAL,CAAiBxH,OAAjB,CAAyBoJ,MAAzB,EAAiCE,MAAjC,EAAyC,KAAKhb,IAAL,CAAUgQ,UAAU,CAApB,CAAzC,EAAiEA,UAAU,CAA3E;;AAEA,oBAAImE,YAAYiE,WAAhB,EACI,MAAM,IAAI9Y,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,qBAAKkb,oBAAL,CAA0BD,OAA1B,EAAmC5F,WAAWU,WAA9C,EAA2D,KAAKrV,IAAL,CAAUgQ,OAAV,CAA3D,EAA+E,KAAKhQ,IAAL,CAAUgQ,UAAU,CAApB,CAA/E;;AAEA,oBAAIsH,KAAKqD,WAAT,EACI,MAAM,IAAIrb,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,oBAAIiY,MAAMoD,WAAV,EACI,MAAM,IAAIrb,KAAJ,CAAU,8BAAV,CAAN;;AAEJ,oBAAI,KAAKsb,UAAT,EACI,MAAM,IAAItb,KAAJ,CAAU,qBAAV,CAAN;AACP,aAjDD;;AAmDA;AACA,iBAAK1D,SAAL,CAAesf,SAAf,GAA2B,UAASX,OAAT,EAAkBjD,IAAlB,EAAwBC,KAAxB,EAA+B;AACtD,oBAAI1C,MAAM0F,QAAQhD,KAAlB;AAAA,oBACI3B,OAAOf,IAAIe,IADf;AAAA,oBAEIuF,UAAUvF,KAAKiB,UAFnB;AAAA,oBAGIuE,eAAexF,KAAKD,UAHxB;AAAA,oBAIIE,SAASD,KAAKC,MAJlB;AAAA,oBAKIC,YAAYjB,IAAIiB,SALpB;AAAA,oBAMIuF,UAAUxG,IAAIwG,OANlB;AAAA,oBAOIC,eAAezG,IAAIyG,YAPvB;;AASA,oBAAIvF,MAAM,CAAV;AAAA,oBAAawF,WAAW,CAAxB;AACA,qBAAK,IAAIlF,IAAI,CAAb,EAAgBA,IAAI+E,YAApB,EAAkC/E,GAAlC,EAAuC;AACnC,yBAAK,IAAI7Z,IAAI,CAAb,EAAgBA,IAAIqZ,MAApB,GAA6B;AACzB,4BAAI9N,MAAMsT,QAAQtF,GAAR,CAAV;;AAEA,4BAAID,UAAUC,GAAV,MAAmBjB,SAAS0G,YAA5B,IAA4C1F,UAAUC,GAAV,MAAmBjB,SAAS2G,aAA5E,EAA2F;AACvF,mCAAOjf,IAAIuL,GAAX,EAAgBvL,KAAKuZ,KAArB,EAA4B;AACxB,oCAAIjO,IAAIgO,UAAUC,GAAV,MAAmBjB,SAAS0G,YAA5B,GAA2C,CAA3C,GAA+C,CAAC,CAAxD;AACA,oCAAIjB,QAAQxC,WAAZ,EACIjQ,KAAKyS,QAAQlD,OAAR,CAAgBtB,GAAhB,IAAuB,CAAC,CAAxB,GAA4B,CAAjC;;AAEJ,oCAAIL,QAAQ5N,IAAIwT,aAAavF,GAAb,CAAhB;AACA,qCAAK,IAAI2F,IAAI,CAAb,EAAgBA,IAAI9F,KAAKoB,WAAL,CAAiBX,CAAjB,CAApB,EAAyCqF,GAAzC,EAA8C;AAC1C,wCAAIzY,MAAMsY,WAAWG,IAAI,GAAf,GAAqBP,QAAQ3e,CAAR,CAA/B;AAAA,wCACIua,MAAMoE,QAAQ3e,IAAI,CAAZ,IAAiB2e,QAAQ3e,CAAR,CAD3B;;AAGA,yCAAK,IAAI2d,IAAI,CAAb,EAAgBA,IAAIpD,GAApB,EAAyBoD,GAAzB,EAA8B;AAC1B5C,8CAAMtU,MAAMkX,CAAZ,IAAiB7C,KAAKrU,MAAMkX,CAAX,IAAgBzE,KAAjC;AACH;AACJ;AACJ;AACJ,yBAhBD,MAgBQ;AACJK,mCAAOhO,MAAMvL,CAAb;AACAA,gCAAIuL,GAAJ;AACH;AACJ;;AAEDwT,gCAAY3F,KAAKoB,WAAL,CAAiBX,CAAjB,IAAsB,GAAlC;AACH;AACJ,aAvCD;;AAyCA;AACA,iBAAKza,SAAL,CAAeqf,SAAf,GAA2B,UAASV,OAAT,EAAkBjD,IAAlB,EAAwBC,KAAxB,EAA+B;AACtD,oBAAI1C,MAAM0F,QAAQjD,IAAlB;AAAA,oBACI1B,OAAOf,IAAIe,IADf;AAAA,oBAEIuF,UAAUvF,KAAKiB,UAFnB;AAAA,oBAGIuE,eAAexF,KAAKD,UAHxB;AAAA,oBAIIE,SAASD,KAAKC,MAJlB;AAAA,oBAKI8F,SAAS9G,IAAIiB,SALjB;AAAA,oBAMI8F,SAASrB,QAAQhD,KAAR,CAAczB,SAN3B;;AAQA,oBAAIyF,WAAW,CAAf;AAAA,oBAAkBxF,MAAM,CAAxB;AACA,qBAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI+E,YAApB,EAAkC/E,GAAlC,EAAuC;AACnC,yBAAK,IAAI7Z,IAAI,CAAb,EAAgBA,IAAIqZ,MAApB,EAA4BrZ,KAAKuZ,KAAjC,EAAwC;AACpC,4BAAIwE,QAAQlD,OAAR,CAAgBtB,GAAhB,KAAwB4F,OAAO5F,GAAP,IAAcjB,SAAS+G,QAA/C,IAA2DD,OAAO7F,GAAP,IAAcjB,SAAS+G,QAAtF,EAAgG;AAC5F,iCAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAI9F,KAAKoB,WAAL,CAAiBX,CAAjB,CAApB,EAAyCqF,GAAzC,EAA8C;AAC1C,oCAAIzY,MAAMsY,WAAWG,IAAI,GAAf,GAAqBP,QAAQ3e,CAAR,CAA/B;AACA,qCAAK,IAAI2d,IAAI,CAAb,EAAgBA,IAAIgB,QAAQ3e,IAAI,CAAZ,IAAiB2e,QAAQ3e,CAAR,CAArC,EAAiD2d,GAAjD,EAAsD;AAClD,wCAAI3D,IAAIc,KAAKrU,MAAMkX,CAAX,IAAgB5C,MAAMtU,MAAMkX,CAAZ,CAAxB;AACA7C,yCAAKrU,MAAMkX,CAAX,KAAiB5C,MAAMtU,MAAMkX,CAAZ,CAAjB;AACA5C,0CAAMtU,MAAMkX,CAAZ,IAAiB3D,CAAjB;AACH;AACJ;AACJ;AACJ;AACD+E,gCAAY3F,KAAKoB,WAAL,CAAiBX,CAAjB,IAAsB,GAAlC;AACH;AACJ,aAzBD;;AA2BA,iBAAKza,SAAL,CAAe4e,oBAAf,GAAsC,UAASD,OAAT,EAAkBhF,aAAlB,EAAiCuG,KAAjC,EAAwCC,KAAxC,EAA+C;AACjF,oBAAInC,OAAO,KAAKA,IAAhB;AAAA,oBACIoC,gBAAgBzB,mBAAmBnD,UADvC;AAAA,oBAEI6E,gBAAgB1G,kBAAkBZ,WAAWU,WAA7B,GAA2C,0BAA3C,GAAwE,wBAF5F;;AAIA,qBAAK,IAAI7Y,IAAI,CAAb,EAAgBA,IAAIod,KAAKld,MAAzB,EAAiCF,GAAjC,EAAsC;AAClC,wBAAIwd,MAAMJ,KAAKpd,CAAL,CAAV;AAAA,wBACI0G,QAAQ,CADZ;;AAGA,wBAAI8W,IAAIzE,aAAJ,KAAsBA,aAA1B,EAAyC;AACrC,6BAAK,IAAIzN,IAAI,CAAb,EAAgBA,IAAIkS,IAAIxE,YAAxB,EAAsC1N,GAAtC,EAA2C;AACvC,gCAAImN,WAAW+E,IAAI/E,QAAJ,CAAanN,CAAb,CAAf;AACA,gCAAIkS,IAAIjF,WAAJ,CAAgBjN,CAAhB,MAAuBkU,aAAvB,IAAwChC,IAAIhF,QAAJ,CAAalN,CAAb,MAAoByS,QAAQ7Q,EAAxE,EAA4E;AACxE,oCAAIuL,aAAa,CAAjB,EAAoB;AAChB+E,wCAAIiC,aAAJ,EAAmB/Y,KAAnB,EAA0B4Y,KAA1B;AACA,wCAAI7G,QAAJ,EAAc/R;AACjB;;AAED,oCAAI+R,aAAa,CAAjB,EACI+E,IAAIiC,aAAJ,EAAmB/Y,OAAnB,EAA4B6Y,KAA5B;AAEP,6BATD,MASO;AACH7Y,yCAAS,KAAK+R,aAAa,CAAb,GAAiB,CAAjB,GAAqB,CAA1B,CAAT;AACH;AACJ;AACJ;AACJ;AACJ,aA3BD;AA6BH,SAtZgB,CAAjB;;AAwZA,YAAIiH,MAAO,YAAU;AACjB,qBAASA,GAAT,CAAaxf,MAAb,EAAqB;AACjB,qBAAKA,MAAL,GAAcA,MAAd;;AAEA,wBAAQA,MAAR;AACI,yBAAK,EAAL;AACI,6BAAKyf,KAAL,GAAaC,sBAAsB,EAAtB,CAAb;AACA;;AAEJ,yBAAK,GAAL;AACI,6BAAKD,KAAL,GAAaE,qBAAqB,GAArB,CAAb;AACA;;AAEJ,yBAAK,EAAL;AACI,6BAAKF,KAAL,GAAaC,sBAAsB,EAAtB,CAAb;AACA;;AAEJ,yBAAK,GAAL;AACI,6BAAKD,KAAL,GAAaE,qBAAqB,GAArB,CAAb;AACA;;AAEJ;AACI,8BAAM,IAAI/c,KAAJ,CAAU,4BAA4B5C,MAAtC,CAAN;AAlBR;;AAqBA;AACA,qBAAK4f,GAAL,GAAW,IAAIpc,KAAJ,CAAUxD,MAAV,CAAX;AACA,qBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B,yBAAK8f,GAAL,CAAS9f,CAAT,IAAc,IAAIsI,YAAJ,CAAiB,CAAjB,CAAd;AACH;;AAED,qBAAKrG,CAAL,GAAS,IAAIqG,YAAJ,CAAiB,CAAjB,CAAT;AACA,qBAAKyX,CAAL,GAAS,IAAIzX,YAAJ,CAAiB,CAAjB,CAAT;AACA,qBAAKgD,CAAL,GAAS,IAAIhD,YAAJ,CAAiB,CAAjB,CAAT;AACA,qBAAK0X,CAAL,GAAS,IAAI1X,YAAJ,CAAiB,CAAjB,CAAT;AACA,qBAAK2X,EAAL,GAAU,IAAI3X,YAAJ,CAAiB,CAAjB,CAAV;AACA,qBAAK4X,EAAL,GAAU,IAAI5X,YAAJ,CAAiB,CAAjB,CAAV;AACH;;AAED,qBAASsX,qBAAT,CAA+BrF,GAA/B,EAAoC;AAChC,oBAAIP,IAAI,IAAItY,KAAKye,EAAT,GAAc5F,GAAtB;AAAA,oBACI6F,OAAO1e,KAAK2e,GAAL,CAASrG,CAAT,CADX;AAAA,oBAEIsG,OAAO5e,KAAK6e,GAAL,CAASvG,CAAT,CAFX;AAAA,oBAGIwG,IAAI,IAAI9c,KAAJ,CAAU6W,GAAV,CAHR;;AAKA,qBAAK,IAAIva,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1BwgB,sBAAExgB,CAAF,IAAO,IAAIsI,YAAJ,CAAiB,CAAjB,CAAP;AACH;;AAEDkY,kBAAE,CAAF,EAAK,CAAL,IAAU,CAAV;AACAA,kBAAE,CAAF,EAAK,CAAL,IAAU,CAAV;AACA,oBAAIC,WAAW,CAAf;;AAEA,qBAAK,IAAIzgB,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1BwgB,sBAAExgB,CAAF,EAAK,CAAL,IAAUwgB,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcogB,IAAd,GAAqBK,WAAWH,IAA1C;AACAG,+BAAWA,WAAWL,IAAX,GAAkBI,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcsgB,IAA3C;AACAE,sBAAExgB,CAAF,EAAK,CAAL,IAAU,CAACygB,QAAX;AACH;;AAED,uBAAOD,CAAP;AACH;;AAED,qBAASX,oBAAT,CAA8BtF,GAA9B,EAAmC;AAC/B,oBAAIP,IAAI,IAAItY,KAAKye,EAAT,GAAc5F,GAAtB;AAAA,oBACI6F,OAAO1e,KAAK2e,GAAL,CAASrG,CAAT,CADX;AAAA,oBAEIsG,OAAO5e,KAAK6e,GAAL,CAASvG,CAAT,CAFX;AAAA,oBAGIwG,IAAI,IAAI9c,KAAJ,CAAU6W,GAAV,CAHR;;AAKA,qBAAK,IAAIva,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1BwgB,sBAAExgB,CAAF,IAAO,IAAIsI,YAAJ,CAAiB,CAAjB,CAAP;AACH;;AAEDkY,kBAAE,CAAF,EAAK,CAAL,IAAU,CAAV;AACAA,kBAAE,CAAF,EAAK,CAAL,IAAU,CAAV;AACAA,kBAAE,CAAF,EAAK,CAAL,IAAU,CAAV;;AAEA,qBAAK,IAAIxgB,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1BwgB,sBAAExgB,CAAF,EAAK,CAAL,IAAUwgB,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcogB,IAAd,GAAqBI,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcsgB,IAA7C;AACAE,sBAAExgB,CAAF,EAAK,CAAL,IAAUwgB,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcogB,IAAd,GAAqBI,EAAExgB,IAAI,CAAN,EAAS,CAAT,IAAcsgB,IAA7C;AACAE,sBAAExgB,CAAF,EAAK,CAAL,IAAU,CAACwgB,EAAExgB,CAAF,EAAK,CAAL,CAAX;AACH;;AAED,uBAAOwgB,CAAP;AACH;;AAEDd,gBAAItgB,SAAJ,CAAc8V,OAAd,GAAwB,UAAS5R,KAAT,EAAgBod,OAAhB,EAAyB;AAC7C,oBAAIxgB,SAAS,KAAKA,MAAlB;AAAA,oBACIygB,WAAYD,UAAU,CAAV,GAAc,CAD9B;AAAA,oBAEIxH,QAASwH,UAAUxgB,MAAV,GAAmB,CAFhC;AAAA,oBAGI4f,MAAM,KAAKA,GAHf;AAAA,oBAIIH,QAAQ,KAAKA,KAJjB;;AAMA;AACA,oBAAIiB,KAAK,CAAT;AACA,qBAAK,IAAI5gB,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B8f,wBAAI9f,CAAJ,EAAO,CAAP,IAAYsD,MAAMsd,EAAN,EAAU,CAAV,CAAZ;AACAd,wBAAI9f,CAAJ,EAAO,CAAP,IAAYsD,MAAMsd,EAAN,EAAU,CAAV,CAAZ;;AAEA,wBAAIlG,IAAIxa,WAAW,CAAnB;AACA,2BAAO0gB,MAAMlG,CAAN,IAAWA,IAAI,CAAtB,EAAyB;AACrBkG,8BAAMlG,CAAN;AACAA,8BAAM,CAAN;AACH;;AAEDkG,0BAAMlG,CAAN;AACH;;AAED,oBAAIzY,IAAI,KAAKA,CAAb;AAAA,oBACI8d,IAAI,KAAKA,CADb;AAAA,oBAEIzU,IAAI,KAAKA,CAFb;AAAA,oBAGI0U,IAAI,KAAKA,CAHb;AAAA,oBAIIC,KAAK,KAAKA,EAJd;AAAA,oBAKIC,KAAK,KAAKA,EALd;AAAA,oBAMIW,SANJ;;AAQA,qBAAK,IAAI7gB,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7BsD,0BAAMtD,CAAN,EAAS,CAAT,IAAc8f,IAAI9f,CAAJ,EAAO,CAAP,CAAd;AACAsD,0BAAMtD,CAAN,EAAS,CAAT,IAAc8f,IAAI9f,CAAJ,EAAO,CAAP,CAAd;AACH;;AAED;AACA,qBAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,KAAK,CAAjC,EAAoC;AAChC6gB,gCAAYvd,MAAMtD,CAAN,CAAZ;AACAiC,sBAAE,CAAF,IAAO4e,UAAU,CAAV,IAAevd,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAtB;AACAiC,sBAAE,CAAF,IAAO4e,UAAU,CAAV,IAAevd,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAtB;AACA+f,sBAAE,CAAF,IAAOzc,MAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBsD,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAzB;AACA+f,sBAAE,CAAF,IAAOzc,MAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBsD,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAzB;AACAsL,sBAAE,CAAF,IAAOuV,UAAU,CAAV,IAAevd,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAtB;AACAsL,sBAAE,CAAF,IAAOuV,UAAU,CAAV,IAAevd,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAtB;AACAggB,sBAAE,CAAF,IAAO1c,MAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBsD,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAzB;AACAggB,sBAAE,CAAF,IAAO1c,MAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBsD,MAAMtD,IAAI,CAAV,EAAa,CAAb,CAAzB;AACA6gB,8BAAU,CAAV,IAAe5e,EAAE,CAAF,IAAO8d,EAAE,CAAF,CAAtB;AACAc,8BAAU,CAAV,IAAe5e,EAAE,CAAF,IAAO8d,EAAE,CAAF,CAAtB;AACAzc,0BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBiC,EAAE,CAAF,IAAO8d,EAAE,CAAF,CAAzB;AACAzc,0BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBiC,EAAE,CAAF,IAAO8d,EAAE,CAAF,CAAzB;;AAEAE,uBAAG,CAAH,IAAQ3U,EAAE,CAAF,IAAO0U,EAAE,CAAF,CAAf;AACAC,uBAAG,CAAH,IAAQ3U,EAAE,CAAF,IAAO0U,EAAE,CAAF,CAAf;AACAE,uBAAG,CAAH,IAAQ5U,EAAE,CAAF,IAAO0U,EAAE,CAAF,CAAf;AACAE,uBAAG,CAAH,IAAQ5U,EAAE,CAAF,IAAO0U,EAAE,CAAF,CAAf;;AAEA,wBAAIU,OAAJ,EAAa;AACTpd,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBkgB,GAAG,CAAH,CAAlB;AACA5c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBkgB,GAAG,CAAH,CAAlB;AACA5c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBigB,GAAG,CAAH,CAAlB;AACA3c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBigB,GAAG,CAAH,CAAlB;AACH,qBALD,MAKO;AACH3c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBigB,GAAG,CAAH,CAAlB;AACA3c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBigB,GAAG,CAAH,CAAlB;AACA3c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBkgB,GAAG,CAAH,CAAlB;AACA5c,8BAAMtD,IAAI,CAAV,EAAa,CAAb,IAAkBkgB,GAAG,CAAH,CAAlB;AACH;AACJ;;AAED;AACA,qBAAK,IAAIlgB,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,MAAM,CAAlC,EAAqC;AACjC,wBAAI+W,QAAQ/W,KAAK,CAAjB;AAAA,wBACI8gB,IAAI5gB,SAAS6W,KADjB;;AAGA,yBAAI,IAAI4G,IAAI,CAAZ,EAAeA,IAAIzd,MAAnB,EAA2Byd,KAAK5G,KAAhC,EAAuC;AACnC,6BAAI,IAAI2D,IAAI,CAAZ,EAAeA,IAAI1a,CAAnB,EAAsB0a,GAAtB,EAA2B;AACvB,gCAAIqG,KAAKrG,IAAIoG,CAAb;AAAA,gCAAgBE,OAAO1d,MAAMtD,IAAI2d,CAAJ,GAAQjD,CAAd,CAAvB;AAAA,gCAAyCuG,QAAQ3d,MAAMqa,IAAIjD,CAAV,CAAjD;AAAA,gCACIwG,SAASvB,MAAMoB,EAAN,EAAU,CAAV,CADb;AAAA,gCAEII,SAASxB,MAAMoB,EAAN,EAAUJ,QAAV,CAFb;AAAA,gCAGIS,MAAMJ,KAAK,CAAL,IAAUE,MAAV,GAAmBF,KAAK,CAAL,IAAUG,MAHvC;AAAA,gCAIIE,MAAML,KAAK,CAAL,IAAUG,MAAV,GAAmBH,KAAK,CAAL,IAAUE,MAJvC;;AAMAF,iCAAK,CAAL,IAAU,CAACC,MAAM,CAAN,IAAWG,GAAZ,IAAmBlI,KAA7B;AACA8H,iCAAK,CAAL,IAAU,CAACC,MAAM,CAAN,IAAWI,GAAZ,IAAmBnI,KAA7B;AACA+H,kCAAM,CAAN,IAAW,CAACA,MAAM,CAAN,IAAWG,GAAZ,IAAmBlI,KAA9B;AACA+H,kCAAM,CAAN,IAAW,CAACA,MAAM,CAAN,IAAWI,GAAZ,IAAmBnI,KAA9B;AACH;AACJ;AACJ;AACJ,aAzFD;;AA2FA,mBAAOwG,GAAP;AACH,SAjLS,EAAV;;AAmLA,YAAI/C,aAAa,YAAW;AACxB,qBAASA,UAAT,CAAoB2E,WAApB,EAAiC/S,QAAjC,EAA2C;AACvC,oBAAI+S,WAAJ,EAAiB;AACb,0BAAM,IAAIxe,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,qBAAK5C,MAAL,GAAc,IAAd;AACA,qBAAKqhB,WAAL,GAAmB,GAAnB;;AAEA,qBAAKvT,GAAL,GAAW,CAAC,KAAK9N,MAAL,GAAc,KAAKqhB,WAApB,IAAmC,CAA9C;AACA,qBAAKC,KAAL,GAAa,KAAKD,WAAL,GAAmB,CAAhC;;AAEA,qBAAKE,SAAL,GAAiB,IAAIC,IAAJ,CAAS,KAAKH,WAAL,GAAmB,CAA5B,CAAjB;AACA,qBAAKI,QAAL,GAAgB,IAAID,IAAJ,CAAS,KAAKxhB,MAAL,GAAc,CAAvB,CAAhB;;AAEA,qBAAK0hB,QAAL,GAAgB,IAAIle,KAAJ,CAAU6K,QAAV,CAAhB;AACA,qBAAK,IAAIvO,IAAI,CAAb,EAAgBA,IAAIuO,QAApB,EAA8BvO,GAA9B,EAAmC;AAC/B,yBAAK4hB,QAAL,CAAc5hB,CAAd,IAAmB,IAAIsI,YAAJ,CAAiB,KAAKpI,MAAtB,CAAnB;AACH;;AAED,qBAAKkH,GAAL,GAAW,IAAIkB,YAAJ,CAAiB,IAAI,KAAKpI,MAA1B,CAAX;AACH;;AAED,qBAAS2hB,kBAAT,CAA4BtH,GAA5B,EAAiC;AAC7B,oBAAIyF,IAAI,IAAI1X,YAAJ,CAAiBiS,GAAjB,CAAR;AACA,qBAAK,IAAIva,IAAI,CAAb,EAAgBA,IAAIua,GAApB,EAAyBva,GAAzB,EAA8B;AAC1BggB,sBAAEhgB,CAAF,IAAO0B,KAAK6e,GAAL,CAAS,CAACvgB,IAAI,GAAL,KAAa0B,KAAKye,EAAL,IAAW,MAAM5F,GAAjB,CAAb,CAAT,CAAP;AACH;AACD,uBAAOyF,CAAP;AACH;;AAED,qBAAS8B,iBAAT,CAA2BC,KAA3B,EAAkCxH,GAAlC,EAAuC;AACnC,oBAAIyH,MAAMtgB,KAAKye,EAAL,GAAU5F,GAApB;AAAA,oBACIrQ,MAAM,IAAI5B,YAAJ,CAAiBiS,GAAjB,CADV;AAAA,oBAEI0H,MAAM,CAFV;AAAA,oBAGIzB,IAAI,IAAIlY,YAAJ,CAAiBiS,GAAjB,CAHR;AAAA,oBAII2H,SAAUH,QAAQC,GAAT,IAAiBD,QAAQC,GAAzB,CAJb;;AAMA,qBAAK,IAAIrN,IAAI,CAAb,EAAgBA,IAAI4F,GAApB,EAAyB5F,GAAzB,EAA8B;AAC1B,wBAAI7T,MAAM6T,KAAK4F,MAAM5F,CAAX,IAAgBuN,MAA1B;AAAA,wBACIC,SAAS,CADb;;AAGA,yBAAK,IAAIxE,IAAI,EAAb,EAAiBA,IAAI,CAArB,EAAwBA,GAAxB,EAA6B;AACzBwE,iCAASA,SAASrhB,GAAT,IAAgB6c,IAAIA,CAApB,IAAyB,CAAlC;AACH;;AAEDsE,2BAAOE,MAAP;AACA3B,sBAAE7L,CAAF,IAAOsN,GAAP;AACH;;AAEDA;AACA,qBAAK,IAAItN,IAAI,CAAb,EAAgBA,IAAI4F,GAApB,EAAyB5F,GAAzB,EAA8B;AAC1BzK,wBAAIyK,CAAJ,IAASjT,KAAK0gB,IAAL,CAAU5B,EAAE7L,CAAF,IAAOsN,GAAjB,CAAT;AACH;;AAED,uBAAO/X,GAAP;AACH;;AAED,gBAAImY,YAAYR,mBAAmB,IAAnB,CAAhB;AAAA,gBACIS,WAAWT,mBAAmB,GAAnB,CADf;AAAA,gBAEIU,WAAWT,kBAAkB,CAAlB,EAAqB,IAArB,CAFf;AAAA,gBAGIU,UAAUV,kBAAkB,CAAlB,EAAqB,GAArB,CAHd;AAAA,gBAIIW,eAAe,CAACJ,SAAD,EAAYE,QAAZ,CAJnB;AAAA,gBAKIG,gBAAgB,CAACJ,QAAD,EAAWE,OAAX,CALpB;;AAOA7F,uBAAWvd,SAAX,CAAqB8V,OAArB,GAA+B,UAAUkE,IAAV,EAAgB9V,KAAhB,EAAuBoa,MAAvB,EAA+BlK,OAA/B,EAAwC;AACnE,oBAAImP,UAAU,KAAKf,QAAL,CAAcpO,OAAd,CAAd;AAAA,oBACIoP,cAAcxJ,KAAKwJ,WAAL,CAAiB,CAAjB,CADlB;AAAA,oBAEIC,kBAAkBzJ,KAAKwJ,WAAL,CAAiB,CAAjB,CAFtB;AAAA,oBAGIE,cAAcL,aAAaG,WAAb,CAHlB;AAAA,oBAIIG,eAAeL,cAAcE,WAAd,CAJnB;AAAA,oBAKII,kBAAkBP,aAAaI,eAAb,CALtB;AAAA,oBAMII,mBAAmBP,cAAcG,eAAd,CANvB;AAAA,oBAOI3iB,SAAS,KAAKA,MAPlB;AAAA,oBAQIgjB,WAAW,KAAK3B,WARpB;AAAA,oBASIvT,MAAM,KAAKA,GATf;AAAA,oBAUIwT,QAAQ,KAAKA,KAVjB;AAAA,oBAWIpa,MAAM,KAAKA,GAXf;AAAA,oBAYIua,WAAW,KAAKA,QAZpB;AAAA,oBAaIF,YAAY,KAAKA,SAbrB;;AAeA,wBAAQrI,KAAK+J,cAAb;AACI,yBAAK7K,SAAS8K,kBAAd;AACIzB,iCAASzM,OAAT,CAAiB5R,KAAjB,EAAwB,CAAxB,EAA2B8D,GAA3B,EAAgC,CAAhC;;AAEA;AACA,6BAAK,IAAIpH,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B0d,mCAAO1d,CAAP,IAAY2iB,QAAQ3iB,CAAR,IAAcoH,IAAIpH,CAAJ,IAASgjB,gBAAgBhjB,CAAhB,CAAnC;AACH;;AAED;AACA,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B2iB,oCAAQ3iB,CAAR,IAAaoH,IAAIlH,SAASF,CAAb,IAAkB8iB,YAAY5iB,SAAS,CAAT,GAAaF,CAAzB,CAA/B;AACH;;AAED;;AAEJ,yBAAKsY,SAAS+K,mBAAd;AACI1B,iCAASzM,OAAT,CAAiB5R,KAAjB,EAAwB,CAAxB,EAA2B8D,GAA3B,EAAgC,CAAhC;;AAEA;AACA,6BAAK,IAAIpH,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B0d,mCAAO1d,CAAP,IAAY2iB,QAAQ3iB,CAAR,IAAcoH,IAAIpH,CAAJ,IAASgjB,gBAAgBhjB,CAAhB,CAAnC;AACH;;AAED;AACA,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B2iB,oCAAQ3iB,CAAR,IAAaoH,IAAIlH,SAASF,CAAb,CAAb;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIkjB,QAApB,EAA8BljB,GAA9B,EAAmC;AAC/B2iB,oCAAQ3U,MAAMhO,CAAd,IAAmBoH,IAAIlH,SAAS8N,GAAT,GAAehO,CAAnB,IAAwB+iB,aAAaG,WAAWljB,CAAX,GAAe,CAA5B,CAA3C;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B2iB,oCAAQ3U,MAAMkV,QAAN,GAAiBljB,CAAzB,IAA8B,CAA9B;AACH;;AAED;;AAEJ,yBAAKsY,SAASgL,oBAAd;AACI,6BAAK,IAAItjB,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxByhB,sCAAUvM,OAAV,CAAkB5R,KAAlB,EAAyBtD,IAAIkjB,QAA7B,EAAuC9b,GAAvC,EAA4C,IAAIpH,CAAJ,GAAQkjB,QAApD;AACH;;AAED;AACA,6BAAK,IAAIljB,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B0d,mCAAO1d,CAAP,IAAY2iB,QAAQ3iB,CAAR,CAAZ;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIkjB,QAApB,EAA8BljB,GAA9B,EAAmC;AAC/B0d,mCAAO1P,MAAMhO,CAAb,IAAkB2iB,QAAQ3U,MAAMhO,CAAd,IAAmBoH,IAAIpH,CAAJ,IAASijB,iBAAiBjjB,CAAjB,CAA9C;AACA0d,mCAAO1P,MAAM,IAAIkV,QAAV,GAAqBljB,CAA5B,IAAiC2iB,QAAQ3U,MAAMkV,WAAW,CAAjB,GAAqBljB,CAA7B,IAAmCoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA3D,GAA8FoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAa/iB,CAAb,CAAvJ;AACA0d,mCAAO1P,MAAM,IAAIkV,QAAV,GAAqBljB,CAA5B,IAAiC2iB,QAAQ3U,MAAMkV,WAAW,CAAjB,GAAqBljB,CAA7B,IAAmCoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA3D,GAA8FoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAa/iB,CAAb,CAAvJ;AACA0d,mCAAO1P,MAAM,IAAIkV,QAAV,GAAqBljB,CAA5B,IAAiC2iB,QAAQ3U,MAAMkV,WAAW,CAAjB,GAAqBljB,CAA7B,IAAmCoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA3D,GAA8FoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAa/iB,CAAb,CAAvJ;;AAEA,gCAAIA,IAAIwhB,KAAR,EACI9D,OAAO1P,MAAM,IAAIkV,QAAV,GAAqBljB,CAA5B,IAAiC2iB,QAAQ3U,MAAMkV,WAAW,CAAjB,GAAqBljB,CAA7B,IAAmCoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA3D,GAA8FoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAa/iB,CAAb,CAAvJ;AACP;;AAED;AACA,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIkjB,QAApB,EAA8BljB,GAA9B,EAAmC;AAC/B,gCAAIA,KAAKwhB,KAAT,EACImB,QAAQ3U,MAAM,IAAIkV,QAAV,GAAqBljB,CAArB,GAAyBE,MAAjC,IAA4CkH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAAzB,GAA4DoH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAa/iB,CAAb,CAA/H;;AAEJ2iB,oCAAQ3U,MAAM,IAAIkV,QAAV,GAAqBljB,CAArB,GAAyBE,MAAjC,IAA4CkH,IAAI8b,WAAW,CAAX,GAAeljB,CAAnB,IAAwB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAAzB,GAA4DoH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAa/iB,CAAb,CAAhI;AACA2iB,oCAAQ3U,MAAM,IAAIkV,QAAV,GAAqBljB,CAArB,GAAyBE,MAAjC,IAA4CkH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA1B,GAA6DoH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAa/iB,CAAb,CAAjI;AACA2iB,oCAAQ3U,MAAM,IAAIkV,QAAV,GAAqBljB,CAArB,GAAyBE,MAAjC,IAA4CkH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAA1B,GAA6DoH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAa/iB,CAAb,CAAjI;AACA2iB,oCAAQ3U,MAAM,IAAIkV,QAAV,GAAqBljB,CAArB,GAAyBE,MAAjC,IAA4CkH,IAAI8b,WAAW,EAAX,GAAgBljB,CAApB,IAAyB+iB,aAAaG,WAAW,CAAX,GAAeljB,CAA5B,CAArE;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B2iB,oCAAQ3U,MAAMkV,QAAN,GAAiBljB,CAAzB,IAA8B,CAA9B;AACH;;AAED;;AAEJ,yBAAKsY,SAASiL,kBAAd;AACI5B,iCAASzM,OAAT,CAAiB5R,KAAjB,EAAwB,CAAxB,EAA2B8D,GAA3B,EAAgC,CAAhC;;AAEA;AACA;AACA,6BAAK,IAAIpH,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B0d,mCAAO1d,CAAP,IAAY2iB,QAAQ3iB,CAAR,CAAZ;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIkjB,QAApB,EAA8BljB,GAA9B,EAAmC;AAC/B0d,mCAAO1P,MAAMhO,CAAb,IAAkB2iB,QAAQ3U,MAAMhO,CAAd,IAAoBoH,IAAI4G,MAAMhO,CAAV,IAAeijB,iBAAiBjjB,CAAjB,CAArD;AACH;;AAED,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIgO,GAApB,EAAyBhO,GAAzB,EAA8B;AAC1B0d,mCAAO1P,MAAMkV,QAAN,GAAiBljB,CAAxB,IAA6B2iB,QAAQ3U,MAAMkV,QAAN,GAAiBljB,CAAzB,IAA8BoH,IAAI4G,MAAMkV,QAAN,GAAiBljB,CAArB,CAA3D;AACH;;AAED;AACA,6BAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIE,MAApB,EAA4BF,GAA5B,EAAiC;AAC7B2iB,oCAAQ3iB,CAAR,IAAaoH,IAAIlH,SAASF,CAAb,IAAkB8iB,YAAY5iB,SAAS,CAAT,GAAaF,CAAzB,CAA/B;AACH;;AAED;AAlGR;AAoGH,aApHD;;AAsHA,mBAAO2c,UAAP;AACH,SAxLe,EAAhB;;AA0LA,YAAIjD,UAAW,YAAU;AACrB,gBAAI8J,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADO,EAEP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAFO,EAGP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAHO,EAIP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,CAJO,EAKP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CALO,EAMP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CARO,EASP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CATO,EAUP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAbO,EAcP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAdO,EAeP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAfO,EAgBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CArCO,EAsCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAtCO,EAuCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAvCO,EAwCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAxCO,EAyCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CAzCO,EA0CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CA1CO,EA2CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CA3CO,EA4CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CA5CO,EA6CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CA7CO,EA8CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA9CO,EA+CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CA/CO,EAgDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAhDO,EAiDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAjDO,EAkDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAlDO,EAmDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,CAnDO,EAoDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,CApDO,EAqDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CArDO,EAsDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAtDO,EAuDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvDO,EAwDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAxDO,EAyDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAC,CAAvB,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,CAAvB,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAhEO,EAiEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAjEO,EAkEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAlEO,EAmEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,CAnEO,EAoEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,CApEO,EAqEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAvEO,EAwEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,CAxEO,EAyEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAzEO,EA0EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,EAAuB,CAAC,CAAxB,CA1EO,EA2EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,CA3EO,EA4EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA5EO,EA6EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA7EO,EA8EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAC,CAAvB,CA9EO,EA+EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,EAAuB,CAAvB,CA/EO,EAgFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAC,CAAvB,CAhFO,EAiFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAJO,EAKP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,CALO,EAMP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CARO,EASP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CATO,EAUP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,CAbO,EAcP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,CAdO,EAeP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAfO,EAgBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAhBO,EAiBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjBO,EAkBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAlB,CAlBO,EAmBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAnBO,EAoBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAC,CAAnB,CApBO,EAqBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CArBO,EAsBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAtBO,EAuBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvBO,EAwBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxBO,EAyBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAzBO,EA0BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CA1BO,EA2BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3BO,EA4BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CA5BO,EA6BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CA7BO,EA8BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CA9BO,EA+BP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CA/BO,EAgCP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAhCO,EAiCP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAC,CAAlB,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CArCO,EAsCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAtCO,EAuCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAvCO,EAwCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxCO,EAyCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAzCO,EA0CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CA1CO,EA2CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3CO,EA4CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CA5CO,EA6CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,CA7CO,EA8CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CA9CO,EA+CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CA/CO,EAgDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAhDO,EAiDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAjDO,EAkDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAlDO,EAmDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAnDO,EAoDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CApDO,EAqDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CArDO,EAsDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,CAtDO,EAuDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,CAvDO,EAwDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAxDO,EAyDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CAzDO,EA0DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CA1DO,EA2DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3DO,EA4DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CA5DO,EA6DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,CA7DO,EA8DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CA9DO,EA+DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CA/DO,EAgEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAhEO,EAiEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjEO,EAkEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAlEO,EAmEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CAnEO,EAoEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,CApEO,EAqEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,CArEO,EAsEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAC,CAApB,CAtEO,EAuEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAvEO,EAwEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxEO,EAyEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,CAzEO,EA0EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CA1EO,EA2EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,CA3EO,EA4EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA5EO,EA6EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAC,CAApB,CA7EO,EA8EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,CA9EO,EA+EP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,CA/EO,EAgFP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB,CAAnB,CAhFO,EAiFP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAC,CAAnB,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAHO,EAIP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAJO,EAKP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CALO,EAMP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CARO,EASP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CATO,EAUP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAbO,EAcP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAdO,EAeP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAfO,EAgBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CApCO,EAqCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CArCO,EAsCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAtCO,EAuCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAvCO,EAwCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAxCO,EAyCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAzCO,EA0CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA1CO,EA2CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA3CO,EA4CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA5CO,EA6CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA7CO,EA8CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA9CO,EA+CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA/CO,EAgDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAhDO,EAiDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAjDO,EAkDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAlDO,EAmDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAnDO,EAoDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CApDO,EAqDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CArDO,EAsDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAtDO,EAuDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAvDO,EAwDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAxDO,EAyDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAhEO,EAiEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAjEO,EAkEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAlEO,EAmEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAnEO,EAoEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CApEO,EAqEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAvEO,EAwEP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAxEO,EAyEP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAzEO,EA0EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA1EO,EA2EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA3EO,EA4EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA5EO,EA6EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA7EO,EA8EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA9EO,EA+EP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CA/EO,EAgFP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAhFO,EAiFP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAJO,EAKP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CALO,EAMP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CANO,EAOP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAPO,EAQP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CARO,EASP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CATO,EAUP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAbO,EAcP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAdO,EAeP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAfO,EAgBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CArCO,EAsCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAtCO,EAuCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAvCO,EAwCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAxCO,EAyCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAzCO,EA0CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA1CO,EA2CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA3CO,EA4CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA5CO,EA6CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA7CO,EA8CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA9CO,EA+CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA/CO,EAgDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhDO,EAiDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjDO,EAkDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlDO,EAmDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnDO,EAoDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CApDO,EAqDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CArDO,EAsDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAtDO,EAuDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAvDO,EAwDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAxDO,EAyDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAhEO,EAiEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAjEO,EAkEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAlEO,EAmEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAnEO,EAoEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CApEO,EAqEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAvEO,EAwEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAxEO,EAyEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAzEO,EA0EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA1EO,EA2EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA3EO,EA4EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA5EO,EA6EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA7EO,EA8EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA9EO,EA+EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CA/EO,EAgFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAhFO,EAiFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHO,EAIP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAJO,EAKP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CALO,EAMP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CARO,EASP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CATO,EAUP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAVO,EAWP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAXO,EAYP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAZO,EAaP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAbO,EAcP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAdO,EAeP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAfO,EAgBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CArCO,EAsCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAtCO,EAuCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAvCO,EAwCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAxCO,EAyCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAzCO,EA0CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1CO,EA2CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3CO,EA4CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA5CO,EA6CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CA7CO,EA8CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CA9CO,EA+CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA/CO,EAgDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhDO,EAiDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjDO,EAkDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAlDO,EAmDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAnDO,EAoDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CApDO,EAqDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CArDO,EAsDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtDO,EAuDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAvDO,EAwDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAxDO,EAyDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAhEO,EAiEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjEO,EAkEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlEO,EAmEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAnEO,EAoEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CApEO,EAqEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAvEO,EAwEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAxEO,EAyEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzEO,EA0EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA1EO,EA2EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3EO,EA4EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CA5EO,EA6EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CA7EO,EA8EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CA9EO,EA+EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA/EO,EAgFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhFO,EAiFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJO,EAKP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CALO,EAMP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANO,EAOP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAX,CAPO,EAQP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,CARO,EASP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,EAAW,CAAC,CAAZ,CATO,EAUP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CAbO,EAcP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAdO,EAeP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAfO,EAgBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAhBO,EAiBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAjBO,EAkBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAlBO,EAmBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAnBO,EAoBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CApBO,EAqBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CArBO,EAsBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAC,CAAZ,CAtBO,EAuBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAvBO,EAwBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,CAxBO,EAyBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArCO,EAsCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtCO,EAuCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAvCO,EAwCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAxCO,EAyCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzCO,EA0CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA1CO,EA2CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA3CO,EA4CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA5CO,EA6CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA7CO,EA8CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9CO,EA+CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA/CO,EAgDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAhDO,EAiDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAjDO,EAkDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAlDO,EAmDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAnDO,EAoDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApDO,EAqDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CArDO,EAsDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CAtDO,EAuDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvDO,EAwDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAxDO,EAyDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAzDO,EA0DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CA1DO,EA2DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA3DO,EA4DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA5DO,EA6DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7DO,EA8DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,CA9DO,EA+DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CA/DO,EAgEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhEO,EAiEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CAjEO,EAkEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,CAAV,EAAa,CAAb,CAlEO,EAmEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnEO,EAoEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAC,CAAb,CApEO,EAqEP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CAvEO,EAwEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAxEO,EAyEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAzEO,EA0EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1EO,EA2EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3EO,EA4EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA5EO,EA6EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CA7EO,EA8EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9EO,EA+EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAf,CA/EO,EAgFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAC,CAAZ,EAAe,CAAC,CAAhB,CAhFO,EAiFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAC,CAAf,CAjFO,CAAX;;AAoFA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHO,EAIP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAJO,EAKP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CALO,EAMP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CARO,EASP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CATO,EAUP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAVO,EAWP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAXO,EAYP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAZO,EAaP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAbO,EAcP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAdO,EAeP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAfO,EAgBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArCO,EAsCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtCO,EAuCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAvCO,EAwCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxCO,EAyCP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzCO,EA0CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1CO,EA2CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3CO,EA4CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA5CO,EA6CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA7CO,EA8CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9CO,EA+CP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/CO,EAgDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhDO,EAiDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjDO,EAkDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlDO,EAmDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAnDO,EAoDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CApDO,EAqDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CArDO,EAsDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtDO,EAuDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAvDO,EAwDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxDO,EAyDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhEO,CAAX;;AAmEA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHO,EAIP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJO,EAKP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALO,EAMP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CARO,EASP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CATO,EAUP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAVO,EAWP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAXO,EAYP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAZO,EAaP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAbO,EAcP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAdO,EAeP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAfO,EAgBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAhBO,EAiBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAjBO,EAkBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAlBO,EAmBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAnBO,EAoBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CApBO,EAqBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CArBO,EAsBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAtBO,EAuBP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9BO,EA+BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/BO,EAgCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhCO,EAiCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjCO,EAkCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlCO,EAmCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnCO,EAoCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApCO,EAqCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArCO,EAsCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtCO,EAuCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvCO,EAwCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxCO,EAyCP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzCO,EA0CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1CO,EA2CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3CO,EA4CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5CO,EA6CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7CO,EA8CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9CO,EA+CP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/CO,EAgDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhDO,EAiDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjDO,EAkDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlDO,EAmDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnDO,EAoDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApDO,EAqDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArDO,EAsDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtDO,EAuDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvDO,EAwDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxDO,EAyDP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzDO,EA0DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1DO,EA2DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3DO,EA4DP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhEO,CAAX;;AAmEA,gBAAIC,OAAO,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADO,EAEP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFO,EAGP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHO,EAIP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAJO,EAKP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CALO,EAMP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CANO,EAOP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAPO,EAQP,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CARO,EASP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CATO,EAUP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAVO,EAWP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAXO,EAYP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAZO,EAaP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAbO,EAcP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAdO,EAeP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAfO,EAgBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhBO,EAiBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjBO,EAkBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlBO,EAmBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnBO,EAoBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApBO,EAqBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArBO,EAsBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtBO,EAuBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvBO,EAwBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxBO,EAyBP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzBO,EA0BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1BO,EA2BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3BO,EA4BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5BO,EA6BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7BO,EA8BP,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9BO,EA+BP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA/BO,EAgCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAhCO,EAiCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAjCO,EAkCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAlCO,EAmCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAnCO,EAoCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CApCO,EAqCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CArCO,EAsCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAtCO,EAuCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAvCO,EAwCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAxCO,EAyCP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAzCO,EA0CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA1CO,EA2CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA3CO,EA4CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA5CO,EA6CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA7CO,EA8CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA9CO,EA+CP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA/CO,EAgDP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAhDO,EAiDP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAjDO,EAkDP,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAlDO,EAmDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAnDO,EAoDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CApDO,EAqDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CArDO,EAsDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtDO,EAuDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAvDO,EAwDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxDO,EAyDP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzDO,EA0DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1DO,EA2DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3DO,EA4DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA5DO,EA6DP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA7DO,EA8DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9DO,EA+DP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/DO,EAgEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhEO,EAiEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjEO,EAkEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlEO,EAmEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAnEO,EAoEP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CApEO,EAqEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CArEO,EAsEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtEO,EAuEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvEO,EAwEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxEO,EAyEP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzEO,EA0EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1EO,EA2EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3EO,EA4EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA5EO,EA6EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA7EO,EA8EP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA9EO,EA+EP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/EO,EAgFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAhFO,EAiFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjFO,EAkFP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlFO,EAmFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAnFO,EAoFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CApFO,EAqFP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CArFO,EAsFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtFO,EAuFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAvFO,EAwFP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAxFO,EAyFP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzFO,EA0FP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1FO,EA2FP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA3FO,EA4FP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA5FO,EA6FP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA7FO,EA8FP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9FO,EA+FP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/FO,EAgGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAhGO,EAiGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjGO,EAkGP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlGO,EAmGP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAnGO,EAoGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApGO,EAqGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CArGO,EAsGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtGO,EAuGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAvGO,EAwGP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAxGO,EAyGP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAzGO,EA0GP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA1GO,EA2GP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA3GO,EA4GP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA5GO,EA6GP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA7GO,EA8GP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA9GO,EA+GP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/GO,EAgHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAhHO,EAiHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAjHO,EAkHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlHO,EAmHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAnHO,EAoHP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CApHO,EAqHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CArHO,EAsHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAtHO,EAuHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvHO,EAwHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxHO,EAyHP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAzHO,EA0HP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA1HO,EA2HP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA3HO,EA4HP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA5HO,EA6HP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA7HO,EA8HP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA9HO,EA+HP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA/HO,EAgIP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAhIO,EAiIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjIO,EAkIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlIO,EAmIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAnIO,EAoIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApIO,EAqIP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CArIO,EAsIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAtIO,EAuIP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAvIO,EAwIP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAxIO,EAyIP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAzIO,EA0IP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA1IO,EA2IP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA3IO,EA4IP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA5IO,EA6IP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA7IO,EA8IP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA9IO,EA+IP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CA/IO,EAgJP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAhJO,EAiJP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjJO,EAkJP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlJO,EAmJP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAnJO,EAoJP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApJO,EAqJP,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CArJO,EAsJP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAtJO,EAuJP,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvJO,EAwJP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,EAAf,CAxJO,EAyJP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,CAAhB,CAzJO,EA0JP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,EAAf,CA1JO,EA2JP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,EAAf,CA3JO,EA4JP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,EAAf,CA5JO,EA6JP,CAAC,EAAD,EAAK,KAAL,EAAY,CAAZ,EAAe,EAAf,CA7JO,EA8JP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CA9JO,EA+JP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,CAAhB,CA/JO,EAgKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAhKO,EAiKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,CAAhB,CAjKO,EAkKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,CAAhB,CAlKO,EAmKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAnKO,EAoKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CApKO,EAqKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CArKO,EAsKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAtKO,EAuKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAvKO,EAwKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAxKO,EAyKP,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,EAAgB,EAAhB,CAzKO,CAAX;;AA4KA,gBAAIC,QAAQ,CACR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADQ,EAER,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJQ,EAKR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALQ,EAMR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANQ,EAOR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPQ,EAQR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CARQ,EASR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CATQ,EAUR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAVQ,EAWR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAXQ,EAYR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAZQ,EAaR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAbQ,EAcR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAdQ,EAeR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAfQ,EAgBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAhBQ,EAiBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAjBQ,EAkBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAlBQ,EAmBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAnBQ,EAoBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CApBQ,EAqBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CArBQ,EAsBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAtBQ,EAuBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAvBQ,EAwBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAxBQ,EAyBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAzBQ,EA0BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA1BQ,EA2BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA3BQ,EA4BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA5BQ,EA6BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA7BQ,EA8BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA9BQ,EA+BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA/BQ,EAgCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAhCQ,EAiCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAjCQ,EAkCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAlCQ,EAmCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAnCQ,EAoCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CApCQ,EAqCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CArCQ,EAsCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAtCQ,EAuCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAvCQ,EAwCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAxCQ,EAyCR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAzCQ,EA0CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1CQ,EA2CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3CQ,EA4CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5CQ,EA6CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7CQ,EA8CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9CQ,EA+CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/CQ,EAgDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhDQ,EAiDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjDQ,EAkDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlDQ,EAmDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnDQ,EAoDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApDQ,EAqDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArDQ,EAsDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtDQ,EAuDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvDQ,EAwDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxDQ,EAyDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzDQ,EA0DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1DQ,EA2DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3DQ,EA4DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5DQ,EA6DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7DQ,EA8DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9DQ,EA+DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/DQ,EAgER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhEQ,EAiER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjEQ,EAkER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlEQ,EAmER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnEQ,EAoER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApEQ,EAqER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArEQ,EAsER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtEQ,EAuER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvEQ,EAwER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxEQ,EAyER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzEQ,EA0ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1EQ,EA2ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3EQ,EA4ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5EQ,EA6ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7EQ,EA8ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9EQ,EA+ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/EQ,EAgFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhFQ,EAiFR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAjFQ,EAkFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlFQ,EAmFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnFQ,EAoFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApFQ,EAqFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArFQ,EAsFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtFQ,EAuFR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAvFQ,EAwFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxFQ,EAyFR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAzFQ,EA0FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA1FQ,EA2FR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA3FQ,EA4FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA5FQ,EA6FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7FQ,EA8FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9FQ,EA+FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/FQ,EAgGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAhGQ,EAiGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjGQ,EAkGR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAlGQ,EAmGR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAnGQ,EAoGR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApGQ,EAqGR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CArGQ,EAsGR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtGQ,EAuGR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAvGQ,EAwGR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAxGQ,EAyGR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAzGQ,EA0GR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA1GQ,EA2GR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3GQ,EA4GR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5GQ,EA6GR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA7GQ,EA8GR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA9GQ,EA+GR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA/GQ,EAgHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAhHQ,EAiHR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAjHQ,EAkHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAlHQ,EAmHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAnHQ,EAoHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CApHQ,EAqHR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CArHQ,EAsHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtHQ,EAuHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAvHQ,EAwHR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAxHQ,EAyHR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAzHQ,EA0HR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA1HQ,EA2HR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3HQ,EA4HR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5HQ,EA6HR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA7HQ,EA8HR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA9HQ,EA+HR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA/HQ,EAgIR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAhIQ,EAiIR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjIQ,EAkIR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAlIQ,EAmIR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAnIQ,EAoIR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CApIQ,EAqIR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CArIQ,EAsIR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAtIQ,EAuIR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvIQ,EAwIR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,CAAd,CAxIQ,EAyIR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAzIQ,EA0IR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA1IQ,EA2IR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA3IQ,EA4IR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA5IQ,EA6IR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA7IQ,EA8IR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA9IQ,EA+IR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA/IQ,EAgJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAhJQ,EAiJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjJQ,EAkJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAlJQ,EAmJR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAnJQ,EAoJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApJQ,EAqJR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CArJQ,EAsJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAtJQ,EAuJR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvJQ,EAwJR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAxJQ,EAyJR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAzJQ,EA0JR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA1JQ,EA2JR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA3JQ,EA4JR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA5JQ,EA6JR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA7JQ,EA8JR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA9JQ,EA+JR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA/JQ,EAgKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAhKQ,EAiKR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjKQ,EAkKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlKQ,EAmKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAnKQ,EAoKR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApKQ,EAqKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CArKQ,EAsKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAtKQ,EAuKR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAvKQ,EAwKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAxKQ,EAyKR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAzKQ,CAAZ;;AA4KA,gBAAIC,QAAQ,CACR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADQ,EAER,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJQ,EAKR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALQ,EAMR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANQ,EAOR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPQ,EAQR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CARQ,EASR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CATQ,EAUR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAVQ,EAWR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAXQ,EAYR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAZQ,EAaR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAbQ,EAcR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAdQ,EAeR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAfQ,EAgBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAhBQ,EAiBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAjBQ,EAkBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAlBQ,EAmBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAnBQ,EAoBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CApBQ,EAqBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CArBQ,EAsBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAtBQ,EAuBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAvBQ,EAwBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAxBQ,EAyBR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAzBQ,EA0BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA1BQ,EA2BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA3BQ,EA4BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA5BQ,EA6BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA7BQ,EA8BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA9BQ,EA+BR,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CA/BQ,EAgCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhCQ,EAiCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjCQ,EAkCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlCQ,EAmCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnCQ,EAoCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApCQ,EAqCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArCQ,EAsCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtCQ,EAuCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAvCQ,EAwCR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAxCQ,EAyCR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAzCQ,EA0CR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA1CQ,EA2CR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA3CQ,EA4CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5CQ,EA6CR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA7CQ,EA8CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9CQ,EA+CR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/CQ,EAgDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhDQ,EAiDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAjDQ,EAkDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlDQ,EAmDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAnDQ,EAoDR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CApDQ,EAqDR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CArDQ,EAsDR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAtDQ,EAuDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvDQ,EAwDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxDQ,EAyDR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzDQ,EA0DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1DQ,EA2DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3DQ,EA4DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA5DQ,EA6DR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA7DQ,EA8DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9DQ,EA+DR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/DQ,EAgER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAhEQ,EAiER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAjEQ,EAkER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAlEQ,EAmER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnEQ,EAoER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApEQ,EAqER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CArEQ,EAsER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtEQ,EAuER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CAvEQ,EAwER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAxEQ,EAyER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAzEQ,EA0ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1EQ,EA2ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA3EQ,EA4ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5EQ,EA6ER,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7EQ,EA8ER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA9EQ,EA+ER,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA/EQ,EAgFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhFQ,EAiFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjFQ,EAkFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlFQ,EAmFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnFQ,EAoFR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CApFQ,EAqFR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CArFQ,EAsFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtFQ,EAuFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvFQ,EAwFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxFQ,EAyFR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzFQ,EA0FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1FQ,EA2FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3FQ,EA4FR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA5FQ,EA6FR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA7FQ,EA8FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9FQ,EA+FR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/FQ,EAgGR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CAhGQ,EAiGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjGQ,EAkGR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CAlGQ,EAmGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnGQ,EAoGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApGQ,EAqGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArGQ,EAsGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtGQ,EAuGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvGQ,EAwGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAxGQ,EAyGR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAzGQ,EA0GR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,EAAb,CA1GQ,EA2GR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA3GQ,EA4GR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5GQ,EA6GR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA7GQ,EA8GR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9GQ,EA+GR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA/GQ,EAgHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhHQ,EAiHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAjHQ,EAkHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAlHQ,EAmHR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAnHQ,EAoHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CApHQ,EAqHR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CArHQ,EAsHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAtHQ,EAuHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAvHQ,EAwHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAxHQ,EAyHR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAzHQ,EA0HR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA1HQ,EA2HR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA3HQ,EA4HR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA5HQ,EA6HR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA7HQ,EA8HR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CA9HQ,EA+HR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA/HQ,EAgIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAhIQ,EAiIR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAjIQ,EAkIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAlIQ,EAmIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAnIQ,EAoIR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CApIQ,EAqIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CArIQ,EAsIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAtIQ,EAuIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAvIQ,EAwIR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAxIQ,EAyIR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAzIQ,EA0IR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA1IQ,EA2IR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA3IQ,EA4IR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA5IQ,EA6IR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA7IQ,EA8IR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CA9IQ,EA+IR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CA/IQ,EAgJR,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,EAAZ,CAhJQ,EAiJR,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,EAAa,CAAb,CAjJQ,EAkJR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAlJQ,EAmJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAnJQ,EAoJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CApJQ,EAqJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CArJQ,EAsJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtJQ,EAuJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAvJQ,EAwJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAxJQ,EAyJR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAzJQ,EA0JR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA1JQ,EA2JR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3JQ,EA4JR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA5JQ,EA6JR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA7JQ,EA8JR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA9JQ,EA+JR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA/JQ,EAgKR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAhKQ,EAiKR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAjKQ,EAkKR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAlKQ,EAmKR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAnKQ,EAoKR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApKQ,EAqKR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CArKQ,EAsKR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtKQ,EAuKR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAvKQ,EAwKR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAxKQ,EAyKR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAzKQ,EA0KR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA1KQ,EA2KR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3KQ,EA4KR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5KQ,EA6KR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA7KQ,EA8KR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA9KQ,EA+KR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA/KQ,EAgLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAhLQ,EAiLR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAjLQ,EAkLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAlLQ,EAmLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAnLQ,EAoLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApLQ,EAqLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CArLQ,EAsLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAtLQ,EAuLR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAvLQ,EAwLR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAxLQ,EAyLR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAzLQ,EA0LR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA1LQ,EA2LR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3LQ,EA4LR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5LQ,EA6LR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,CA7LQ,EA8LR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA9LQ,EA+LR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA/LQ,EAgMR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAhMQ,EAiMR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAjMQ,EAkMR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAlMQ,EAmMR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAnMQ,EAoMR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApMQ,EAqMR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CArMQ,EAsMR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtMQ,EAuMR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAvMQ,EAwMR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAxMQ,EAyMR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAzMQ,EA0MR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CA1MQ,EA2MR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3MQ,EA4MR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5MQ,EA6MR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA7MQ,EA8MR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA9MQ,EA+MR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA/MQ,EAgNR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAhNQ,EAiNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAjNQ,EAkNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAlNQ,EAmNR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAnNQ,EAoNR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApNQ,EAqNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CArNQ,EAsNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAtNQ,EAuNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAvNQ,EAwNR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAxNQ,EAyNR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAzNQ,EA0NR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA1NQ,EA2NR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA3NQ,EA4NR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA5NQ,EA6NR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA7NQ,EA8NR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,CA9NQ,EA+NR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,CA/NQ,EAgOR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAhOQ,EAiOR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAjOQ,EAkOR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CAlOQ,EAmOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAnOQ,EAoOR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CApOQ,EAqOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CArOQ,EAsOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAtOQ,EAuOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,CAAb,CAvOQ,EAwOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAxOQ,EAyOR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CAzOQ,EA0OR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA1OQ,EA2OR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA3OQ,EA4OR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,CA5OQ,EA6OR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,CAAd,CA7OQ,EA8OR,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,EAAc,EAAd,CA9OQ,EA+OR,CAAC,EAAD,EAAK,GAAL,EAAU,CAAV,EAAa,EAAb,CA/OQ,EAgPR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAhPQ,EAiPR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAjPQ,EAkPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlPQ,EAmPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAnPQ,EAoPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CApPQ,EAqPR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CArPQ,EAsPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAtPQ,EAuPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAvPQ,EAwPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAxPQ,EAyPR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAzPQ,EA0PR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA1PQ,EA2PR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA3PQ,EA4PR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA5PQ,EA6PR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA7PQ,EA8PR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA9PQ,EA+PR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA/PQ,EAgQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAhQQ,EAiQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAjQQ,EAkQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAlQQ,EAmQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAnQQ,EAoQR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CApQQ,EAqQR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CArQQ,EAsQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAtQQ,EAuQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAvQQ,EAwQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAxQQ,EAyQR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAzQQ,EA0QR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA1QQ,EA2QR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA3QQ,EA4QR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA5QQ,EA6QR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA7QQ,EA8QR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA9QQ,EA+QR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA/QQ,EAgRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAhRQ,EAiRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAjRQ,EAkRR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAlRQ,EAmRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAnRQ,EAoRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CApRQ,EAqRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CArRQ,EAsRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAtRQ,EAuRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CAvRQ,EAwRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAxRQ,EAyRR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAzRQ,EA0RR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA1RQ,EA2RR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA3RQ,EA4RR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA5RQ,EA6RR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CA7RQ,EA8RR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CA9RQ,EA+RR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,CAAf,CA/RQ,EAgSR,CAAC,EAAD,EAAK,IAAL,EAAW,CAAX,EAAc,EAAd,CAhSQ,EAiSR,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,EAAe,EAAf,CAjSQ,CAAZ;;AAoSA,gBAAIC,SAAS,CACT,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CADS,EAET,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAFS,EAGT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAHS,EAIT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAJS,EAKT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CALS,EAMT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CANS,EAOT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAPS,EAQT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CARS,EAST,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CATS,EAUT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAVS,EAWT,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAXS,EAYT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAZS,EAaT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAbS,EAcT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAdS,EAeT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAfS,EAgBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAhBS,EAiBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAjBS,EAkBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAlBS,EAmBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAnBS,EAoBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CApBS,EAqBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CArBS,EAsBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAtBS,EAuBT,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAvBS,EAwBT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAxBS,EAyBT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAzBS,EA0BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA1BS,EA2BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA3BS,EA4BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA5BS,EA6BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA7BS,EA8BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA9BS,EA+BT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA/BS,EAgCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAhCS,EAiCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAjCS,EAkCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAlCS,EAmCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAnCS,EAoCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CApCS,EAqCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CArCS,EAsCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAtCS,EAuCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAvCS,EAwCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAxCS,EAyCT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CAzCS,EA0CT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA1CS,EA2CT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA3CS,EA4CT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA5CS,EA6CT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA7CS,EA8CT,CAAC,EAAD,EAAK,IAAL,EAAW,EAAX,CA9CS,EA+CT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA/CS,EAgDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAhDS,EAiDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAjDS,EAkDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAlDS,EAmDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAnDS,EAoDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CApDS,EAqDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CArDS,EAsDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAtDS,EAuDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAvDS,EAwDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAxDS,EAyDT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAzDS,EA0DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA1DS,EA2DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA3DS,EA4DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA5DS,EA6DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA7DS,EA8DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA9DS,EA+DT,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CA/DS,EAgET,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAhES,EAiET,CAAC,EAAD,EAAK,KAAL,EAAY,EAAZ,CAjES,EAkET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAlES,EAmET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAnES,EAoET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CApES,EAqET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CArES,EAsET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAtES,EAuET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAvES,EAwET,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAxES,EAyET,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAzES,EA0ET,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CA1ES,EA2ET,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CA3ES,EA4ET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CA5ES,EA6ET,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CA7ES,EA8ET,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA9ES,EA+ET,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA/ES,EAgFT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAhFS,EAiFT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAjFS,EAkFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAlFS,EAmFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAnFS,EAoFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CApFS,EAqFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CArFS,EAsFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAtFS,EAuFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAvFS,EAwFT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAxFS,EAyFT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAzFS,EA0FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA1FS,EA2FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA3FS,EA4FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA5FS,EA6FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA7FS,EA8FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA9FS,EA+FT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA/FS,EAgGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAhGS,EAiGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAjGS,EAkGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAlGS,EAmGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAnGS,EAoGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CApGS,EAqGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CArGS,EAsGT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CAtGS,EAuGT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAvGS,EAwGT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAxGS,EAyGT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAzGS,EA0GT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CA1GS,EA2GT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CA3GS,EA4GT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA5GS,EA6GT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA7GS,EA8GT,CAAC,EAAD,EAAK,MAAL,EAAa,GAAb,CA9GS,EA+GT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CA/GS,EAgHT,CAAC,EAAD,EAAK,MAAL,EAAa,CAAb,CAhHS,EAiHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAjHS,EAkHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAlHS,EAmHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAnHS,EAoHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CApHS,EAqHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CArHS,EAsHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAtHS,EAuHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAvHS,EAwHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAxHS,EAyHT,CAAC,EAAD,EAAK,MAAL,EAAa,EAAb,CAzHS,CAAb;;AA4HA,gBAAIC,YAAY,CAACZ,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,KAAvD,EAA8DC,KAA9D,CAAhB;AACA,gBAAIG,WAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,IAA3D,EAAiE,IAAjE,CAAf;AAAA,gBACIC,WAAW,CADf;AAAA,gBAEIC,WAAW,CAFf;;AAIA,mBAAO;AACHC,4BAAY,oBAASxjB,MAAT,EAAiByjB,KAAjB,EAAwB;AAChC,wBAAIhe,MAAM,CAAV;AAAA,wBACI8T,MAAMkK,MAAMhe,GAAN,EAAW,CAAX,CADV;AAAA,wBAEIie,KAAK1jB,OAAOe,IAAP,CAAYwY,GAAZ,CAFT;;AAIA,2BAAOmK,OAAOD,MAAMhe,GAAN,EAAW,CAAX,CAAd,EAA6B;AACzB,4BAAIkX,IAAI8G,MAAM,EAAEhe,GAAR,EAAa,CAAb,IAAkB8T,GAA1B;AACAA,8BAAMkK,MAAMhe,GAAN,EAAW,CAAX,CAAN;AACAie,+BAAO/G,CAAP;AACA+G,8BAAM1jB,OAAOe,IAAP,CAAY4b,CAAZ,CAAN;AACH;;AAED,2BAAOlX,GAAP;AACH,iBAdE;;AAgBHke,4BAAY,oBAAS3jB,MAAT,EAAiBwC,IAAjB,EAAuBiD,GAAvB,EAA4B8T,GAA5B,EAAiC;AACzC,yBAAK,IAAIva,IAAIyG,GAAb,EAAkBzG,IAAIyG,MAAM8T,GAA5B,EAAiCva,GAAjC,EAAsC;AAClC,4BAAIwD,KAAKxD,CAAL,KAAWgB,OAAOe,IAAP,CAAY,CAAZ,CAAf,EACIyB,KAAKxD,CAAL,IAAU,CAACwD,KAAKxD,CAAL,CAAX;AACP;AACJ,iBArBE;;AAuBH4kB,2BAAW,mBAAS5jB,MAAT,EAAiBiZ,CAAjB,EAAoB;AAC3B,wBAAIja,IAAI,CAAR;AACA,2BAAOgB,OAAOe,IAAP,CAAY,CAAZ,CAAP;AACI/B;AADJ,qBAGA,IAAI2d,IAAI3c,OAAOe,IAAP,CAAY/B,CAAZ,IAAkB,KAAKA,CAA/B;AACA,2BAAOia,IAAI,CAAJ,GAAQ,CAAC0D,CAAT,GAAaA,CAApB;AACH,iBA9BE;;AAgCHhE,mCAAmB,2BAAS3Y,MAAT,EAAiB;AAChC,wBAAII,SAAS,KAAKojB,UAAL,CAAgBxjB,MAAhB,EAAwBmjB,MAAxB,CAAb;AACA,2BAAOA,OAAO/iB,MAAP,EAAe,CAAf,CAAP;AACH,iBAnCE;;AAqCHyjB,oCAAoB,4BAAS7jB,MAAT,EAAiB6F,EAAjB,EAAqBrD,IAArB,EAA2BiD,GAA3B,EAAgC;AAChD,wBAAIqe,MAAMV,UAAUvd,KAAK,CAAf,CAAV;AAAA,wBACIzF,SAAS,KAAKojB,UAAL,CAAgBxjB,MAAhB,EAAwB8jB,GAAxB,CADb;;AAGAthB,yBAAKiD,GAAL,IAAYqe,IAAI1jB,MAAJ,EAAY,CAAZ,CAAZ;AACAoC,yBAAKiD,MAAM,CAAX,IAAgBqe,IAAI1jB,MAAJ,EAAY,CAAZ,CAAhB;;AAEA,wBAAIyF,KAAK,CAAT,EAAY;AACRrD,6BAAKiD,MAAM,CAAX,IAAgBqe,IAAI1jB,MAAJ,EAAY,CAAZ,CAAhB;AACAoC,6BAAKiD,MAAM,CAAX,IAAgBqe,IAAI1jB,MAAJ,EAAY,CAAZ,CAAhB;AACH;;AAED;AACA,wBAAIyF,KAAK,EAAT,EAAa;AACT,4BAAIwd,SAASxd,KAAK,CAAd,CAAJ,EACI,KAAK8d,UAAL,CAAgB3jB,MAAhB,EAAwBwC,IAAxB,EAA8BiD,GAA9B,EAAmCI,KAAK,CAAL,GAASyd,QAAT,GAAoBC,QAAvD;AAEP,qBAJD,MAIO,IAAI1d,OAAO,EAAP,IAAaA,KAAK,EAAtB,EAA0B;AAC7B,6BAAK8d,UAAL,CAAgB3jB,MAAhB,EAAwBwC,IAAxB,EAA8BiD,GAA9B,EAAmCI,KAAK,CAAL,GAASyd,QAAT,GAAoBC,QAAvD;;AAEA,4BAAI7iB,KAAKC,GAAL,CAAS6B,KAAKiD,GAAL,CAAT,MAAwB,EAA5B,EACIjD,KAAKiD,GAAL,IAAY,KAAKme,SAAL,CAAe5jB,MAAf,EAAuBwC,KAAKiD,GAAL,CAAvB,CAAZ;;AAEJ,4BAAI/E,KAAKC,GAAL,CAAS6B,KAAKiD,MAAM,CAAX,CAAT,MAA4B,EAAhC,EACIjD,KAAKiD,MAAM,CAAX,IAAgB,KAAKme,SAAL,CAAe5jB,MAAf,EAAuBwC,KAAKiD,MAAM,CAAX,CAAvB,CAAhB;AACP,qBARM,MAQA;AACH,8BAAM,IAAI3D,KAAJ,CAAU,yCAAyC+D,EAAnD,CAAN;AACH;AACJ;AAjEE,aAAP;AAmEH,SA/7Ca,EAAd;;AAi8CA;AACA,YAAIyR,WAAY,YAAW;AACvB,qBAASA,QAAT,CAAkBF,MAAlB,EAA0B;AACtB,qBAAKgB,IAAL,GAAY,IAAI2L,OAAJ,EAAZ;AACA,qBAAKzL,SAAL,GAAiB,IAAIjR,UAAJ,CAAe2c,YAAf,CAAjB;AACA,qBAAKnG,OAAL,GAAe,IAAIxW,UAAJ,CAAe2c,YAAf,CAAf;AACA,qBAAKxhB,IAAL,GAAY,IAAI8E,YAAJ,CAAiB8P,OAAON,WAAxB,CAAZ;AACA,qBAAKgH,YAAL,GAAoB,IAAIxW,YAAJ,CAAiB0c,YAAjB,CAApB;AACA,qBAAKC,WAAL,GAAmB,UAAnB;AACA,qBAAK/G,GAAL,GAAW,IAAIgH,GAAJ,CAAQ9M,MAAR,CAAX;AACA,qBAAK+M,OAAL,GAAe,IAAI9c,UAAJ,CAAe,CAAf,CAAf;AACH;;AAEDiQ,qBAASyB,OAAT,GAAmB,CAAnB,CAZuB,CAYO;AAC9BzB,qBAAS8M,aAAT,GAAyB,CAAzB,CAbuB,CAaO;AAC9B9M,qBAAS+M,MAAT,GAAkB,EAAlB,CAduB,CAcO;AAC9B/M,qBAAS+G,QAAT,GAAoB,EAApB,CAfuB,CAeO;AAC9B/G,qBAAS2G,aAAT,GAAyB,EAAzB,CAhBuB,CAgBO;AAC9B3G,qBAAS0G,YAAT,GAAwB,EAAxB,CAjBuB,CAiBO;;AAE9B1G,qBAAS8K,kBAAT,GAA8B,CAA9B;AACA9K,qBAAS+K,mBAAT,GAA+B,CAA/B;AACA/K,qBAASgL,oBAAT,GAAgC,CAAhC;AACAhL,qBAASiL,kBAAT,GAA8B,CAA9B;;AAEA,gBAAIyB,eAAe,GAAnB;AAAA,gBACIM,yBAAyB,CAD7B;;AAGA,gBAAIC,WAAW,EAAf;AAAA,gBACIC,YAAY,GADhB;;AAGAlN,qBAASlZ,SAAT,GAAqB;AACjBuN,wBAAQ,gBAAU3L,MAAV,EAAkBoX,MAAlB,EAA0BiD,YAA1B,EAAwC;AAC5C,yBAAKoK,UAAL,GAAkBzkB,OAAOe,IAAP,CAAY,CAAZ,CAAlB;;AAEA,wBAAI,CAACsZ,YAAL,EACI,KAAKjC,IAAL,CAAUzM,MAAV,CAAiB3L,MAAjB,EAAyBoX,MAAzB,EAAiCiD,YAAjC;;AAEJ,yBAAKqK,eAAL,CAAqB1kB,MAArB,EAA6BoX,MAA7B;AACA,yBAAKuN,kBAAL,CAAwB3kB,MAAxB;;AAEA,wBAAI,KAAK4kB,YAAL,GAAoB5kB,OAAOe,IAAP,CAAY,CAAZ,CAAxB,EAAwC;AACpC,4BAAI,KAAKqX,IAAL,CAAU+J,cAAV,KAA6B7K,SAASgL,oBAA1C,EACI,MAAM,IAAIxgB,KAAJ,CAAU,iDAAV,CAAN;;AAEJ,6BAAK+iB,eAAL,CAAqB7kB,MAArB;AACH;;AAED,wBAAI,KAAKid,UAAL,GAAkBjd,OAAOe,IAAP,CAAY,CAAZ,CAAtB,EAAsC;AAClC,6BAAKmc,GAAL,CAASvR,MAAT,CAAgB3L,MAAhB,EAAwB,KAAKoY,IAA7B;AACH;;AAED,wBAAI,KAAK+E,WAAL,GAAmBnd,OAAOe,IAAP,CAAY,CAAZ,CAAvB,EAAuC;AACnC,8BAAM,IAAIe,KAAJ,CAAU,+BAAV,CAAN;AACH;;AAED,yBAAK+hB,kBAAL,CAAwB7jB,MAAxB;AACH,iBA1BgB;;AA4BjB0kB,iCAAiB,yBAAU1kB,MAAV,EAAkBoX,MAAlB,EAA0B;AACvC,wBAAI9W,OAAO,KAAK8X,IAAL,CAAU+J,cAAV,KAA6B7K,SAASgL,oBAAtC,GAA6D,CAA7D,GAAiE,CAA5E;AAAA,wBACInK,aAAa,KAAKC,IAAL,CAAUD,UAD3B;AAAA,wBAEIE,SAAS,KAAKD,IAAL,CAAUC,MAFvB;AAAA,wBAGIC,YAAY,KAAKA,SAHrB;AAAA,wBAIIuF,UAAU,KAAKA,OAJnB;AAAA,wBAKItF,MAAM,CALV;AAAA,wBAMIuM,SAAS,CAAC,KAAKxkB,IAAN,IAAc,CAN3B;;AAQA,yBAAK,IAAIuY,IAAI,CAAb,EAAgBA,IAAIV,UAApB,EAAgCU,GAAhC,EAAqC;AACjC,4BAAIa,IAAI,CAAR;AACA,+BAAOA,IAAIrB,MAAX,EAAmB;AACf,gCAAI9N,MAAMmP,CAAV;AAAA,gCACIqL,WAAW/kB,OAAOe,IAAP,CAAY,CAAZ,CADf;;AAGA,gCAAIgkB,aAAa,EAAjB,EACI,MAAM,IAAIjjB,KAAJ,CAAU,uBAAV,CAAN;;AAEJ,gCAAIkjB,IAAJ;AACA,mCAAO,CAACA,OAAOhlB,OAAOe,IAAP,CAAYT,IAAZ,CAAR,MAA+BwkB,MAAtC;AACIva,uCAAOya,IAAP;AADJ,6BAGAza,OAAOya,IAAP;;AAEA,gCAAIza,MAAM8N,MAAV,EACI,MAAM,IAAIvW,KAAJ,CAAU,qBAAqByI,GAArB,GAA2B,KAA3B,GAAmC8N,MAAnC,GAA4C,GAAtD,CAAN;;AAEJ,mCAAOqB,IAAInP,GAAX,EAAgBmP,GAAhB,EAAqB;AACjBpB,0CAAUC,GAAV,IAAiBwM,QAAjB;AACAlH,wCAAQtF,KAAR,IAAiBhO,GAAjB;AACH;AACJ;AACJ;AACJ,iBA7DgB;;AA+DjBoa,oCAAoB,4BAAU3kB,MAAV,EAAkB;AAClC,wBAAImY,aAAa,KAAKC,IAAL,CAAUD,UAA3B;AAAA,wBACIE,SAAS,KAAKD,IAAL,CAAUC,MADvB;AAAA,wBAEIjY,SAAS,CAAC,KAAKqkB,UAAN,EAAkB,KAAKA,UAAL,GAAkB,EAApC,EAAwC,CAAxC,CAFb;AAAA,wBAEyD;AACrDlM,0BAAM,CAHV;AAAA,wBAII0M,YAAY,IAJhB;AAAA,wBAKInH,eAAe,KAAKA,YALxB;AAAA,wBAMID,UAAU,KAAKA,OANnB;AAAA,wBAOIvF,YAAY,KAAKA,SAPrB;;AASA,yBAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIV,UAApB,EAAgCU,GAAhC,EAAqC;AACjC,6BAAK,IAAI7Z,IAAI,CAAb,EAAgBA,IAAIqZ,MAApB,GAA6B;AACzB,gCAAI6M,SAASrH,QAAQtF,GAAR,CAAb;;AAEA,oCAAQD,UAAUC,GAAV,CAAR;AACI,qCAAKjB,SAASyB,OAAd;AACI,2CAAO/Z,IAAIkmB,MAAX,EAAmBlmB,KAAKuZ,KAAxB,EAA+B;AAC3BuF,qDAAavF,GAAb,IAAoB,CAApB;AACH;AACD;;AAEJ,qCAAKjB,SAAS0G,YAAd;AACA,qCAAK1G,SAAS2G,aAAd;AACI,2CAAOjf,IAAIkmB,MAAX,EAAmBlmB,KAAKuZ,KAAxB,EAA+B;AAC3BnY,+CAAO,CAAP,KAAasY,QAAQC,iBAAR,CAA0B3Y,MAA1B,IAAoCukB,QAAjD;AACA,4CAAIzkB,MAAMY,KAAK4T,GAAL,CAAS5T,KAAK2T,GAAL,CAASjU,OAAO,CAAP,CAAT,EAAoB,CAAC,GAArB,CAAT,EAAoC,GAApC,CAAV;AACA0d,qDAAavF,GAAb,IAAoB4M,kBAAkB,CAACrlB,GAAD,GAAO0kB,SAAzB,CAApB;AACH;AACD;;AAEJ,qCAAKlN,SAAS+G,QAAd;AACI,2CAAOrf,IAAIkmB,MAAX,EAAmBlmB,KAAKuZ,KAAxB,EAA+B;AAC3B,4CAAI0M,SAAJ,EAAe;AACX7kB,mDAAO,CAAP,KAAaJ,OAAOe,IAAP,CAAY,CAAZ,IAAiB,GAA9B;AACAkkB,wDAAY,KAAZ;AACH,yCAHD,MAGO;AACH7kB,mDAAO,CAAP,KAAasY,QAAQC,iBAAR,CAA0B3Y,MAA1B,IAAoCukB,QAAjD;AACH;AACD,4CAAIzkB,MAAMY,KAAK4T,GAAL,CAAS5T,KAAK2T,GAAL,CAASjU,OAAO,CAAP,CAAT,EAAoB,CAAC,GAArB,CAAT,EAAoC,GAApC,CAAV;AACA0d,qDAAavF,GAAb,IAAoB,CAAC4M,kBAAkBrlB,MAAM0kB,SAAxB,CAArB;AACH;AACD;;AAEJ;AACI,2CAAOxlB,IAAIkmB,MAAX,EAAmBlmB,KAAKuZ,KAAxB,EAA+B;AAC3BnY,+CAAO,CAAP,KAAasY,QAAQC,iBAAR,CAA0B3Y,MAA1B,IAAoCukB,QAAjD;AACA,4CAAInkB,OAAO,CAAP,IAAY,GAAhB,EACI,MAAM,IAAI0B,KAAJ,CAAU,+BAA+B1B,OAAO,CAAP,CAAzC,CAAN;;AAEJ0d,qDAAavF,GAAb,IAAoB4M,kBAAkB/kB,OAAO,CAAP,IAAY,GAAZ,GAAkBokB,SAApC,CAApB;AACH;AACD;AArCR;AAuCH;AACJ;AACJ,iBAtHgB;;AAwHjBK,iCAAiB,yBAAU7kB,MAAV,EAAkB;AAC/B,wBAAIolB,aAAaplB,OAAOe,IAAP,CAAY,CAAZ,IAAiB,CAAlC;AAAA,wBACIskB,WAAWrlB,OAAOe,IAAP,CAAY,CAAZ,CADf;;AAGA,wBAAIskB,YAAY,KAAKjN,IAAL,CAAUkN,QAA1B,EACI,MAAM,IAAIxjB,KAAJ,CAAU,6BAA6BujB,QAAvC,CAAN;;AAEJ,wBAAI,CAAC,KAAKE,WAAN,IAAqB,KAAKA,WAAL,CAAiBrmB,MAAjB,KAA4BkmB,UAArD,EAAiE;AAC7D;AACA,6BAAKG,WAAL,GAAmB,IAAIle,UAAJ,CAAe+d,UAAf,CAAnB;AACA,6BAAKI,QAAL,GAAgB,IAAIne,UAAJ,CAAe+d,UAAf,CAAhB;AACH;;AAED,yBAAKG,WAAL,CAAiB,CAAjB,IAAsB,KAAKnN,IAAL,CAAUiB,UAAV,CAAqBgM,QAArB,IAAiCrlB,OAAOe,IAAP,CAAY,CAAZ,CAAvD;AACA,yBAAKykB,QAAL,CAAc,CAAd,IAAmBxlB,OAAOe,IAAP,CAAY,CAAZ,CAAnB;;AAEA,wBAAI,KAAKwkB,WAAL,CAAiB,CAAjB,IAAsB,IAA1B,EACI,MAAM,IAAIzjB,KAAJ,CAAU,gCAAgC,KAAKyjB,WAAL,CAAiB,CAAjB,CAA1C,CAAN;;AAEJ,yBAAK,IAAIvmB,IAAI,CAAb,EAAgBA,IAAIomB,UAApB,EAAgCpmB,GAAhC,EAAqC;AACjC,6BAAKumB,WAAL,CAAiBvmB,CAAjB,IAAsBgB,OAAOe,IAAP,CAAY,CAAZ,IAAiB,KAAKwkB,WAAL,CAAiBvmB,IAAI,CAArB,CAAvC;AACA,4BAAI,KAAKumB,WAAL,CAAiBvmB,CAAjB,IAAsB,IAA1B,EACI,MAAM,IAAI8C,KAAJ,CAAU,gCAAgC,KAAKyjB,WAAL,CAAiBvmB,CAAjB,CAA1C,CAAN;;AAEJ,6BAAKwmB,QAAL,CAAcxmB,CAAd,IAAmBgB,OAAOe,IAAP,CAAY,CAAZ,CAAnB;AACH;AACJ,iBAlJgB;;AAoJjB8iB,oCAAoB,4BAAU7jB,MAAV,EAAkB;AAClC,wBAAIwC,OAAO,KAAKA,IAAhB;AAAA,wBACI4V,OAAO,KAAKA,IADhB;AAAA,wBAEIC,SAASD,KAAKC,MAFlB;AAAA,wBAGIuF,eAAexF,KAAKD,UAHxB;AAAA,wBAIIwF,UAAUvF,KAAKiB,UAJnB;AAAA,wBAKIf,YAAY,KAAKA,SALrB;AAAA,wBAMIwF,eAAe,KAAKA,YANxB;AAAA,wBAOI1X,MAAM,KAAK+d,OAPf;;AASA,wBAAIpG,WAAW,CAAf;AAAA,wBAAkBxF,MAAM,CAAxB;AACA,yBAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI+E,YAApB,EAAkC/E,GAAlC,EAAuC;AACnC,4BAAI4M,WAAWrN,KAAKoB,WAAL,CAAiBX,CAAjB,CAAf;;AAEA,6BAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMT,MAAxB,EAAgCS,OAAOP,KAAvC,EAA8C;AAC1C,gCAAImN,MAAMpN,UAAUC,GAAV,CAAV;AAAA,gCACI9S,MAAMsY,WAAWJ,QAAQ7E,GAAR,CADrB;AAAA,gCAEI6M,QAAQhI,QAAQ7E,MAAM,CAAd,IAAmB6E,QAAQ7E,GAAR,CAF/B;;AAIA,gCAAI4M,QAAQpO,SAASyB,OAAjB,IAA4B2M,QAAQpO,SAAS0G,YAA7C,IAA6D0H,QAAQpO,SAAS2G,aAAlF,EAAiG;AAC7F,qCAAK,IAAIxE,QAAQ,CAAjB,EAAoBA,QAAQgM,QAA5B,EAAsChM,SAAShU,OAAO,GAAtD,EAA2D;AACvD,yCAAK,IAAIzG,IAAIyG,GAAb,EAAkBzG,IAAIyG,MAAMkgB,KAA5B,EAAmC3mB,GAAnC,EAAwC;AACpCwD,6CAAKxD,CAAL,IAAU,CAAV;AACH;AACJ;AACJ,6BAND,MAMO,IAAI0mB,QAAQpO,SAAS+G,QAArB,EAA+B;AAClC;AACA,qCAAK,IAAI5E,QAAQ,CAAjB,EAAoBA,QAAQgM,QAA5B,EAAsChM,SAAShU,OAAO,GAAtD,EAA2D;AACvD,wCAAImgB,SAAS,CAAb;;AAEA,yCAAK,IAAIlM,IAAI,CAAb,EAAgBA,IAAIiM,KAApB,EAA2BjM,GAA3B,EAAgC;AAC5B,6CAAKuK,WAAL,GAAoB,KAAKA,WAAL,IAAoB,UAAU,UAA9B,CAAD,GAA8C,CAAjE;AACAzhB,6CAAKiD,MAAMiU,CAAX,IAAgB,KAAKuK,WAArB;AACA2B,kDAAUpjB,KAAKiD,MAAMiU,CAAX,IAAgBlX,KAAKiD,MAAMiU,CAAX,CAA1B;AACH;;AAED,wCAAIxB,QAAQ4F,aAAavF,GAAb,IAAoB7X,KAAK0gB,IAAL,CAAUwE,MAAV,CAAhC;AACA,yCAAK,IAAIlM,IAAI,CAAb,EAAgBA,IAAIiM,KAApB,EAA2BjM,GAA3B,EAAgC;AAC5BlX,6CAAKiD,MAAMiU,CAAX,KAAiBxB,KAAjB;AACH;AACJ;AACJ,6BAhBM,MAgBA;AACH,qCAAK,IAAIuB,QAAQ,CAAjB,EAAoBA,QAAQgM,QAA5B,EAAsChM,SAAShU,OAAO,GAAtD,EAA2D;AACvD,wCAAIogB,MAAOH,OAAOpO,SAAS8M,aAAjB,GAAkC,CAAlC,GAAsC,CAAhD;AACA,yCAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAIiM,KAApB,EAA2BjM,KAAKmM,GAAhC,EAAqC;AACjCnN,gDAAQmL,kBAAR,CAA2B7jB,MAA3B,EAAmC0lB,GAAnC,EAAwCtf,GAAxC,EAA6C,CAA7C;;AAEA;AACA,6CAAK,IAAIuW,IAAI,CAAb,EAAgBA,IAAIkJ,GAApB,EAAyBlJ,GAAzB,EAA8B;AAC1Bna,iDAAKiD,MAAMiU,CAAN,GAAUiD,CAAf,IAAqBvW,IAAIuW,CAAJ,IAAS,CAAV,GAAemJ,SAAS1f,IAAIuW,CAAJ,CAAT,CAAf,GAAkC,CAACmJ,SAAS,CAAC1f,IAAIuW,CAAJ,CAAV,CAAvD;AACAna,iDAAKiD,MAAMiU,CAAN,GAAUiD,CAAf,KAAqBmB,aAAavF,GAAb,CAArB;AACH;AACJ;AACJ;AACJ;AACJ;AACDwF,oCAAY0H,YAAY,CAAxB;AACH;;AAED;AACA,wBAAI,KAAKb,YAAT,EAAuB;AACnB,8BAAM,IAAI9iB,KAAJ,CAAU,sBAAV,CAAN;AACH;AACJ;;AAGL;AAtNqB,aAArB,CAuNA,SAASiiB,OAAT,GAAmB;AACf,qBAAKnC,WAAL,GAAmB,IAAIva,UAAJ,CAAe,CAAf,CAAnB;AACA,qBAAK8a,cAAL,GAAsB7K,SAAS8K,kBAA/B;AACA,qBAAK5I,WAAL,GAAmB,IAAInS,UAAJ,CAAeid,sBAAf,CAAnB;AACA,qBAAKyB,eAAL,GAAuB,KAAvB;AACA,qBAAKC,eAAL,GAAuB,KAAvB;AACH;;AAEDjC,oBAAQ3lB,SAAR,GAAoB;AAChBuN,wBAAQ,gBAAU3L,MAAV,EAAkBoX,MAAlB,EAA0BiD,YAA1B,EAAwC;AAC5Cra,2BAAOO,OAAP,CAAe,CAAf,EAD4C,CACzB;;AAEnB,yBAAK4hB,cAAL,GAAsBniB,OAAOe,IAAP,CAAY,CAAZ,CAAtB;AACA,yBAAK6gB,WAAL,CAAiB,CAAjB,IAAsB,KAAKA,WAAL,CAAiB,CAAjB,CAAtB;AACA,yBAAKA,WAAL,CAAiB,CAAjB,IAAsB5hB,OAAOe,IAAP,CAAY,CAAZ,CAAtB;;AAEA,yBAAKoX,UAAL,GAAkB,CAAlB;AACA,yBAAKqB,WAAL,CAAiB,CAAjB,IAAsB,CAAtB;;AAEA,wBAAI,KAAK2I,cAAL,KAAwB7K,SAASgL,oBAArC,EAA2D;AACvD,6BAAKjK,MAAL,GAAcrY,OAAOe,IAAP,CAAY,CAAZ,CAAd;AACA,6BAAK,IAAI/B,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,gCAAIgB,OAAOe,IAAP,CAAY,CAAZ,CAAJ,EAAoB;AAChB,qCAAKyY,WAAL,CAAiB,KAAKrB,UAAL,GAAkB,CAAnC;AACH,6BAFD,MAEO;AACH,qCAAKA,UAAL;AACA,qCAAKqB,WAAL,CAAiB,KAAKrB,UAAL,GAAkB,CAAnC,IAAwC,CAAxC;AACH;AACJ;;AAED,6BAAK8N,WAAL,GAAmB,CAAnB;AACA,6BAAK5M,UAAL,GAAkB6M,eAAe9O,OAAOkE,WAAtB,CAAlB;AACA,6BAAKgK,QAAL,GAAgBa,uBAAuB/O,OAAOkE,WAA9B,CAAhB;AACA,6BAAK8K,gBAAL,GAAwB,KAAxB;AACH,qBAfD,MAeO;AACH,6BAAK/N,MAAL,GAAcrY,OAAOe,IAAP,CAAY,CAAZ,CAAd;AACA,6BAAKklB,WAAL,GAAmB,CAAnB;AACA,6BAAK5M,UAAL,GAAkBgN,gBAAgBjP,OAAOkE,WAAvB,CAAlB;AACA,6BAAKgK,QAAL,GAAgBgB,sBAAsBlP,OAAOkE,WAA7B,CAAhB;AACA,6BAAK8K,gBAAL,GAAwB,CAAC,CAACpmB,OAAOe,IAAP,CAAY,CAAZ,CAA1B;;AAEA,4BAAI,KAAKqlB,gBAAT,EACI,KAAKG,gBAAL,CAAsBvmB,MAAtB,EAA8BoX,MAA9B,EAAsCiD,YAAtC;AACP;AACJ,iBApCe;;AAsChBkM,kCAAkB,0BAAUvmB,MAAV,EAAkBoX,MAAlB,EAA0BiD,YAA1B,EAAwC;AACtD,0BAAM,IAAIvY,KAAJ,CAAU,6BAAV,CAAN;;AAEA,4BAAQsV,OAAOT,OAAf;AACI,6BAAK+D,YAAL;AACI,kCAAM,IAAI5Y,KAAJ,CAAU,6BAAV,CAAN;AACA;;AAEJ,6BAAK8Y,WAAL;AACI,kCAAM,IAAI9Y,KAAJ,CAAU,iCAAV,CAAN;AACA;;AAEJ;AACI,kCAAM,IAAIA,KAAJ,CAAU,wCAAwCsV,OAAOT,OAAzD,CAAN;AAVR;AAYH;AArDe,aAApB;;AAwDA,mBAAOW,QAAP;AACH,SAtTc,EAAf;;AAwTA;AACA,YAAIoJ,OAAQ,YAAU;AAClB,qBAASA,IAAT,CAAcxhB,MAAd,EAAsB;AAClB,qBAAKsnB,CAAL,GAAStnB,MAAT;AACA,qBAAKunB,EAAL,GAAUvnB,WAAW,CAArB;AACA,qBAAKwnB,EAAL,GAAUxnB,WAAW,CAArB;AACA,qBAAKynB,EAAL,GAAUznB,WAAW,CAArB;;AAEA,wBAAQA,MAAR;AACI,yBAAK,IAAL;AACI,6BAAK0nB,MAAL,GAAcC,eAAd;AACA;;AAEJ,yBAAK,GAAL;AACI,6BAAKD,MAAL,GAAcE,cAAd;AACA;;AAEJ,yBAAK,IAAL;AACI,6BAAKF,MAAL,GAAcG,eAAd;AACA;;AAEJ,yBAAK,GAAL;AACI,6BAAKH,MAAL,GAAcI,cAAd;AACA;;AAEJ;AACI,8BAAM,IAAIllB,KAAJ,CAAU,8BAA8B5C,MAAxC,CAAN;AAlBR;;AAqBA,qBAAK+nB,GAAL,GAAW,IAAIvI,GAAJ,CAAQ,KAAKgI,EAAb,CAAX;;AAEA,qBAAKtgB,GAAL,GAAW,IAAI1D,KAAJ,CAAU,KAAKgkB,EAAf,CAAX;AACA,qBAAK,IAAI1nB,IAAI,CAAb,EAAgBA,IAAI,KAAK0nB,EAAzB,EAA6B1nB,GAA7B,EAAkC;AAC9B,yBAAKoH,GAAL,CAASpH,CAAT,IAAc,IAAIsI,YAAJ,CAAiB,CAAjB,CAAd;AACH;;AAED,qBAAKxH,GAAL,GAAW,IAAIwH,YAAJ,CAAiB,CAAjB,CAAX;AACH;;AAEDoZ,iBAAKtiB,SAAL,CAAe8V,OAAf,GAAyB,UAAS5R,KAAT,EAAgB4kB,QAAhB,EAA0BxK,MAA1B,EAAkCyK,SAAlC,EAA6C;AAClE;AACA,oBAAIV,KAAK,KAAKA,EAAd;AAAA,oBACIC,KAAK,KAAKA,EADd;AAAA,oBAEIC,KAAK,KAAKA,EAFd;AAAA,oBAGIvgB,MAAM,KAAKA,GAHf;AAAA,oBAIItG,MAAM,KAAKA,GAJf;AAAA,oBAKI8mB,SAAS,KAAKA,MALlB;AAAA,oBAMIK,MAAM,KAAKA,GANf;;AAQA;AACA,qBAAK,IAAIvN,IAAI,CAAb,EAAgBA,IAAIgN,EAApB,EAAwBhN,GAAxB,EAA6B;AACzBtT,wBAAIsT,CAAJ,EAAO,CAAP,IAAapX,MAAM4kB,WAAW,IAAIxN,CAArB,IAA0BkN,OAAOlN,CAAP,EAAU,CAAV,CAA3B,GAA4CpX,MAAM4kB,WAAWT,EAAX,GAAgB,CAAhB,GAAoB,IAAI/M,CAA9B,IAAmCkN,OAAOlN,CAAP,EAAU,CAAV,CAA3F;AACAtT,wBAAIsT,CAAJ,EAAO,CAAP,IAAapX,MAAM4kB,WAAWT,EAAX,GAAgB,CAAhB,GAAoB,IAAI/M,CAA9B,IAAmCkN,OAAOlN,CAAP,EAAU,CAAV,CAApC,GAAqDpX,MAAM4kB,WAAW,IAAIxN,CAArB,IAA0BkN,OAAOlN,CAAP,EAAU,CAAV,CAA3F;AACH;;AAED;AACAuN,oBAAI/S,OAAJ,CAAY9N,GAAZ,EAAiB,KAAjB;;AAEA;AACA,qBAAK,IAAIsT,IAAI,CAAb,EAAgBA,IAAIgN,EAApB,EAAwBhN,GAAxB,EAA6B;AACzB5Z,wBAAI,CAAJ,IAASsG,IAAIsT,CAAJ,EAAO,CAAP,CAAT;AACA5Z,wBAAI,CAAJ,IAASsG,IAAIsT,CAAJ,EAAO,CAAP,CAAT;AACAtT,wBAAIsT,CAAJ,EAAO,CAAP,IAAa5Z,IAAI,CAAJ,IAAS8mB,OAAOlN,CAAP,EAAU,CAAV,CAAV,GAA2B5Z,IAAI,CAAJ,IAAS8mB,OAAOlN,CAAP,EAAU,CAAV,CAAhD;AACAtT,wBAAIsT,CAAJ,EAAO,CAAP,IAAa5Z,IAAI,CAAJ,IAAS8mB,OAAOlN,CAAP,EAAU,CAAV,CAAV,GAA2B5Z,IAAI,CAAJ,IAAS8mB,OAAOlN,CAAP,EAAU,CAAV,CAAhD;AACH;;AAED;AACA,qBAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIiN,EAApB,EAAwBjN,KAAK,CAA7B,EAAgC;AAC5BgD,2BAAOyK,YAAY,IAAIzN,CAAvB,IAA4BtT,IAAIugB,KAAKjN,CAAT,EAAY,CAAZ,CAA5B;AACAgD,2BAAOyK,YAAY,CAAZ,GAAgB,IAAIzN,CAA3B,IAAgCtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAAhC;;AAEAgD,2BAAOyK,YAAY,CAAZ,GAAgB,IAAIzN,CAA3B,IAAgC,CAACtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAAjC;AACAgD,2BAAOyK,YAAY,CAAZ,GAAgB,IAAIzN,CAA3B,IAAgC,CAACtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAAjC;;AAEAgD,2BAAOyK,YAAYT,EAAZ,GAAiB,IAAIhN,CAA5B,IAAiCtT,IAAIsT,CAAJ,EAAO,CAAP,CAAjC;AACAgD,2BAAOyK,YAAYT,EAAZ,GAAiB,CAAjB,GAAqB,IAAIhN,CAAhC,IAAqCtT,IAAI,IAAIsT,CAAR,EAAW,CAAX,CAArC;;AAEAgD,2BAAOyK,YAAYT,EAAZ,GAAiB,CAAjB,GAAqB,IAAIhN,CAAhC,IAAqC,CAACtT,IAAIsgB,KAAK,CAAL,GAAShN,CAAb,EAAgB,CAAhB,CAAtC;AACAgD,2BAAOyK,YAAYT,EAAZ,GAAiB,CAAjB,GAAqB,IAAIhN,CAAhC,IAAqC,CAACtT,IAAIsgB,KAAK,CAAL,GAAShN,CAAb,EAAgB,CAAhB,CAAtC;;AAEAgD,2BAAOyK,YAAYV,EAAZ,GAAiB,IAAI/M,CAA5B,IAAiCtT,IAAIugB,KAAKjN,CAAT,EAAY,CAAZ,CAAjC;AACAgD,2BAAOyK,YAAYV,EAAZ,GAAiB,CAAjB,GAAqB,IAAI/M,CAAhC,IAAqCtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAArC;;AAEAgD,2BAAOyK,YAAYV,EAAZ,GAAiB,CAAjB,GAAqB,IAAI/M,CAAhC,IAAqC,CAACtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAAtC;AACAgD,2BAAOyK,YAAYV,EAAZ,GAAiB,CAAjB,GAAqB,IAAI/M,CAAhC,IAAqC,CAACtT,IAAIugB,KAAK,CAAL,GAASjN,CAAb,EAAgB,CAAhB,CAAtC;;AAEAgD,2BAAOyK,YAAYV,EAAZ,GAAiBC,EAAjB,GAAsB,IAAIhN,CAAjC,IAAsC,CAACtT,IAAIsT,CAAJ,EAAO,CAAP,CAAvC;AACAgD,2BAAOyK,YAAYV,EAAZ,GAAiBC,EAAjB,GAAsB,CAAtB,GAA0B,IAAIhN,CAArC,IAA0C,CAACtT,IAAI,IAAIsT,CAAR,EAAW,CAAX,CAA3C;;AAEAgD,2BAAOyK,YAAYV,EAAZ,GAAiBC,EAAjB,GAAsB,CAAtB,GAA0B,IAAIhN,CAArC,IAA0CtT,IAAIsgB,KAAK,CAAL,GAAShN,CAAb,EAAgB,CAAhB,CAA1C;AACAgD,2BAAOyK,YAAYV,EAAZ,GAAiBC,EAAjB,GAAsB,CAAtB,GAA0B,IAAIhN,CAArC,IAA0CtT,IAAIsgB,KAAK,CAAL,GAAShN,CAAb,EAAgB,CAAhB,CAA1C;AACH;AACJ,aArDD;AAsDA,mBAAOgH,IAAP;AACH,SA7FU,EAAX;;AA+FA,YAAImG,kBAAkB,CAClB,CAAC,iBAAD,EAAoB,iBAApB,CADkB,EAElB,CAAC,iBAAD,EAAoB,iBAApB,CAFkB,EAGlB,CAAC,iBAAD,EAAoB,iBAApB,CAHkB,EAIlB,CAAC,iBAAD,EAAoB,iBAApB,CAJkB,EAKlB,CAAC,iBAAD,EAAoB,iBAApB,CALkB,EAMlB,CAAC,iBAAD,EAAoB,iBAApB,CANkB,EAOlB,CAAC,iBAAD,EAAoB,iBAApB,CAPkB,EAQlB,CAAC,iBAAD,EAAoB,iBAApB,CARkB,EASlB,CAAC,iBAAD,EAAoB,iBAApB,CATkB,EAUlB,CAAC,iBAAD,EAAoB,iBAApB,CAVkB,EAWlB,CAAC,iBAAD,EAAoB,iBAApB,CAXkB,EAYlB,CAAC,iBAAD,EAAoB,iBAApB,CAZkB,EAalB,CAAC,iBAAD,EAAoB,iBAApB,CAbkB,EAclB,CAAC,iBAAD,EAAoB,iBAApB,CAdkB,EAelB,CAAC,iBAAD,EAAoB,iBAApB,CAfkB,EAgBlB,CAAC,iBAAD,EAAoB,iBAApB,CAhBkB,EAiBlB,CAAC,iBAAD,EAAoB,iBAApB,CAjBkB,EAkBlB,CAAC,iBAAD,EAAoB,iBAApB,CAlBkB,EAmBlB,CAAC,iBAAD,EAAoB,iBAApB,CAnBkB,EAoBlB,CAAC,iBAAD,EAAoB,iBAApB,CApBkB,EAqBlB,CAAC,iBAAD,EAAoB,iBAApB,CArBkB,EAsBlB,CAAC,iBAAD,EAAoB,iBAApB,CAtBkB,EAuBlB,CAAC,iBAAD,EAAoB,iBAApB,CAvBkB,EAwBlB,CAAC,iBAAD,EAAoB,iBAApB,CAxBkB,EAyBlB,CAAC,iBAAD,EAAoB,iBAApB,CAzBkB,EA0BlB,CAAC,iBAAD,EAAoB,iBAApB,CA1BkB,EA2BlB,CAAC,iBAAD,EAAoB,iBAApB,CA3BkB,EA4BlB,CAAC,iBAAD,EAAoB,iBAApB,CA5BkB,EA6BlB,CAAC,iBAAD,EAAoB,iBAApB,CA7BkB,EA8BlB,CAAC,iBAAD,EAAoB,iBAApB,CA9BkB,EA+BlB,CAAC,iBAAD,EAAoB,iBAApB,CA/BkB,EAgClB,CAAC,iBAAD,EAAoB,iBAApB,CAhCkB,EAiClB,CAAC,iBAAD,EAAoB,iBAApB,CAjCkB,EAkClB,CAAC,iBAAD,EAAoB,iBAApB,CAlCkB,EAmClB,CAAC,iBAAD,EAAoB,iBAApB,CAnCkB,EAoClB,CAAC,iBAAD,EAAoB,iBAApB,CApCkB,EAqClB,CAAC,iBAAD,EAAoB,iBAApB,CArCkB,EAsClB,CAAC,iBAAD,EAAoB,iBAApB,CAtCkB,EAuClB,CAAC,iBAAD,EAAoB,iBAApB,CAvCkB,EAwClB,CAAC,iBAAD,EAAoB,iBAApB,CAxCkB,EAyClB,CAAC,iBAAD,EAAoB,iBAApB,CAzCkB,EA0ClB,CAAC,iBAAD,EAAoB,iBAApB,CA1CkB,EA2ClB,CAAC,iBAAD,EAAoB,iBAApB,CA3CkB,EA4ClB,CAAC,iBAAD,EAAoB,iBAApB,CA5CkB,EA6ClB,CAAC,iBAAD,EAAoB,iBAApB,CA7CkB,EA8ClB,CAAC,iBAAD,EAAoB,iBAApB,CA9CkB,EA+ClB,CAAC,iBAAD,EAAoB,iBAApB,CA/CkB,EAgDlB,CAAC,iBAAD,EAAoB,iBAApB,CAhDkB,EAiDlB,CAAC,iBAAD,EAAoB,iBAApB,CAjDkB,EAkDlB,CAAC,iBAAD,EAAoB,iBAApB,CAlDkB,EAmDlB,CAAC,iBAAD,EAAoB,iBAApB,CAnDkB,EAoDlB,CAAC,iBAAD,EAAoB,iBAApB,CApDkB,EAqDlB,CAAC,iBAAD,EAAoB,iBAApB,CArDkB,EAsDlB,CAAC,iBAAD,EAAoB,iBAApB,CAtDkB,EAuDlB,CAAC,iBAAD,EAAoB,iBAApB,CAvDkB,EAwDlB,CAAC,iBAAD,EAAoB,iBAApB,CAxDkB,EAyDlB,CAAC,iBAAD,EAAoB,iBAApB,CAzDkB,EA0DlB,CAAC,iBAAD,EAAoB,iBAApB,CA1DkB,EA2DlB,CAAC,iBAAD,EAAoB,iBAApB,CA3DkB,EA4DlB,CAAC,iBAAD,EAAoB,iBAApB,CA5DkB,EA6DlB,CAAC,iBAAD,EAAoB,iBAApB,CA7DkB,EA8DlB,CAAC,iBAAD,EAAoB,iBAApB,CA9DkB,EA+DlB,CAAC,iBAAD,EAAoB,iBAApB,CA/DkB,EAgElB,CAAC,iBAAD,EAAoB,iBAApB,CAhEkB,EAiElB,CAAC,iBAAD,EAAoB,iBAApB,CAjEkB,EAkElB,CAAC,iBAAD,EAAoB,iBAApB,CAlEkB,EAmElB,CAAC,iBAAD,EAAoB,iBAApB,CAnEkB,EAoElB,CAAC,iBAAD,EAAoB,iBAApB,CApEkB,EAqElB,CAAC,iBAAD,EAAoB,iBAApB,CArEkB,EAsElB,CAAC,iBAAD,EAAoB,iBAApB,CAtEkB,EAuElB,CAAC,iBAAD,EAAoB,iBAApB,CAvEkB,EAwElB,CAAC,iBAAD,EAAoB,iBAApB,CAxEkB,EAyElB,CAAC,iBAAD,EAAoB,iBAApB,CAzEkB,EA0ElB,CAAC,iBAAD,EAAoB,iBAApB,CA1EkB,EA2ElB,CAAC,iBAAD,EAAoB,iBAApB,CA3EkB,EA4ElB,CAAC,iBAAD,EAAoB,iBAApB,CA5EkB,EA6ElB,CAAC,iBAAD,EAAoB,iBAApB,CA7EkB,EA8ElB,CAAC,iBAAD,EAAoB,iBAApB,CA9EkB,EA+ElB,CAAC,iBAAD,EAAoB,iBAApB,CA/EkB,EAgFlB,CAAC,iBAAD,EAAoB,iBAApB,CAhFkB,EAiFlB,CAAC,iBAAD,EAAoB,iBAApB,CAjFkB,EAkFlB,CAAC,iBAAD,EAAoB,iBAApB,CAlFkB,EAmFlB,CAAC,iBAAD,EAAoB,iBAApB,CAnFkB,EAoFlB,CAAC,iBAAD,EAAoB,iBAApB,CApFkB,EAqFlB,CAAC,iBAAD,EAAoB,iBAApB,CArFkB,EAsFlB,CAAC,iBAAD,EAAoB,iBAApB,CAtFkB,EAuFlB,CAAC,iBAAD,EAAoB,iBAApB,CAvFkB,EAwFlB,CAAC,iBAAD,EAAoB,iBAApB,CAxFkB,EAyFlB,CAAC,iBAAD,EAAoB,iBAApB,CAzFkB,EA0FlB,CAAC,iBAAD,EAAoB,iBAApB,CA1FkB,EA2FlB,CAAC,iBAAD,EAAoB,iBAApB,CA3FkB,EA4FlB,CAAC,iBAAD,EAAoB,iBAApB,CA5FkB,EA6FlB,CAAC,iBAAD,EAAoB,iBAApB,CA7FkB,EA8FlB,CAAC,iBAAD,EAAoB,iBAApB,CA9FkB,EA+FlB,CAAC,iBAAD,EAAoB,iBAApB,CA/FkB,EAgGlB,CAAC,iBAAD,EAAoB,iBAApB,CAhGkB,EAiGlB,CAAC,iBAAD,EAAoB,iBAApB,CAjGkB,EAkGlB,CAAC,iBAAD,EAAoB,iBAApB,CAlGkB,EAmGlB,CAAC,iBAAD,EAAoB,iBAApB,CAnGkB,EAoGlB,CAAC,iBAAD,EAAoB,iBAApB,CApGkB,EAqGlB,CAAC,iBAAD,EAAoB,iBAApB,CArGkB,EAsGlB,CAAC,iBAAD,EAAoB,iBAApB,CAtGkB,EAuGlB,CAAC,iBAAD,EAAoB,iBAApB,CAvGkB,EAwGlB,CAAC,iBAAD,EAAoB,iBAApB,CAxGkB,EAyGlB,CAAC,iBAAD,EAAoB,iBAApB,CAzGkB,EA0GlB,CAAC,iBAAD,EAAoB,iBAApB,CA1GkB,EA2GlB,CAAC,iBAAD,EAAoB,iBAApB,CA3GkB,EA4GlB,CAAC,iBAAD,EAAoB,iBAApB,CA5GkB,EA6GlB,CAAC,iBAAD,EAAoB,iBAApB,CA7GkB,EA8GlB,CAAC,iBAAD,EAAoB,iBAApB,CA9GkB,EA+GlB,CAAC,iBAAD,EAAoB,iBAApB,CA/GkB,EAgHlB,CAAC,iBAAD,EAAoB,iBAApB,CAhHkB,EAiHlB,CAAC,iBAAD,EAAoB,iBAApB,CAjHkB,EAkHlB,CAAC,iBAAD,EAAoB,iBAApB,CAlHkB,EAmHlB,CAAC,iBAAD,EAAoB,iBAApB,CAnHkB,EAoHlB,CAAC,iBAAD,EAAoB,iBAApB,CApHkB,EAqHlB,CAAC,iBAAD,EAAoB,iBAApB,CArHkB,EAsHlB,CAAC,iBAAD,EAAoB,iBAApB,CAtHkB,EAuHlB,CAAC,iBAAD,EAAoB,iBAApB,CAvHkB,EAwHlB,CAAC,iBAAD,EAAoB,iBAApB,CAxHkB,EAyHlB,CAAC,iBAAD,EAAoB,iBAApB,CAzHkB,EA0HlB,CAAC,iBAAD,EAAoB,iBAApB,CA1HkB,EA2HlB,CAAC,iBAAD,EAAoB,iBAApB,CA3HkB,EA4HlB,CAAC,iBAAD,EAAoB,iBAApB,CA5HkB,EA6HlB,CAAC,iBAAD,EAAoB,iBAApB,CA7HkB,EA8HlB,CAAC,iBAAD,EAAoB,iBAApB,CA9HkB,EA+HlB,CAAC,iBAAD,EAAoB,iBAApB,CA/HkB,EAgIlB,CAAC,iBAAD,EAAoB,iBAApB,CAhIkB,EAiIlB,CAAC,iBAAD,EAAoB,iBAApB,CAjIkB,EAkIlB,CAAC,iBAAD,EAAoB,iBAApB,CAlIkB,EAmIlB,CAAC,iBAAD,EAAoB,iBAApB,CAnIkB,EAoIlB,CAAC,iBAAD,EAAoB,iBAApB,CApIkB,EAqIlB,CAAC,iBAAD,EAAoB,iBAApB,CArIkB,EAsIlB,CAAC,iBAAD,EAAoB,iBAApB,CAtIkB,EAuIlB,CAAC,iBAAD,EAAoB,iBAApB,CAvIkB,EAwIlB,CAAC,iBAAD,EAAoB,iBAApB,CAxIkB,EAyIlB,CAAC,iBAAD,EAAoB,iBAApB,CAzIkB,EA0IlB,CAAC,iBAAD,EAAoB,iBAApB,CA1IkB,EA2IlB,CAAC,iBAAD,EAAoB,iBAApB,CA3IkB,EA4IlB,CAAC,iBAAD,EAAoB,iBAApB,CA5IkB,EA6IlB,CAAC,iBAAD,EAAoB,iBAApB,CA7IkB,EA8IlB,CAAC,iBAAD,EAAoB,iBAApB,CA9IkB,EA+IlB,CAAC,iBAAD,EAAoB,iBAApB,CA/IkB,EAgJlB,CAAC,iBAAD,EAAoB,iBAApB,CAhJkB,EAiJlB,CAAC,iBAAD,EAAoB,iBAApB,CAjJkB,EAkJlB,CAAC,iBAAD,EAAoB,iBAApB,CAlJkB,EAmJlB,CAAC,iBAAD,EAAoB,iBAApB,CAnJkB,EAoJlB,CAAC,iBAAD,EAAoB,iBAApB,CApJkB,EAqJlB,CAAC,iBAAD,EAAoB,iBAApB,CArJkB,EAsJlB,CAAC,iBAAD,EAAoB,iBAApB,CAtJkB,EAuJlB,CAAC,iBAAD,EAAoB,iBAApB,CAvJkB,EAwJlB,CAAC,iBAAD,EAAoB,iBAApB,CAxJkB,EAyJlB,CAAC,iBAAD,EAAoB,iBAApB,CAzJkB,EA0JlB,CAAC,iBAAD,EAAoB,iBAApB,CA1JkB,EA2JlB,CAAC,iBAAD,EAAoB,iBAApB,CA3JkB,EA4JlB,CAAC,iBAAD,EAAoB,iBAApB,CA5JkB,EA6JlB,CAAC,iBAAD,EAAoB,iBAApB,CA7JkB,EA8JlB,CAAC,iBAAD,EAAoB,iBAApB,CA9JkB,EA+JlB,CAAC,iBAAD,EAAoB,iBAApB,CA/JkB,EAgKlB,CAAC,iBAAD,EAAoB,iBAApB,CAhKkB,EAiKlB,CAAC,iBAAD,EAAoB,iBAApB,CAjKkB,EAkKlB,CAAC,iBAAD,EAAoB,iBAApB,CAlKkB,EAmKlB,CAAC,iBAAD,EAAoB,iBAApB,CAnKkB,EAoKlB,CAAC,iBAAD,EAAoB,iBAApB,CApKkB,EAqKlB,CAAC,iBAAD,EAAoB,iBAApB,CArKkB,EAsKlB,CAAC,iBAAD,EAAoB,iBAApB,CAtKkB,EAuKlB,CAAC,iBAAD,EAAoB,iBAApB,CAvKkB,EAwKlB,CAAC,iBAAD,EAAoB,iBAApB,CAxKkB,EAyKlB,CAAC,iBAAD,EAAoB,iBAApB,CAzKkB,EA0KlB,CAAC,iBAAD,EAAoB,iBAApB,CA1KkB,EA2KlB,CAAC,iBAAD,EAAoB,iBAApB,CA3KkB,EA4KlB,CAAC,iBAAD,EAAoB,iBAApB,CA5KkB,EA6KlB,CAAC,iBAAD,EAAoB,iBAApB,CA7KkB,EA8KlB,CAAC,iBAAD,EAAoB,iBAApB,CA9KkB,EA+KlB,CAAC,iBAAD,EAAoB,iBAApB,CA/KkB,EAgLlB,CAAC,iBAAD,EAAoB,iBAApB,CAhLkB,EAiLlB,CAAC,iBAAD,EAAoB,iBAApB,CAjLkB,EAkLlB,CAAC,iBAAD,EAAoB,iBAApB,CAlLkB,EAmLlB,CAAC,iBAAD,EAAoB,iBAApB,CAnLkB,EAoLlB,CAAC,iBAAD,EAAoB,iBAApB,CApLkB,EAqLlB,CAAC,iBAAD,EAAoB,iBAApB,CArLkB,EAsLlB,CAAC,iBAAD,EAAoB,iBAApB,CAtLkB,EAuLlB,CAAC,iBAAD,EAAoB,iBAApB,CAvLkB,EAwLlB,CAAC,iBAAD,EAAoB,iBAApB,CAxLkB,EAyLlB,CAAC,iBAAD,EAAoB,iBAApB,CAzLkB,EA0LlB,CAAC,iBAAD,EAAoB,iBAApB,CA1LkB,EA2LlB,CAAC,iBAAD,EAAoB,iBAApB,CA3LkB,EA4LlB,CAAC,iBAAD,EAAoB,iBAApB,CA5LkB,EA6LlB,CAAC,iBAAD,EAAoB,iBAApB,CA7LkB,EA8LlB,CAAC,iBAAD,EAAoB,iBAApB,CA9LkB,EA+LlB,CAAC,iBAAD,EAAoB,iBAApB,CA/LkB,EAgMlB,CAAC,iBAAD,EAAoB,iBAApB,CAhMkB,EAiMlB,CAAC,iBAAD,EAAoB,iBAApB,CAjMkB,EAkMlB,CAAC,iBAAD,EAAoB,iBAApB,CAlMkB,EAmMlB,CAAC,iBAAD,EAAoB,iBAApB,CAnMkB,EAoMlB,CAAC,iBAAD,EAAoB,iBAApB,CApMkB,EAqMlB,CAAC,iBAAD,EAAoB,iBAApB,CArMkB,EAsMlB,CAAC,iBAAD,EAAoB,iBAApB,CAtMkB,EAuMlB,CAAC,iBAAD,EAAoB,iBAApB,CAvMkB,EAwMlB,CAAC,iBAAD,EAAoB,iBAApB,CAxMkB,EAyMlB,CAAC,iBAAD,EAAoB,iBAApB,CAzMkB,EA0MlB,CAAC,iBAAD,EAAoB,iBAApB,CA1MkB,EA2MlB,CAAC,iBAAD,EAAoB,iBAApB,CA3MkB,EA4MlB,CAAC,iBAAD,EAAoB,iBAApB,CA5MkB,EA6MlB,CAAC,iBAAD,EAAoB,iBAApB,CA7MkB,EA8MlB,CAAC,iBAAD,EAAoB,iBAApB,CA9MkB,EA+MlB,CAAC,iBAAD,EAAoB,iBAApB,CA/MkB,EAgNlB,CAAC,iBAAD,EAAoB,iBAApB,CAhNkB,EAiNlB,CAAC,iBAAD,EAAoB,iBAApB,CAjNkB,EAkNlB,CAAC,iBAAD,EAAoB,iBAApB,CAlNkB,EAmNlB,CAAC,iBAAD,EAAoB,iBAApB,CAnNkB,EAoNlB,CAAC,iBAAD,EAAoB,iBAApB,CApNkB,EAqNlB,CAAC,iBAAD,EAAoB,iBAApB,CArNkB,EAsNlB,CAAC,iBAAD,EAAoB,iBAApB,CAtNkB,EAuNlB,CAAC,iBAAD,EAAoB,iBAApB,CAvNkB,EAwNlB,CAAC,iBAAD,EAAoB,iBAApB,CAxNkB,EAyNlB,CAAC,iBAAD,EAAoB,iBAApB,CAzNkB,EA0NlB,CAAC,iBAAD,EAAoB,iBAApB,CA1NkB,EA2NlB,CAAC,iBAAD,EAAoB,iBAApB,CA3NkB,EA4NlB,CAAC,iBAAD,EAAoB,iBAApB,CA5NkB,EA6NlB,CAAC,iBAAD,EAAoB,iBAApB,CA7NkB,EA8NlB,CAAC,iBAAD,EAAoB,iBAApB,CA9NkB,EA+NlB,CAAC,iBAAD,EAAoB,iBAApB,CA/NkB,EAgOlB,CAAC,iBAAD,EAAoB,iBAApB,CAhOkB,EAiOlB,CAAC,iBAAD,EAAoB,iBAApB,CAjOkB,EAkOlB,CAAC,iBAAD,EAAoB,iBAApB,CAlOkB,EAmOlB,CAAC,iBAAD,EAAoB,iBAApB,CAnOkB,EAoOlB,CAAC,iBAAD,EAAoB,iBAApB,CApOkB,EAqOlB,CAAC,iBAAD,EAAoB,iBAApB,CArOkB,EAsOlB,CAAC,iBAAD,EAAoB,iBAApB,CAtOkB,EAuOlB,CAAC,iBAAD,EAAoB,iBAApB,CAvOkB,EAwOlB,CAAC,iBAAD,EAAoB,iBAApB,CAxOkB,EAyOlB,CAAC,iBAAD,EAAoB,iBAApB,CAzOkB,EA0OlB,CAAC,iBAAD,EAAoB,iBAApB,CA1OkB,EA2OlB,CAAC,iBAAD,EAAoB,iBAApB,CA3OkB,EA4OlB,CAAC,iBAAD,EAAoB,iBAApB,CA5OkB,EA6OlB,CAAC,iBAAD,EAAoB,iBAApB,CA7OkB,EA8OlB,CAAC,iBAAD,EAAoB,iBAApB,CA9OkB,EA+OlB,CAAC,iBAAD,EAAoB,iBAApB,CA/OkB,EAgPlB,CAAC,iBAAD,EAAoB,iBAApB,CAhPkB,EAiPlB,CAAC,iBAAD,EAAoB,iBAApB,CAjPkB,EAkPlB,CAAC,iBAAD,EAAoB,iBAApB,CAlPkB,EAmPlB,CAAC,iBAAD,EAAoB,iBAApB,CAnPkB,EAoPlB,CAAC,iBAAD,EAAoB,iBAApB,CApPkB,EAqPlB,CAAC,iBAAD,EAAoB,iBAApB,CArPkB,EAsPlB,CAAC,iBAAD,EAAoB,iBAApB,CAtPkB,EAuPlB,CAAC,iBAAD,EAAoB,iBAApB,CAvPkB,EAwPlB,CAAC,iBAAD,EAAoB,iBAApB,CAxPkB,EAyPlB,CAAC,iBAAD,EAAoB,iBAApB,CAzPkB,EA0PlB,CAAC,iBAAD,EAAoB,iBAApB,CA1PkB,EA2PlB,CAAC,iBAAD,EAAoB,iBAApB,CA3PkB,EA4PlB,CAAC,iBAAD,EAAoB,iBAApB,CA5PkB,EA6PlB,CAAC,iBAAD,EAAoB,iBAApB,CA7PkB,EA8PlB,CAAC,iBAAD,EAAoB,iBAApB,CA9PkB,EA+PlB,CAAC,iBAAD,EAAoB,iBAApB,CA/PkB,EAgQlB,CAAC,iBAAD,EAAoB,iBAApB,CAhQkB,EAiQlB,CAAC,iBAAD,EAAoB,iBAApB,CAjQkB,EAkQlB,CAAC,iBAAD,EAAoB,iBAApB,CAlQkB,EAmQlB,CAAC,iBAAD,EAAoB,iBAApB,CAnQkB,EAoQlB,CAAC,iBAAD,EAAoB,iBAApB,CApQkB,EAqQlB,CAAC,iBAAD,EAAoB,iBAApB,CArQkB,EAsQlB,CAAC,iBAAD,EAAoB,iBAApB,CAtQkB,EAuQlB,CAAC,iBAAD,EAAoB,iBAApB,CAvQkB,EAwQlB,CAAC,iBAAD,EAAoB,iBAApB,CAxQkB,EAyQlB,CAAC,iBAAD,EAAoB,iBAApB,CAzQkB,EA0QlB,CAAC,iBAAD,EAAoB,iBAApB,CA1QkB,EA2QlB,CAAC,iBAAD,EAAoB,iBAApB,CA3QkB,EA4QlB,CAAC,iBAAD,EAAoB,iBAApB,CA5QkB,EA6QlB,CAAC,iBAAD,EAAoB,iBAApB,CA7QkB,EA8QlB,CAAC,iBAAD,EAAoB,iBAApB,CA9QkB,EA+QlB,CAAC,iBAAD,EAAoB,iBAApB,CA/QkB,EAgRlB,CAAC,iBAAD,EAAoB,iBAApB,CAhRkB,EAiRlB,CAAC,iBAAD,EAAoB,iBAApB,CAjRkB,EAkRlB,CAAC,iBAAD,EAAoB,iBAApB,CAlRkB,EAmRlB,CAAC,iBAAD,EAAoB,iBAApB,CAnRkB,EAoRlB,CAAC,iBAAD,EAAoB,iBAApB,CApRkB,EAqRlB,CAAC,iBAAD,EAAoB,iBAApB,CArRkB,EAsRlB,CAAC,iBAAD,EAAoB,iBAApB,CAtRkB,EAuRlB,CAAC,iBAAD,EAAoB,iBAApB,CAvRkB,EAwRlB,CAAC,iBAAD,EAAoB,iBAApB,CAxRkB,EAyRlB,CAAC,iBAAD,EAAoB,iBAApB,CAzRkB,EA0RlB,CAAC,iBAAD,EAAoB,iBAApB,CA1RkB,EA2RlB,CAAC,iBAAD,EAAoB,iBAApB,CA3RkB,EA4RlB,CAAC,iBAAD,EAAoB,iBAApB,CA5RkB,EA6RlB,CAAC,iBAAD,EAAoB,iBAApB,CA7RkB,EA8RlB,CAAC,iBAAD,EAAoB,iBAApB,CA9RkB,EA+RlB,CAAC,iBAAD,EAAoB,iBAApB,CA/RkB,EAgSlB,CAAC,iBAAD,EAAoB,iBAApB,CAhSkB,EAiSlB,CAAC,iBAAD,EAAoB,iBAApB,CAjSkB,EAkSlB,CAAC,iBAAD,EAAoB,iBAApB,CAlSkB,EAmSlB,CAAC,iBAAD,EAAoB,iBAApB,CAnSkB,EAoSlB,CAAC,iBAAD,EAAoB,iBAApB,CApSkB,EAqSlB,CAAC,iBAAD,EAAoB,iBAApB,CArSkB,EAsSlB,CAAC,iBAAD,EAAoB,iBAApB,CAtSkB,EAuSlB,CAAC,iBAAD,EAAoB,iBAApB,CAvSkB,EAwSlB,CAAC,iBAAD,EAAoB,iBAApB,CAxSkB,EAySlB,CAAC,iBAAD,EAAoB,iBAApB,CAzSkB,EA0SlB,CAAC,iBAAD,EAAoB,iBAApB,CA1SkB,EA2SlB,CAAC,iBAAD,EAAoB,iBAApB,CA3SkB,EA4SlB,CAAC,iBAAD,EAAoB,iBAApB,CA5SkB,EA6SlB,CAAC,iBAAD,EAAoB,iBAApB,CA7SkB,EA8SlB,CAAC,iBAAD,EAAoB,iBAApB,CA9SkB,EA+SlB,CAAC,iBAAD,EAAoB,iBAApB,CA/SkB,EAgTlB,CAAC,iBAAD,EAAoB,iBAApB,CAhTkB,EAiTlB,CAAC,iBAAD,EAAoB,iBAApB,CAjTkB,EAkTlB,CAAC,iBAAD,EAAoB,iBAApB,CAlTkB,EAmTlB,CAAC,iBAAD,EAAoB,iBAApB,CAnTkB,EAoTlB,CAAC,iBAAD,EAAoB,iBAApB,CApTkB,EAqTlB,CAAC,iBAAD,EAAoB,iBAApB,CArTkB,EAsTlB,CAAC,iBAAD,EAAoB,iBAApB,CAtTkB,EAuTlB,CAAC,iBAAD,EAAoB,iBAApB,CAvTkB,EAwTlB,CAAC,iBAAD,EAAoB,iBAApB,CAxTkB,EAyTlB,CAAC,iBAAD,EAAoB,iBAApB,CAzTkB,EA0TlB,CAAC,iBAAD,EAAoB,iBAApB,CA1TkB,EA2TlB,CAAC,iBAAD,EAAoB,iBAApB,CA3TkB,EA4TlB,CAAC,iBAAD,EAAoB,iBAApB,CA5TkB,EA6TlB,CAAC,iBAAD,EAAoB,iBAApB,CA7TkB,EA8TlB,CAAC,iBAAD,EAAoB,iBAApB,CA9TkB,EA+TlB,CAAC,iBAAD,EAAoB,iBAApB,CA/TkB,EAgUlB,CAAC,iBAAD,EAAoB,iBAApB,CAhUkB,EAiUlB,CAAC,iBAAD,EAAoB,iBAApB,CAjUkB,EAkUlB,CAAC,iBAAD,EAAoB,iBAApB,CAlUkB,EAmUlB,CAAC,iBAAD,EAAoB,iBAApB,CAnUkB,EAoUlB,CAAC,iBAAD,EAAoB,iBAApB,CApUkB,EAqUlB,CAAC,iBAAD,EAAoB,iBAApB,CArUkB,EAsUlB,CAAC,iBAAD,EAAoB,iBAApB,CAtUkB,EAuUlB,CAAC,iBAAD,EAAoB,iBAApB,CAvUkB,EAwUlB,CAAC,iBAAD,EAAoB,iBAApB,CAxUkB,EAyUlB,CAAC,iBAAD,EAAoB,iBAApB,CAzUkB,EA0UlB,CAAC,iBAAD,EAAoB,iBAApB,CA1UkB,EA2UlB,CAAC,iBAAD,EAAoB,iBAApB,CA3UkB,EA4UlB,CAAC,iBAAD,EAAoB,iBAApB,CA5UkB,EA6UlB,CAAC,iBAAD,EAAoB,iBAApB,CA7UkB,EA8UlB,CAAC,iBAAD,EAAoB,iBAApB,CA9UkB,EA+UlB,CAAC,iBAAD,EAAoB,iBAApB,CA/UkB,EAgVlB,CAAC,iBAAD,EAAoB,iBAApB,CAhVkB,EAiVlB,CAAC,iBAAD,EAAoB,iBAApB,CAjVkB,EAkVlB,CAAC,iBAAD,EAAoB,iBAApB,CAlVkB,EAmVlB,CAAC,iBAAD,EAAoB,iBAApB,CAnVkB,EAoVlB,CAAC,iBAAD,EAAoB,iBAApB,CApVkB,EAqVlB,CAAC,iBAAD,EAAoB,iBAApB,CArVkB,EAsVlB,CAAC,iBAAD,EAAoB,iBAApB,CAtVkB,EAuVlB,CAAC,iBAAD,EAAoB,iBAApB,CAvVkB,EAwVlB,CAAC,iBAAD,EAAoB,iBAApB,CAxVkB,EAyVlB,CAAC,iBAAD,EAAoB,iBAApB,CAzVkB,EA0VlB,CAAC,iBAAD,EAAoB,iBAApB,CA1VkB,EA2VlB,CAAC,iBAAD,EAAoB,iBAApB,CA3VkB,EA4VlB,CAAC,iBAAD,EAAoB,iBAApB,CA5VkB,EA6VlB,CAAC,iBAAD,EAAoB,iBAApB,CA7VkB,EA8VlB,CAAC,iBAAD,EAAoB,iBAApB,CA9VkB,EA+VlB,CAAC,iBAAD,EAAoB,iBAApB,CA/VkB,EAgWlB,CAAC,iBAAD,EAAoB,iBAApB,CAhWkB,EAiWlB,CAAC,iBAAD,EAAoB,iBAApB,CAjWkB,EAkWlB,CAAC,iBAAD,EAAoB,iBAApB,CAlWkB,EAmWlB,CAAC,iBAAD,EAAoB,iBAApB,CAnWkB,EAoWlB,CAAC,iBAAD,EAAoB,iBAApB,CApWkB,EAqWlB,CAAC,iBAAD,EAAoB,iBAApB,CArWkB,EAsWlB,CAAC,iBAAD,EAAoB,iBAApB,CAtWkB,EAuWlB,CAAC,iBAAD,EAAoB,iBAApB,CAvWkB,EAwWlB,CAAC,iBAAD,EAAoB,iBAApB,CAxWkB,EAyWlB,CAAC,iBAAD,EAAoB,iBAApB,CAzWkB,EA0WlB,CAAC,iBAAD,EAAoB,iBAApB,CA1WkB,EA2WlB,CAAC,iBAAD,EAAoB,iBAApB,CA3WkB,EA4WlB,CAAC,iBAAD,EAAoB,iBAApB,CA5WkB,EA6WlB,CAAC,iBAAD,EAAoB,iBAApB,CA7WkB,EA8WlB,CAAC,iBAAD,EAAoB,iBAApB,CA9WkB,EA+WlB,CAAC,iBAAD,EAAoB,iBAApB,CA/WkB,EAgXlB,CAAC,iBAAD,EAAoB,iBAApB,CAhXkB,EAiXlB,CAAC,iBAAD,EAAoB,iBAApB,CAjXkB,EAkXlB,CAAC,iBAAD,EAAoB,iBAApB,CAlXkB,EAmXlB,CAAC,iBAAD,EAAoB,iBAApB,CAnXkB,EAoXlB,CAAC,iBAAD,EAAoB,iBAApB,CApXkB,EAqXlB,CAAC,iBAAD,EAAoB,iBAApB,CArXkB,EAsXlB,CAAC,iBAAD,EAAoB,iBAApB,CAtXkB,EAuXlB,CAAC,iBAAD,EAAoB,iBAApB,CAvXkB,EAwXlB,CAAC,iBAAD,EAAoB,iBAApB,CAxXkB,EAyXlB,CAAC,iBAAD,EAAoB,iBAApB,CAzXkB,EA0XlB,CAAC,iBAAD,EAAoB,iBAApB,CA1XkB,EA2XlB,CAAC,iBAAD,EAAoB,iBAApB,CA3XkB,EA4XlB,CAAC,iBAAD,EAAoB,iBAApB,CA5XkB,EA6XlB,CAAC,iBAAD,EAAoB,iBAApB,CA7XkB,EA8XlB,CAAC,iBAAD,EAAoB,iBAApB,CA9XkB,EA+XlB,CAAC,iBAAD,EAAoB,iBAApB,CA/XkB,EAgYlB,CAAC,iBAAD,EAAoB,iBAApB,CAhYkB,EAiYlB,CAAC,iBAAD,EAAoB,iBAApB,CAjYkB,EAkYlB,CAAC,iBAAD,EAAoB,iBAApB,CAlYkB,EAmYlB,CAAC,iBAAD,EAAoB,iBAApB,CAnYkB,EAoYlB,CAAC,iBAAD,EAAoB,iBAApB,CApYkB,EAqYlB,CAAC,iBAAD,EAAoB,iBAApB,CArYkB,EAsYlB,CAAC,iBAAD,EAAoB,iBAApB,CAtYkB,EAuYlB,CAAC,iBAAD,EAAoB,iBAApB,CAvYkB,EAwYlB,CAAC,iBAAD,EAAoB,iBAApB,CAxYkB,EAyYlB,CAAC,iBAAD,EAAoB,iBAApB,CAzYkB,EA0YlB,CAAC,iBAAD,EAAoB,iBAApB,CA1YkB,EA2YlB,CAAC,iBAAD,EAAoB,iBAApB,CA3YkB,EA4YlB,CAAC,iBAAD,EAAoB,iBAApB,CA5YkB,EA6YlB,CAAC,iBAAD,EAAoB,iBAApB,CA7YkB,EA8YlB,CAAC,iBAAD,EAAoB,iBAApB,CA9YkB,EA+YlB,CAAC,iBAAD,EAAoB,iBAApB,CA/YkB,EAgZlB,CAAC,iBAAD,EAAoB,iBAApB,CAhZkB,EAiZlB,CAAC,iBAAD,EAAoB,iBAApB,CAjZkB,EAkZlB,CAAC,iBAAD,EAAoB,iBAApB,CAlZkB,EAmZlB,CAAC,iBAAD,EAAoB,iBAApB,CAnZkB,EAoZlB,CAAC,iBAAD,EAAoB,iBAApB,CApZkB,EAqZlB,CAAC,iBAAD,EAAoB,iBAApB,CArZkB,EAsZlB,CAAC,iBAAD,EAAoB,iBAApB,CAtZkB,EAuZlB,CAAC,iBAAD,EAAoB,iBAApB,CAvZkB,EAwZlB,CAAC,iBAAD,EAAoB,iBAApB,CAxZkB,EAyZlB,CAAC,iBAAD,EAAoB,iBAApB,CAzZkB,EA0ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA1ZkB,EA2ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA3ZkB,EA4ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA5ZkB,EA6ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA7ZkB,EA8ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA9ZkB,EA+ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA/ZkB,EAgalB,CAAC,iBAAD,EAAoB,iBAApB,CAhakB,EAialB,CAAC,iBAAD,EAAoB,iBAApB,CAjakB,EAkalB,CAAC,iBAAD,EAAoB,iBAApB,CAlakB,EAmalB,CAAC,iBAAD,EAAoB,iBAApB,CAnakB,EAoalB,CAAC,iBAAD,EAAoB,iBAApB,CApakB,EAqalB,CAAC,iBAAD,EAAoB,iBAApB,CArakB,EAsalB,CAAC,iBAAD,EAAoB,iBAApB,CAtakB,EAualB,CAAC,iBAAD,EAAoB,iBAApB,CAvakB,EAwalB,CAAC,iBAAD,EAAoB,iBAApB,CAxakB,EAyalB,CAAC,iBAAD,EAAoB,iBAApB,CAzakB,EA0alB,CAAC,iBAAD,EAAoB,iBAApB,CA1akB,EA2alB,CAAC,iBAAD,EAAoB,iBAApB,CA3akB,EA4alB,CAAC,iBAAD,EAAoB,iBAApB,CA5akB,EA6alB,CAAC,iBAAD,EAAoB,iBAApB,CA7akB,EA8alB,CAAC,iBAAD,EAAoB,iBAApB,CA9akB,EA+alB,CAAC,iBAAD,EAAoB,iBAApB,CA/akB,EAgblB,CAAC,iBAAD,EAAoB,iBAApB,CAhbkB,EAiblB,CAAC,iBAAD,EAAoB,iBAApB,CAjbkB,EAkblB,CAAC,iBAAD,EAAoB,iBAApB,CAlbkB,EAmblB,CAAC,iBAAD,EAAoB,iBAApB,CAnbkB,EAoblB,CAAC,iBAAD,EAAoB,iBAApB,CApbkB,EAqblB,CAAC,iBAAD,EAAoB,iBAApB,CArbkB,EAsblB,CAAC,iBAAD,EAAoB,iBAApB,CAtbkB,EAublB,CAAC,iBAAD,EAAoB,iBAApB,CAvbkB,EAwblB,CAAC,iBAAD,EAAoB,iBAApB,CAxbkB,EAyblB,CAAC,iBAAD,EAAoB,iBAApB,CAzbkB,EA0blB,CAAC,iBAAD,EAAoB,iBAApB,CA1bkB,EA2blB,CAAC,iBAAD,EAAoB,iBAApB,CA3bkB,EA4blB,CAAC,iBAAD,EAAoB,iBAApB,CA5bkB,EA6blB,CAAC,iBAAD,EAAoB,iBAApB,CA7bkB,EA8blB,CAAC,iBAAD,EAAoB,iBAApB,CA9bkB,EA+blB,CAAC,iBAAD,EAAoB,iBAApB,CA/bkB,EAgclB,CAAC,iBAAD,EAAoB,iBAApB,CAhckB,EAiclB,CAAC,iBAAD,EAAoB,iBAApB,CAjckB,EAkclB,CAAC,iBAAD,EAAoB,iBAApB,CAlckB,EAmclB,CAAC,iBAAD,EAAoB,iBAApB,CAnckB,EAoclB,CAAC,iBAAD,EAAoB,iBAApB,CApckB,EAqclB,CAAC,iBAAD,EAAoB,iBAApB,CArckB,EAsclB,CAAC,iBAAD,EAAoB,iBAApB,CAtckB,EAuclB,CAAC,iBAAD,EAAoB,iBAApB,CAvckB,EAwclB,CAAC,iBAAD,EAAoB,iBAApB,CAxckB,EAyclB,CAAC,iBAAD,EAAoB,iBAApB,CAzckB,EA0clB,CAAC,iBAAD,EAAoB,iBAApB,CA1ckB,EA2clB,CAAC,iBAAD,EAAoB,iBAApB,CA3ckB,EA4clB,CAAC,iBAAD,EAAoB,iBAApB,CA5ckB,EA6clB,CAAC,iBAAD,EAAoB,iBAApB,CA7ckB,EA8clB,CAAC,iBAAD,EAAoB,iBAApB,CA9ckB,EA+clB,CAAC,iBAAD,EAAoB,iBAApB,CA/ckB,EAgdlB,CAAC,iBAAD,EAAoB,iBAApB,CAhdkB,EAidlB,CAAC,iBAAD,EAAoB,iBAApB,CAjdkB,EAkdlB,CAAC,iBAAD,EAAoB,iBAApB,CAldkB,EAmdlB,CAAC,iBAAD,EAAoB,iBAApB,CAndkB,EAodlB,CAAC,iBAAD,EAAoB,iBAApB,CApdkB,EAqdlB,CAAC,iBAAD,EAAoB,iBAApB,CArdkB,EAsdlB,CAAC,iBAAD,EAAoB,iBAApB,CAtdkB,EAudlB,CAAC,iBAAD,EAAoB,iBAApB,CAvdkB,EAwdlB,CAAC,iBAAD,EAAoB,iBAApB,CAxdkB,EAydlB,CAAC,iBAAD,EAAoB,iBAApB,CAzdkB,EA0dlB,CAAC,iBAAD,EAAoB,iBAApB,CA1dkB,EA2dlB,CAAC,iBAAD,EAAoB,iBAApB,CA3dkB,EA4dlB,CAAC,iBAAD,EAAoB,iBAApB,CA5dkB,EA6dlB,CAAC,iBAAD,EAAoB,iBAApB,CA7dkB,EA8dlB,CAAC,iBAAD,EAAoB,iBAApB,CA9dkB,EA+dlB,CAAC,iBAAD,EAAoB,iBAApB,CA/dkB,EAgelB,CAAC,iBAAD,EAAoB,iBAApB,CAhekB,EAielB,CAAC,iBAAD,EAAoB,iBAApB,CAjekB,EAkelB,CAAC,iBAAD,EAAoB,iBAApB,CAlekB,EAmelB,CAAC,iBAAD,EAAoB,iBAApB,CAnekB,EAoelB,CAAC,iBAAD,EAAoB,iBAApB,CApekB,EAqelB,CAAC,iBAAD,EAAoB,iBAApB,CArekB,EAselB,CAAC,iBAAD,EAAoB,iBAApB,CAtekB,EAuelB,CAAC,iBAAD,EAAoB,iBAApB,CAvekB,EAwelB,CAAC,iBAAD,EAAoB,iBAApB,CAxekB,EAyelB,CAAC,iBAAD,EAAoB,iBAApB,CAzekB,EA0elB,CAAC,iBAAD,EAAoB,iBAApB,CA1ekB,EA2elB,CAAC,iBAAD,EAAoB,iBAApB,CA3ekB,EA4elB,CAAC,iBAAD,EAAoB,iBAApB,CA5ekB,EA6elB,CAAC,iBAAD,EAAoB,iBAApB,CA7ekB,EA8elB,CAAC,iBAAD,EAAoB,iBAApB,CA9ekB,EA+elB,CAAC,iBAAD,EAAoB,iBAApB,CA/ekB,EAgflB,CAAC,iBAAD,EAAoB,iBAApB,CAhfkB,EAiflB,CAAC,iBAAD,EAAoB,iBAApB,CAjfkB,EAkflB,CAAC,iBAAD,EAAoB,iBAApB,CAlfkB,EAmflB,CAAC,iBAAD,EAAoB,iBAApB,CAnfkB,EAoflB,CAAC,iBAAD,EAAoB,iBAApB,CApfkB,EAqflB,CAAC,iBAAD,EAAoB,iBAApB,CArfkB,EAsflB,CAAC,iBAAD,EAAoB,iBAApB,CAtfkB,EAuflB,CAAC,iBAAD,EAAoB,iBAApB,CAvfkB,EAwflB,CAAC,iBAAD,EAAoB,iBAApB,CAxfkB,EAyflB,CAAC,iBAAD,EAAoB,iBAApB,CAzfkB,EA0flB,CAAC,iBAAD,EAAoB,iBAApB,CA1fkB,EA2flB,CAAC,iBAAD,EAAoB,iBAApB,CA3fkB,EA4flB,CAAC,iBAAD,EAAoB,iBAApB,CA5fkB,EA6flB,CAAC,iBAAD,EAAoB,iBAApB,CA7fkB,EA8flB,CAAC,iBAAD,EAAoB,iBAApB,CA9fkB,EA+flB,CAAC,iBAAD,EAAoB,iBAApB,CA/fkB,EAggBlB,CAAC,iBAAD,EAAoB,iBAApB,CAhgBkB,CAAtB;;AAmgBA,YAAIC,iBAAiB,CACjB,CAAC,iBAAD,EAAoB,iBAApB,CADiB,EAEjB,CAAC,iBAAD,EAAoB,iBAApB,CAFiB,EAGjB,CAAC,iBAAD,EAAoB,iBAApB,CAHiB,EAIjB,CAAC,iBAAD,EAAoB,iBAApB,CAJiB,EAKjB,CAAC,iBAAD,EAAoB,iBAApB,CALiB,EAMjB,CAAC,iBAAD,EAAoB,iBAApB,CANiB,EAOjB,CAAC,iBAAD,EAAoB,iBAApB,CAPiB,EAQjB,CAAC,iBAAD,EAAoB,iBAApB,CARiB,EASjB,CAAC,iBAAD,EAAoB,iBAApB,CATiB,EAUjB,CAAC,iBAAD,EAAoB,iBAApB,CAViB,EAWjB,CAAC,iBAAD,EAAoB,iBAApB,CAXiB,EAYjB,CAAC,iBAAD,EAAoB,iBAApB,CAZiB,EAajB,CAAC,iBAAD,EAAoB,iBAApB,CAbiB,EAcjB,CAAC,iBAAD,EAAoB,iBAApB,CAdiB,EAejB,CAAC,iBAAD,EAAoB,iBAApB,CAfiB,EAgBjB,CAAC,iBAAD,EAAoB,iBAApB,CAhBiB,EAiBjB,CAAC,iBAAD,EAAoB,iBAApB,CAjBiB,EAkBjB,CAAC,iBAAD,EAAoB,iBAApB,CAlBiB,EAmBjB,CAAC,iBAAD,EAAoB,iBAApB,CAnBiB,EAoBjB,CAAC,iBAAD,EAAoB,iBAApB,CApBiB,EAqBjB,CAAC,iBAAD,EAAoB,iBAApB,CArBiB,EAsBjB,CAAC,iBAAD,EAAoB,iBAApB,CAtBiB,EAuBjB,CAAC,iBAAD,EAAoB,iBAApB,CAvBiB,EAwBjB,CAAC,iBAAD,EAAoB,iBAApB,CAxBiB,EAyBjB,CAAC,iBAAD,EAAoB,iBAApB,CAzBiB,EA0BjB,CAAC,iBAAD,EAAoB,iBAApB,CA1BiB,EA2BjB,CAAC,iBAAD,EAAoB,iBAApB,CA3BiB,EA4BjB,CAAC,iBAAD,EAAoB,iBAApB,CA5BiB,EA6BjB,CAAC,iBAAD,EAAoB,iBAApB,CA7BiB,EA8BjB,CAAC,iBAAD,EAAoB,iBAApB,CA9BiB,EA+BjB,CAAC,iBAAD,EAAoB,iBAApB,CA/BiB,EAgCjB,CAAC,iBAAD,EAAoB,iBAApB,CAhCiB,EAiCjB,CAAC,iBAAD,EAAoB,iBAApB,CAjCiB,EAkCjB,CAAC,iBAAD,EAAoB,iBAApB,CAlCiB,EAmCjB,CAAC,iBAAD,EAAoB,iBAApB,CAnCiB,EAoCjB,CAAC,iBAAD,EAAoB,iBAApB,CApCiB,EAqCjB,CAAC,iBAAD,EAAoB,iBAApB,CArCiB,EAsCjB,CAAC,iBAAD,EAAoB,iBAApB,CAtCiB,EAuCjB,CAAC,iBAAD,EAAoB,iBAApB,CAvCiB,EAwCjB,CAAC,iBAAD,EAAoB,iBAApB,CAxCiB,EAyCjB,CAAC,iBAAD,EAAoB,iBAApB,CAzCiB,EA0CjB,CAAC,iBAAD,EAAoB,iBAApB,CA1CiB,EA2CjB,CAAC,iBAAD,EAAoB,iBAApB,CA3CiB,EA4CjB,CAAC,iBAAD,EAAoB,iBAApB,CA5CiB,EA6CjB,CAAC,iBAAD,EAAoB,iBAApB,CA7CiB,EA8CjB,CAAC,iBAAD,EAAoB,iBAApB,CA9CiB,EA+CjB,CAAC,iBAAD,EAAoB,iBAApB,CA/CiB,EAgDjB,CAAC,iBAAD,EAAoB,iBAApB,CAhDiB,EAiDjB,CAAC,iBAAD,EAAoB,iBAApB,CAjDiB,EAkDjB,CAAC,iBAAD,EAAoB,iBAApB,CAlDiB,EAmDjB,CAAC,iBAAD,EAAoB,iBAApB,CAnDiB,EAoDjB,CAAC,iBAAD,EAAoB,iBAApB,CApDiB,EAqDjB,CAAC,iBAAD,EAAoB,iBAApB,CArDiB,EAsDjB,CAAC,iBAAD,EAAoB,iBAApB,CAtDiB,EAuDjB,CAAC,iBAAD,EAAoB,iBAApB,CAvDiB,EAwDjB,CAAC,iBAAD,EAAoB,iBAApB,CAxDiB,EAyDjB,CAAC,iBAAD,EAAoB,iBAApB,CAzDiB,EA0DjB,CAAC,iBAAD,EAAoB,iBAApB,CA1DiB,EA2DjB,CAAC,iBAAD,EAAoB,iBAApB,CA3DiB,EA4DjB,CAAC,iBAAD,EAAoB,iBAApB,CA5DiB,EA6DjB,CAAC,iBAAD,EAAoB,iBAApB,CA7DiB,EA8DjB,CAAC,iBAAD,EAAoB,iBAApB,CA9DiB,EA+DjB,CAAC,iBAAD,EAAoB,iBAApB,CA/DiB,EAgEjB,CAAC,iBAAD,EAAoB,iBAApB,CAhEiB,CAArB;;AAmEA,YAAIC,kBAAkB,CAClB,CAAC,iBAAD,EAAoB,iBAApB,CADkB,EAElB,CAAC,iBAAD,EAAoB,iBAApB,CAFkB,EAGlB,CAAC,iBAAD,EAAoB,iBAApB,CAHkB,EAIlB,CAAC,iBAAD,EAAoB,iBAApB,CAJkB,EAKlB,CAAC,iBAAD,EAAoB,iBAApB,CALkB,EAMlB,CAAC,iBAAD,EAAoB,iBAApB,CANkB,EAOlB,CAAC,iBAAD,EAAoB,iBAApB,CAPkB,EAQlB,CAAC,iBAAD,EAAoB,iBAApB,CARkB,EASlB,CAAC,iBAAD,EAAoB,iBAApB,CATkB,EAUlB,CAAC,iBAAD,EAAoB,iBAApB,CAVkB,EAWlB,CAAC,iBAAD,EAAoB,iBAApB,CAXkB,EAYlB,CAAC,iBAAD,EAAoB,iBAApB,CAZkB,EAalB,CAAC,iBAAD,EAAoB,iBAApB,CAbkB,EAclB,CAAC,iBAAD,EAAoB,iBAApB,CAdkB,EAelB,CAAC,iBAAD,EAAoB,iBAApB,CAfkB,EAgBlB,CAAC,iBAAD,EAAoB,iBAApB,CAhBkB,EAiBlB,CAAC,iBAAD,EAAoB,iBAApB,CAjBkB,EAkBlB,CAAC,iBAAD,EAAoB,iBAApB,CAlBkB,EAmBlB,CAAC,iBAAD,EAAoB,iBAApB,CAnBkB,EAoBlB,CAAC,iBAAD,EAAoB,iBAApB,CApBkB,EAqBlB,CAAC,iBAAD,EAAoB,iBAApB,CArBkB,EAsBlB,CAAC,iBAAD,EAAoB,iBAApB,CAtBkB,EAuBlB,CAAC,iBAAD,EAAoB,iBAApB,CAvBkB,EAwBlB,CAAC,iBAAD,EAAoB,iBAApB,CAxBkB,EAyBlB,CAAC,iBAAD,EAAoB,iBAApB,CAzBkB,EA0BlB,CAAC,iBAAD,EAAoB,iBAApB,CA1BkB,EA2BlB,CAAC,iBAAD,EAAoB,iBAApB,CA3BkB,EA4BlB,CAAC,iBAAD,EAAoB,iBAApB,CA5BkB,EA6BlB,CAAC,iBAAD,EAAoB,iBAApB,CA7BkB,EA8BlB,CAAC,iBAAD,EAAoB,iBAApB,CA9BkB,EA+BlB,CAAC,iBAAD,EAAoB,iBAApB,CA/BkB,EAgClB,CAAC,iBAAD,EAAoB,iBAApB,CAhCkB,EAiClB,CAAC,iBAAD,EAAoB,iBAApB,CAjCkB,EAkClB,CAAC,iBAAD,EAAoB,iBAApB,CAlCkB,EAmClB,CAAC,iBAAD,EAAoB,iBAApB,CAnCkB,EAoClB,CAAC,iBAAD,EAAoB,iBAApB,CApCkB,EAqClB,CAAC,iBAAD,EAAoB,iBAApB,CArCkB,EAsClB,CAAC,iBAAD,EAAoB,iBAApB,CAtCkB,EAuClB,CAAC,iBAAD,EAAoB,iBAApB,CAvCkB,EAwClB,CAAC,iBAAD,EAAoB,iBAApB,CAxCkB,EAyClB,CAAC,iBAAD,EAAoB,iBAApB,CAzCkB,EA0ClB,CAAC,iBAAD,EAAoB,iBAApB,CA1CkB,EA2ClB,CAAC,iBAAD,EAAoB,iBAApB,CA3CkB,EA4ClB,CAAC,iBAAD,EAAoB,iBAApB,CA5CkB,EA6ClB,CAAC,iBAAD,EAAoB,iBAApB,CA7CkB,EA8ClB,CAAC,iBAAD,EAAoB,iBAApB,CA9CkB,EA+ClB,CAAC,iBAAD,EAAoB,iBAApB,CA/CkB,EAgDlB,CAAC,iBAAD,EAAoB,iBAApB,CAhDkB,EAiDlB,CAAC,iBAAD,EAAoB,iBAApB,CAjDkB,EAkDlB,CAAC,iBAAD,EAAoB,iBAApB,CAlDkB,EAmDlB,CAAC,iBAAD,EAAoB,iBAApB,CAnDkB,EAoDlB,CAAC,iBAAD,EAAoB,iBAApB,CApDkB,EAqDlB,CAAC,iBAAD,EAAoB,iBAApB,CArDkB,EAsDlB,CAAC,iBAAD,EAAoB,iBAApB,CAtDkB,EAuDlB,CAAC,iBAAD,EAAoB,iBAApB,CAvDkB,EAwDlB,CAAC,iBAAD,EAAoB,iBAApB,CAxDkB,EAyDlB,CAAC,iBAAD,EAAoB,iBAApB,CAzDkB,EA0DlB,CAAC,iBAAD,EAAoB,iBAApB,CA1DkB,EA2DlB,CAAC,iBAAD,EAAoB,iBAApB,CA3DkB,EA4DlB,CAAC,iBAAD,EAAoB,iBAApB,CA5DkB,EA6DlB,CAAC,iBAAD,EAAoB,iBAApB,CA7DkB,EA8DlB,CAAC,iBAAD,EAAoB,iBAApB,CA9DkB,EA+DlB,CAAC,iBAAD,EAAoB,iBAApB,CA/DkB,EAgElB,CAAC,iBAAD,EAAoB,iBAApB,CAhEkB,EAiElB,CAAC,iBAAD,EAAoB,iBAApB,CAjEkB,EAkElB,CAAC,iBAAD,EAAoB,iBAApB,CAlEkB,EAmElB,CAAC,iBAAD,EAAoB,iBAApB,CAnEkB,EAoElB,CAAC,iBAAD,EAAoB,iBAApB,CApEkB,EAqElB,CAAC,iBAAD,EAAoB,iBAApB,CArEkB,EAsElB,CAAC,iBAAD,EAAoB,iBAApB,CAtEkB,EAuElB,CAAC,iBAAD,EAAoB,iBAApB,CAvEkB,EAwElB,CAAC,iBAAD,EAAoB,iBAApB,CAxEkB,EAyElB,CAAC,iBAAD,EAAoB,iBAApB,CAzEkB,EA0ElB,CAAC,iBAAD,EAAoB,iBAApB,CA1EkB,EA2ElB,CAAC,iBAAD,EAAoB,iBAApB,CA3EkB,EA4ElB,CAAC,iBAAD,EAAoB,iBAApB,CA5EkB,EA6ElB,CAAC,iBAAD,EAAoB,iBAApB,CA7EkB,EA8ElB,CAAC,iBAAD,EAAoB,iBAApB,CA9EkB,EA+ElB,CAAC,iBAAD,EAAoB,iBAApB,CA/EkB,EAgFlB,CAAC,iBAAD,EAAoB,iBAApB,CAhFkB,EAiFlB,CAAC,iBAAD,EAAoB,iBAApB,CAjFkB,EAkFlB,CAAC,iBAAD,EAAoB,iBAApB,CAlFkB,EAmFlB,CAAC,iBAAD,EAAoB,iBAApB,CAnFkB,EAoFlB,CAAC,iBAAD,EAAoB,iBAApB,CApFkB,EAqFlB,CAAC,iBAAD,EAAoB,iBAApB,CArFkB,EAsFlB,CAAC,iBAAD,EAAoB,iBAApB,CAtFkB,EAuFlB,CAAC,iBAAD,EAAoB,iBAApB,CAvFkB,EAwFlB,CAAC,iBAAD,EAAoB,iBAApB,CAxFkB,EAyFlB,CAAC,iBAAD,EAAoB,iBAApB,CAzFkB,EA0FlB,CAAC,iBAAD,EAAoB,iBAApB,CA1FkB,EA2FlB,CAAC,iBAAD,EAAoB,iBAApB,CA3FkB,EA4FlB,CAAC,iBAAD,EAAoB,iBAApB,CA5FkB,EA6FlB,CAAC,iBAAD,EAAoB,iBAApB,CA7FkB,EA8FlB,CAAC,iBAAD,EAAoB,iBAApB,CA9FkB,EA+FlB,CAAC,iBAAD,EAAoB,iBAApB,CA/FkB,EAgGlB,CAAC,iBAAD,EAAoB,iBAApB,CAhGkB,EAiGlB,CAAC,iBAAD,EAAoB,iBAApB,CAjGkB,EAkGlB,CAAC,iBAAD,EAAoB,iBAApB,CAlGkB,EAmGlB,CAAC,iBAAD,EAAoB,iBAApB,CAnGkB,EAoGlB,CAAC,iBAAD,EAAoB,iBAApB,CApGkB,EAqGlB,CAAC,iBAAD,EAAoB,iBAApB,CArGkB,EAsGlB,CAAC,iBAAD,EAAoB,iBAApB,CAtGkB,EAuGlB,CAAC,iBAAD,EAAoB,iBAApB,CAvGkB,EAwGlB,CAAC,iBAAD,EAAoB,iBAApB,CAxGkB,EAyGlB,CAAC,iBAAD,EAAoB,iBAApB,CAzGkB,EA0GlB,CAAC,iBAAD,EAAoB,iBAApB,CA1GkB,EA2GlB,CAAC,iBAAD,EAAoB,iBAApB,CA3GkB,EA4GlB,CAAC,iBAAD,EAAoB,iBAApB,CA5GkB,EA6GlB,CAAC,iBAAD,EAAoB,iBAApB,CA7GkB,EA8GlB,CAAC,iBAAD,EAAoB,iBAApB,CA9GkB,EA+GlB,CAAC,iBAAD,EAAoB,iBAApB,CA/GkB,EAgHlB,CAAC,iBAAD,EAAoB,iBAApB,CAhHkB,EAiHlB,CAAC,iBAAD,EAAoB,iBAApB,CAjHkB,EAkHlB,CAAC,iBAAD,EAAoB,iBAApB,CAlHkB,EAmHlB,CAAC,iBAAD,EAAoB,iBAApB,CAnHkB,EAoHlB,CAAC,iBAAD,EAAoB,iBAApB,CApHkB,EAqHlB,CAAC,iBAAD,EAAoB,iBAApB,CArHkB,EAsHlB,CAAC,iBAAD,EAAoB,iBAApB,CAtHkB,EAuHlB,CAAC,iBAAD,EAAoB,iBAApB,CAvHkB,EAwHlB,CAAC,iBAAD,EAAoB,iBAApB,CAxHkB,EAyHlB,CAAC,iBAAD,EAAoB,iBAApB,CAzHkB,EA0HlB,CAAC,iBAAD,EAAoB,iBAApB,CA1HkB,EA2HlB,CAAC,iBAAD,EAAoB,iBAApB,CA3HkB,EA4HlB,CAAC,iBAAD,EAAoB,iBAApB,CA5HkB,EA6HlB,CAAC,iBAAD,EAAoB,iBAApB,CA7HkB,EA8HlB,CAAC,iBAAD,EAAoB,iBAApB,CA9HkB,EA+HlB,CAAC,iBAAD,EAAoB,iBAApB,CA/HkB,EAgIlB,CAAC,iBAAD,EAAoB,iBAApB,CAhIkB,EAiIlB,CAAC,iBAAD,EAAoB,iBAApB,CAjIkB,EAkIlB,CAAC,iBAAD,EAAoB,iBAApB,CAlIkB,EAmIlB,CAAC,iBAAD,EAAoB,iBAApB,CAnIkB,EAoIlB,CAAC,iBAAD,EAAoB,iBAApB,CApIkB,EAqIlB,CAAC,iBAAD,EAAoB,iBAApB,CArIkB,EAsIlB,CAAC,iBAAD,EAAoB,iBAApB,CAtIkB,EAuIlB,CAAC,iBAAD,EAAoB,iBAApB,CAvIkB,EAwIlB,CAAC,iBAAD,EAAoB,iBAApB,CAxIkB,EAyIlB,CAAC,iBAAD,EAAoB,iBAApB,CAzIkB,EA0IlB,CAAC,iBAAD,EAAoB,iBAApB,CA1IkB,EA2IlB,CAAC,iBAAD,EAAoB,iBAApB,CA3IkB,EA4IlB,CAAC,iBAAD,EAAoB,iBAApB,CA5IkB,EA6IlB,CAAC,iBAAD,EAAoB,iBAApB,CA7IkB,EA8IlB,CAAC,iBAAD,EAAoB,iBAApB,CA9IkB,EA+IlB,CAAC,iBAAD,EAAoB,iBAApB,CA/IkB,EAgJlB,CAAC,iBAAD,EAAoB,iBAApB,CAhJkB,EAiJlB,CAAC,iBAAD,EAAoB,iBAApB,CAjJkB,EAkJlB,CAAC,iBAAD,EAAoB,iBAApB,CAlJkB,EAmJlB,CAAC,iBAAD,EAAoB,iBAApB,CAnJkB,EAoJlB,CAAC,iBAAD,EAAoB,iBAApB,CApJkB,EAqJlB,CAAC,iBAAD,EAAoB,iBAApB,CArJkB,EAsJlB,CAAC,iBAAD,EAAoB,iBAApB,CAtJkB,EAuJlB,CAAC,iBAAD,EAAoB,iBAApB,CAvJkB,EAwJlB,CAAC,iBAAD,EAAoB,iBAApB,CAxJkB,EAyJlB,CAAC,iBAAD,EAAoB,iBAApB,CAzJkB,EA0JlB,CAAC,iBAAD,EAAoB,iBAApB,CA1JkB,EA2JlB,CAAC,iBAAD,EAAoB,iBAApB,CA3JkB,EA4JlB,CAAC,iBAAD,EAAoB,iBAApB,CA5JkB,EA6JlB,CAAC,iBAAD,EAAoB,iBAApB,CA7JkB,EA8JlB,CAAC,iBAAD,EAAoB,iBAApB,CA9JkB,EA+JlB,CAAC,iBAAD,EAAoB,iBAApB,CA/JkB,EAgKlB,CAAC,iBAAD,EAAoB,iBAApB,CAhKkB,EAiKlB,CAAC,iBAAD,EAAoB,iBAApB,CAjKkB,EAkKlB,CAAC,iBAAD,EAAoB,iBAApB,CAlKkB,EAmKlB,CAAC,iBAAD,EAAoB,iBAApB,CAnKkB,EAoKlB,CAAC,iBAAD,EAAoB,iBAApB,CApKkB,EAqKlB,CAAC,iBAAD,EAAoB,iBAApB,CArKkB,EAsKlB,CAAC,iBAAD,EAAoB,iBAApB,CAtKkB,EAuKlB,CAAC,iBAAD,EAAoB,iBAApB,CAvKkB,EAwKlB,CAAC,iBAAD,EAAoB,iBAApB,CAxKkB,EAyKlB,CAAC,iBAAD,EAAoB,iBAApB,CAzKkB,EA0KlB,CAAC,iBAAD,EAAoB,iBAApB,CA1KkB,EA2KlB,CAAC,iBAAD,EAAoB,iBAApB,CA3KkB,EA4KlB,CAAC,iBAAD,EAAoB,iBAApB,CA5KkB,EA6KlB,CAAC,iBAAD,EAAoB,iBAApB,CA7KkB,EA8KlB,CAAC,iBAAD,EAAoB,iBAApB,CA9KkB,EA+KlB,CAAC,iBAAD,EAAoB,iBAApB,CA/KkB,EAgLlB,CAAC,iBAAD,EAAoB,iBAApB,CAhLkB,EAiLlB,CAAC,iBAAD,EAAoB,iBAApB,CAjLkB,EAkLlB,CAAC,iBAAD,EAAoB,iBAApB,CAlLkB,EAmLlB,CAAC,iBAAD,EAAoB,iBAApB,CAnLkB,EAoLlB,CAAC,iBAAD,EAAoB,iBAApB,CApLkB,EAqLlB,CAAC,iBAAD,EAAoB,iBAApB,CArLkB,EAsLlB,CAAC,iBAAD,EAAoB,iBAApB,CAtLkB,EAuLlB,CAAC,iBAAD,EAAoB,iBAApB,CAvLkB,EAwLlB,CAAC,iBAAD,EAAoB,iBAApB,CAxLkB,EAyLlB,CAAC,iBAAD,EAAoB,iBAApB,CAzLkB,EA0LlB,CAAC,iBAAD,EAAoB,iBAApB,CA1LkB,EA2LlB,CAAC,iBAAD,EAAoB,iBAApB,CA3LkB,EA4LlB,CAAC,iBAAD,EAAoB,iBAApB,CA5LkB,EA6LlB,CAAC,iBAAD,EAAoB,iBAApB,CA7LkB,EA8LlB,CAAC,iBAAD,EAAoB,iBAApB,CA9LkB,EA+LlB,CAAC,iBAAD,EAAoB,iBAApB,CA/LkB,EAgMlB,CAAC,iBAAD,EAAoB,iBAApB,CAhMkB,EAiMlB,CAAC,iBAAD,EAAoB,iBAApB,CAjMkB,EAkMlB,CAAC,iBAAD,EAAoB,iBAApB,CAlMkB,EAmMlB,CAAC,iBAAD,EAAoB,iBAApB,CAnMkB,EAoMlB,CAAC,iBAAD,EAAoB,iBAApB,CApMkB,EAqMlB,CAAC,iBAAD,EAAoB,iBAApB,CArMkB,EAsMlB,CAAC,iBAAD,EAAoB,iBAApB,CAtMkB,EAuMlB,CAAC,iBAAD,EAAoB,iBAApB,CAvMkB,EAwMlB,CAAC,iBAAD,EAAoB,iBAApB,CAxMkB,EAyMlB,CAAC,iBAAD,EAAoB,iBAApB,CAzMkB,EA0MlB,CAAC,iBAAD,EAAoB,iBAApB,CA1MkB,EA2MlB,CAAC,iBAAD,EAAoB,iBAApB,CA3MkB,EA4MlB,CAAC,iBAAD,EAAoB,iBAApB,CA5MkB,EA6MlB,CAAC,iBAAD,EAAoB,iBAApB,CA7MkB,EA8MlB,CAAC,iBAAD,EAAoB,iBAApB,CA9MkB,EA+MlB,CAAC,iBAAD,EAAoB,iBAApB,CA/MkB,EAgNlB,CAAC,iBAAD,EAAoB,iBAApB,CAhNkB,EAiNlB,CAAC,iBAAD,EAAoB,iBAApB,CAjNkB,EAkNlB,CAAC,iBAAD,EAAoB,iBAApB,CAlNkB,EAmNlB,CAAC,iBAAD,EAAoB,iBAApB,CAnNkB,EAoNlB,CAAC,iBAAD,EAAoB,iBAApB,CApNkB,EAqNlB,CAAC,iBAAD,EAAoB,iBAApB,CArNkB,EAsNlB,CAAC,iBAAD,EAAoB,iBAApB,CAtNkB,EAuNlB,CAAC,iBAAD,EAAoB,iBAApB,CAvNkB,EAwNlB,CAAC,iBAAD,EAAoB,iBAApB,CAxNkB,EAyNlB,CAAC,iBAAD,EAAoB,iBAApB,CAzNkB,EA0NlB,CAAC,iBAAD,EAAoB,iBAApB,CA1NkB,EA2NlB,CAAC,iBAAD,EAAoB,iBAApB,CA3NkB,EA4NlB,CAAC,iBAAD,EAAoB,iBAApB,CA5NkB,EA6NlB,CAAC,iBAAD,EAAoB,iBAApB,CA7NkB,EA8NlB,CAAC,iBAAD,EAAoB,iBAApB,CA9NkB,EA+NlB,CAAC,iBAAD,EAAoB,iBAApB,CA/NkB,EAgOlB,CAAC,iBAAD,EAAoB,iBAApB,CAhOkB,EAiOlB,CAAC,iBAAD,EAAoB,iBAApB,CAjOkB,EAkOlB,CAAC,iBAAD,EAAoB,iBAApB,CAlOkB,EAmOlB,CAAC,iBAAD,EAAoB,iBAApB,CAnOkB,EAoOlB,CAAC,iBAAD,EAAoB,iBAApB,CApOkB,EAqOlB,CAAC,iBAAD,EAAoB,iBAApB,CArOkB,EAsOlB,CAAC,iBAAD,EAAoB,iBAApB,CAtOkB,EAuOlB,CAAC,iBAAD,EAAoB,iBAApB,CAvOkB,EAwOlB,CAAC,iBAAD,EAAoB,iBAApB,CAxOkB,EAyOlB,CAAC,iBAAD,EAAoB,iBAApB,CAzOkB,EA0OlB,CAAC,iBAAD,EAAoB,iBAApB,CA1OkB,EA2OlB,CAAC,iBAAD,EAAoB,iBAApB,CA3OkB,EA4OlB,CAAC,iBAAD,EAAoB,iBAApB,CA5OkB,EA6OlB,CAAC,iBAAD,EAAoB,iBAApB,CA7OkB,EA8OlB,CAAC,iBAAD,EAAoB,iBAApB,CA9OkB,EA+OlB,CAAC,iBAAD,EAAoB,iBAApB,CA/OkB,EAgPlB,CAAC,iBAAD,EAAoB,iBAApB,CAhPkB,EAiPlB,CAAC,iBAAD,EAAoB,iBAApB,CAjPkB,EAkPlB,CAAC,iBAAD,EAAoB,iBAApB,CAlPkB,EAmPlB,CAAC,iBAAD,EAAoB,iBAApB,CAnPkB,EAoPlB,CAAC,iBAAD,EAAoB,iBAApB,CApPkB,EAqPlB,CAAC,iBAAD,EAAoB,iBAApB,CArPkB,EAsPlB,CAAC,iBAAD,EAAoB,iBAApB,CAtPkB,EAuPlB,CAAC,iBAAD,EAAoB,iBAApB,CAvPkB,EAwPlB,CAAC,iBAAD,EAAoB,iBAApB,CAxPkB,EAyPlB,CAAC,iBAAD,EAAoB,iBAApB,CAzPkB,EA0PlB,CAAC,iBAAD,EAAoB,iBAApB,CA1PkB,EA2PlB,CAAC,iBAAD,EAAoB,iBAApB,CA3PkB,EA4PlB,CAAC,iBAAD,EAAoB,iBAApB,CA5PkB,EA6PlB,CAAC,iBAAD,EAAoB,iBAApB,CA7PkB,EA8PlB,CAAC,iBAAD,EAAoB,iBAApB,CA9PkB,EA+PlB,CAAC,iBAAD,EAAoB,iBAApB,CA/PkB,EAgQlB,CAAC,iBAAD,EAAoB,iBAApB,CAhQkB,EAiQlB,CAAC,iBAAD,EAAoB,iBAApB,CAjQkB,EAkQlB,CAAC,iBAAD,EAAoB,iBAApB,CAlQkB,EAmQlB,CAAC,iBAAD,EAAoB,iBAApB,CAnQkB,EAoQlB,CAAC,iBAAD,EAAoB,iBAApB,CApQkB,EAqQlB,CAAC,iBAAD,EAAoB,iBAApB,CArQkB,EAsQlB,CAAC,iBAAD,EAAoB,iBAApB,CAtQkB,EAuQlB,CAAC,iBAAD,EAAoB,iBAApB,CAvQkB,EAwQlB,CAAC,iBAAD,EAAoB,iBAApB,CAxQkB,EAyQlB,CAAC,iBAAD,EAAoB,iBAApB,CAzQkB,EA0QlB,CAAC,iBAAD,EAAoB,iBAApB,CA1QkB,EA2QlB,CAAC,iBAAD,EAAoB,iBAApB,CA3QkB,EA4QlB,CAAC,iBAAD,EAAoB,iBAApB,CA5QkB,EA6QlB,CAAC,iBAAD,EAAoB,iBAApB,CA7QkB,EA8QlB,CAAC,iBAAD,EAAoB,iBAApB,CA9QkB,EA+QlB,CAAC,iBAAD,EAAoB,iBAApB,CA/QkB,EAgRlB,CAAC,iBAAD,EAAoB,iBAApB,CAhRkB,EAiRlB,CAAC,iBAAD,EAAoB,iBAApB,CAjRkB,EAkRlB,CAAC,iBAAD,EAAoB,iBAApB,CAlRkB,EAmRlB,CAAC,iBAAD,EAAoB,iBAApB,CAnRkB,EAoRlB,CAAC,iBAAD,EAAoB,iBAApB,CApRkB,EAqRlB,CAAC,iBAAD,EAAoB,iBAApB,CArRkB,EAsRlB,CAAC,iBAAD,EAAoB,iBAApB,CAtRkB,EAuRlB,CAAC,iBAAD,EAAoB,iBAApB,CAvRkB,EAwRlB,CAAC,iBAAD,EAAoB,iBAApB,CAxRkB,EAyRlB,CAAC,iBAAD,EAAoB,iBAApB,CAzRkB,EA0RlB,CAAC,iBAAD,EAAoB,iBAApB,CA1RkB,EA2RlB,CAAC,iBAAD,EAAoB,iBAApB,CA3RkB,EA4RlB,CAAC,iBAAD,EAAoB,iBAApB,CA5RkB,EA6RlB,CAAC,iBAAD,EAAoB,iBAApB,CA7RkB,EA8RlB,CAAC,iBAAD,EAAoB,iBAApB,CA9RkB,EA+RlB,CAAC,iBAAD,EAAoB,iBAApB,CA/RkB,EAgSlB,CAAC,iBAAD,EAAoB,iBAApB,CAhSkB,EAiSlB,CAAC,iBAAD,EAAoB,iBAApB,CAjSkB,EAkSlB,CAAC,iBAAD,EAAoB,iBAApB,CAlSkB,EAmSlB,CAAC,iBAAD,EAAoB,iBAApB,CAnSkB,EAoSlB,CAAC,iBAAD,EAAoB,iBAApB,CApSkB,EAqSlB,CAAC,iBAAD,EAAoB,iBAApB,CArSkB,EAsSlB,CAAC,iBAAD,EAAoB,iBAApB,CAtSkB,EAuSlB,CAAC,iBAAD,EAAoB,iBAApB,CAvSkB,EAwSlB,CAAC,iBAAD,EAAoB,iBAApB,CAxSkB,EAySlB,CAAC,iBAAD,EAAoB,iBAApB,CAzSkB,EA0SlB,CAAC,iBAAD,EAAoB,iBAApB,CA1SkB,EA2SlB,CAAC,iBAAD,EAAoB,iBAApB,CA3SkB,EA4SlB,CAAC,iBAAD,EAAoB,iBAApB,CA5SkB,EA6SlB,CAAC,iBAAD,EAAoB,iBAApB,CA7SkB,EA8SlB,CAAC,iBAAD,EAAoB,iBAApB,CA9SkB,EA+SlB,CAAC,iBAAD,EAAoB,iBAApB,CA/SkB,EAgTlB,CAAC,iBAAD,EAAoB,iBAApB,CAhTkB,EAiTlB,CAAC,iBAAD,EAAoB,iBAApB,CAjTkB,EAkTlB,CAAC,iBAAD,EAAoB,iBAApB,CAlTkB,EAmTlB,CAAC,iBAAD,EAAoB,iBAApB,CAnTkB,EAoTlB,CAAC,iBAAD,EAAoB,iBAApB,CApTkB,EAqTlB,CAAC,iBAAD,EAAoB,iBAApB,CArTkB,EAsTlB,CAAC,iBAAD,EAAoB,iBAApB,CAtTkB,EAuTlB,CAAC,iBAAD,EAAoB,iBAApB,CAvTkB,EAwTlB,CAAC,iBAAD,EAAoB,iBAApB,CAxTkB,EAyTlB,CAAC,iBAAD,EAAoB,iBAApB,CAzTkB,EA0TlB,CAAC,iBAAD,EAAoB,iBAApB,CA1TkB,EA2TlB,CAAC,iBAAD,EAAoB,iBAApB,CA3TkB,EA4TlB,CAAC,iBAAD,EAAoB,iBAApB,CA5TkB,EA6TlB,CAAC,iBAAD,EAAoB,iBAApB,CA7TkB,EA8TlB,CAAC,iBAAD,EAAoB,iBAApB,CA9TkB,EA+TlB,CAAC,iBAAD,EAAoB,iBAApB,CA/TkB,EAgUlB,CAAC,iBAAD,EAAoB,iBAApB,CAhUkB,EAiUlB,CAAC,iBAAD,EAAoB,iBAApB,CAjUkB,EAkUlB,CAAC,iBAAD,EAAoB,iBAApB,CAlUkB,EAmUlB,CAAC,iBAAD,EAAoB,iBAApB,CAnUkB,EAoUlB,CAAC,iBAAD,EAAoB,iBAApB,CApUkB,EAqUlB,CAAC,iBAAD,EAAoB,iBAApB,CArUkB,EAsUlB,CAAC,iBAAD,EAAoB,iBAApB,CAtUkB,EAuUlB,CAAC,iBAAD,EAAoB,iBAApB,CAvUkB,EAwUlB,CAAC,iBAAD,EAAoB,iBAApB,CAxUkB,EAyUlB,CAAC,iBAAD,EAAoB,iBAApB,CAzUkB,EA0UlB,CAAC,iBAAD,EAAoB,iBAApB,CA1UkB,EA2UlB,CAAC,iBAAD,EAAoB,iBAApB,CA3UkB,EA4UlB,CAAC,iBAAD,EAAoB,iBAApB,CA5UkB,EA6UlB,CAAC,iBAAD,EAAoB,iBAApB,CA7UkB,EA8UlB,CAAC,iBAAD,EAAoB,iBAApB,CA9UkB,EA+UlB,CAAC,iBAAD,EAAoB,iBAApB,CA/UkB,EAgVlB,CAAC,iBAAD,EAAoB,iBAApB,CAhVkB,EAiVlB,CAAC,iBAAD,EAAoB,iBAApB,CAjVkB,EAkVlB,CAAC,iBAAD,EAAoB,iBAApB,CAlVkB,EAmVlB,CAAC,iBAAD,EAAoB,iBAApB,CAnVkB,EAoVlB,CAAC,iBAAD,EAAoB,iBAApB,CApVkB,EAqVlB,CAAC,iBAAD,EAAoB,iBAApB,CArVkB,EAsVlB,CAAC,iBAAD,EAAoB,iBAApB,CAtVkB,EAuVlB,CAAC,iBAAD,EAAoB,iBAApB,CAvVkB,EAwVlB,CAAC,iBAAD,EAAoB,iBAApB,CAxVkB,EAyVlB,CAAC,iBAAD,EAAoB,iBAApB,CAzVkB,EA0VlB,CAAC,iBAAD,EAAoB,iBAApB,CA1VkB,EA2VlB,CAAC,iBAAD,EAAoB,iBAApB,CA3VkB,EA4VlB,CAAC,iBAAD,EAAoB,iBAApB,CA5VkB,EA6VlB,CAAC,iBAAD,EAAoB,iBAApB,CA7VkB,EA8VlB,CAAC,iBAAD,EAAoB,iBAApB,CA9VkB,EA+VlB,CAAC,iBAAD,EAAoB,iBAApB,CA/VkB,EAgWlB,CAAC,iBAAD,EAAoB,iBAApB,CAhWkB,EAiWlB,CAAC,iBAAD,EAAoB,iBAApB,CAjWkB,EAkWlB,CAAC,iBAAD,EAAoB,iBAApB,CAlWkB,EAmWlB,CAAC,iBAAD,EAAoB,iBAApB,CAnWkB,EAoWlB,CAAC,iBAAD,EAAoB,iBAApB,CApWkB,EAqWlB,CAAC,iBAAD,EAAoB,iBAApB,CArWkB,EAsWlB,CAAC,iBAAD,EAAoB,iBAApB,CAtWkB,EAuWlB,CAAC,iBAAD,EAAoB,iBAApB,CAvWkB,EAwWlB,CAAC,iBAAD,EAAoB,iBAApB,CAxWkB,EAyWlB,CAAC,iBAAD,EAAoB,iBAApB,CAzWkB,EA0WlB,CAAC,iBAAD,EAAoB,iBAApB,CA1WkB,EA2WlB,CAAC,iBAAD,EAAoB,iBAApB,CA3WkB,EA4WlB,CAAC,iBAAD,EAAoB,iBAApB,CA5WkB,EA6WlB,CAAC,iBAAD,EAAoB,iBAApB,CA7WkB,EA8WlB,CAAC,iBAAD,EAAoB,iBAApB,CA9WkB,EA+WlB,CAAC,iBAAD,EAAoB,iBAApB,CA/WkB,EAgXlB,CAAC,iBAAD,EAAoB,iBAApB,CAhXkB,EAiXlB,CAAC,iBAAD,EAAoB,iBAApB,CAjXkB,EAkXlB,CAAC,iBAAD,EAAoB,iBAApB,CAlXkB,EAmXlB,CAAC,iBAAD,EAAoB,iBAApB,CAnXkB,EAoXlB,CAAC,iBAAD,EAAoB,iBAApB,CApXkB,EAqXlB,CAAC,iBAAD,EAAoB,iBAApB,CArXkB,EAsXlB,CAAC,iBAAD,EAAoB,iBAApB,CAtXkB,EAuXlB,CAAC,iBAAD,EAAoB,iBAApB,CAvXkB,EAwXlB,CAAC,iBAAD,EAAoB,iBAApB,CAxXkB,EAyXlB,CAAC,iBAAD,EAAoB,iBAApB,CAzXkB,EA0XlB,CAAC,iBAAD,EAAoB,iBAApB,CA1XkB,EA2XlB,CAAC,iBAAD,EAAoB,iBAApB,CA3XkB,EA4XlB,CAAC,iBAAD,EAAoB,iBAApB,CA5XkB,EA6XlB,CAAC,iBAAD,EAAoB,iBAApB,CA7XkB,EA8XlB,CAAC,iBAAD,EAAoB,iBAApB,CA9XkB,EA+XlB,CAAC,iBAAD,EAAoB,iBAApB,CA/XkB,EAgYlB,CAAC,iBAAD,EAAoB,iBAApB,CAhYkB,EAiYlB,CAAC,iBAAD,EAAoB,iBAApB,CAjYkB,EAkYlB,CAAC,iBAAD,EAAoB,iBAApB,CAlYkB,EAmYlB,CAAC,iBAAD,EAAoB,iBAApB,CAnYkB,EAoYlB,CAAC,iBAAD,EAAoB,iBAApB,CApYkB,EAqYlB,CAAC,iBAAD,EAAoB,iBAApB,CArYkB,EAsYlB,CAAC,iBAAD,EAAoB,iBAApB,CAtYkB,EAuYlB,CAAC,iBAAD,EAAoB,iBAApB,CAvYkB,EAwYlB,CAAC,iBAAD,EAAoB,iBAApB,CAxYkB,EAyYlB,CAAC,iBAAD,EAAoB,iBAApB,CAzYkB,EA0YlB,CAAC,iBAAD,EAAoB,iBAApB,CA1YkB,EA2YlB,CAAC,iBAAD,EAAoB,iBAApB,CA3YkB,EA4YlB,CAAC,iBAAD,EAAoB,iBAApB,CA5YkB,EA6YlB,CAAC,iBAAD,EAAoB,iBAApB,CA7YkB,EA8YlB,CAAC,iBAAD,EAAoB,iBAApB,CA9YkB,EA+YlB,CAAC,iBAAD,EAAoB,iBAApB,CA/YkB,EAgZlB,CAAC,iBAAD,EAAoB,iBAApB,CAhZkB,EAiZlB,CAAC,iBAAD,EAAoB,iBAApB,CAjZkB,EAkZlB,CAAC,iBAAD,EAAoB,iBAApB,CAlZkB,EAmZlB,CAAC,iBAAD,EAAoB,iBAApB,CAnZkB,EAoZlB,CAAC,iBAAD,EAAoB,iBAApB,CApZkB,EAqZlB,CAAC,iBAAD,EAAoB,iBAApB,CArZkB,EAsZlB,CAAC,iBAAD,EAAoB,iBAApB,CAtZkB,EAuZlB,CAAC,iBAAD,EAAoB,iBAApB,CAvZkB,EAwZlB,CAAC,iBAAD,EAAoB,iBAApB,CAxZkB,EAyZlB,CAAC,iBAAD,EAAoB,iBAApB,CAzZkB,EA0ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA1ZkB,EA2ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA3ZkB,EA4ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA5ZkB,EA6ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA7ZkB,EA8ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA9ZkB,EA+ZlB,CAAC,iBAAD,EAAoB,iBAApB,CA/ZkB,EAgalB,CAAC,iBAAD,EAAoB,iBAApB,CAhakB,EAialB,CAAC,iBAAD,EAAoB,iBAApB,CAjakB,EAkalB,CAAC,iBAAD,EAAoB,iBAApB,CAlakB,EAmalB,CAAC,iBAAD,EAAoB,iBAApB,CAnakB,EAoalB,CAAC,iBAAD,EAAoB,iBAApB,CApakB,EAqalB,CAAC,iBAAD,EAAoB,iBAApB,CArakB,EAsalB,CAAC,iBAAD,EAAoB,iBAApB,CAtakB,EAualB,CAAC,iBAAD,EAAoB,iBAApB,CAvakB,EAwalB,CAAC,iBAAD,EAAoB,iBAApB,CAxakB,EAyalB,CAAC,iBAAD,EAAoB,iBAApB,CAzakB,EA0alB,CAAC,iBAAD,EAAoB,iBAApB,CA1akB,EA2alB,CAAC,iBAAD,EAAoB,iBAApB,CA3akB,EA4alB,CAAC,iBAAD,EAAoB,iBAApB,CA5akB,EA6alB,CAAC,iBAAD,EAAoB,iBAApB,CA7akB,EA8alB,CAAC,iBAAD,EAAoB,iBAApB,CA9akB,EA+alB,CAAC,iBAAD,EAAoB,iBAApB,CA/akB,EAgblB,CAAC,iBAAD,EAAoB,iBAApB,CAhbkB,EAiblB,CAAC,iBAAD,EAAoB,iBAApB,CAjbkB,EAkblB,CAAC,iBAAD,EAAoB,iBAApB,CAlbkB,EAmblB,CAAC,iBAAD,EAAoB,iBAApB,CAnbkB,EAoblB,CAAC,iBAAD,EAAoB,iBAApB,CApbkB,EAqblB,CAAC,iBAAD,EAAoB,iBAApB,CArbkB,EAsblB,CAAC,iBAAD,EAAoB,iBAApB,CAtbkB,EAublB,CAAC,iBAAD,EAAoB,iBAApB,CAvbkB,EAwblB,CAAC,iBAAD,EAAoB,iBAApB,CAxbkB,EAyblB,CAAC,iBAAD,EAAoB,iBAApB,CAzbkB,EA0blB,CAAC,iBAAD,EAAoB,iBAApB,CA1bkB,EA2blB,CAAC,iBAAD,EAAoB,iBAApB,CA3bkB,EA4blB,CAAC,iBAAD,EAAoB,iBAApB,CA5bkB,EA6blB,CAAC,iBAAD,EAAoB,iBAApB,CA7bkB,EA8blB,CAAC,iBAAD,EAAoB,iBAApB,CA9bkB,EA+blB,CAAC,iBAAD,EAAoB,iBAApB,CA/bkB,EAgclB,CAAC,iBAAD,EAAoB,iBAApB,CAhckB,EAiclB,CAAC,iBAAD,EAAoB,iBAApB,CAjckB,EAkclB,CAAC,iBAAD,EAAoB,iBAApB,CAlckB,EAmclB,CAAC,iBAAD,EAAoB,iBAApB,CAnckB,EAoclB,CAAC,iBAAD,EAAoB,iBAApB,CApckB,EAqclB,CAAC,iBAAD,EAAoB,iBAApB,CArckB,EAsclB,CAAC,iBAAD,EAAoB,iBAApB,CAtckB,EAuclB,CAAC,iBAAD,EAAoB,iBAApB,CAvckB,EAwclB,CAAC,iBAAD,EAAoB,iBAApB,CAxckB,EAyclB,CAAC,iBAAD,EAAoB,iBAApB,CAzckB,EA0clB,CAAC,iBAAD,EAAoB,iBAApB,CA1ckB,EA2clB,CAAC,iBAAD,EAAoB,iBAApB,CA3ckB,EA4clB,CAAC,iBAAD,EAAoB,iBAApB,CA5ckB,EA6clB,CAAC,iBAAD,EAAoB,iBAApB,CA7ckB,EA8clB,CAAC,iBAAD,EAAoB,iBAApB,CA9ckB,EA+clB,CAAC,iBAAD,EAAoB,iBAApB,CA/ckB,EAgdlB,CAAC,iBAAD,EAAoB,iBAApB,CAhdkB,EAidlB,CAAC,iBAAD,EAAoB,iBAApB,CAjdkB,EAkdlB,CAAC,iBAAD,EAAoB,iBAApB,CAldkB,EAmdlB,CAAC,iBAAD,EAAoB,iBAApB,CAndkB,EAodlB,CAAC,iBAAD,EAAoB,iBAApB,CApdkB,EAqdlB,CAAC,iBAAD,EAAoB,iBAApB,CArdkB,EAsdlB,CAAC,iBAAD,EAAoB,iBAApB,CAtdkB,EAudlB,CAAC,iBAAD,EAAoB,iBAApB,CAvdkB,EAwdlB,CAAC,iBAAD,EAAoB,iBAApB,CAxdkB,EAydlB,CAAC,iBAAD,EAAoB,iBAApB,CAzdkB,EA0dlB,CAAC,iBAAD,EAAoB,iBAApB,CA1dkB,EA2dlB,CAAC,iBAAD,EAAoB,iBAApB,CA3dkB,EA4dlB,CAAC,iBAAD,EAAoB,iBAApB,CA5dkB,EA6dlB,CAAC,iBAAD,EAAoB,iBAApB,CA7dkB,EA8dlB,CAAC,iBAAD,EAAoB,iBAApB,CA9dkB,EA+dlB,CAAC,iBAAD,EAAoB,iBAApB,CA/dkB,EAgelB,CAAC,iBAAD,EAAoB,iBAApB,CAhekB,CAAtB;;AAmeA,YAAIC,iBAAiB,CACjB,CAAC,iBAAD,EAAoB,iBAApB,CADiB,EAEjB,CAAC,iBAAD,EAAoB,iBAApB,CAFiB,EAGjB,CAAC,iBAAD,EAAoB,iBAApB,CAHiB,EAIjB,CAAC,iBAAD,EAAoB,iBAApB,CAJiB,EAKjB,CAAC,iBAAD,EAAoB,iBAApB,CALiB,EAMjB,CAAC,iBAAD,EAAoB,iBAApB,CANiB,EAOjB,CAAC,iBAAD,EAAoB,iBAApB,CAPiB,EAQjB,CAAC,iBAAD,EAAoB,iBAApB,CARiB,EASjB,CAAC,iBAAD,EAAoB,iBAApB,CATiB,EAUjB,CAAC,iBAAD,EAAoB,iBAApB,CAViB,EAWjB,CAAC,iBAAD,EAAoB,iBAApB,CAXiB,EAYjB,CAAC,iBAAD,EAAoB,iBAApB,CAZiB,EAajB,CAAC,iBAAD,EAAoB,iBAApB,CAbiB,EAcjB,CAAC,iBAAD,EAAoB,iBAApB,CAdiB,EAejB,CAAC,iBAAD,EAAoB,iBAApB,CAfiB,EAgBjB,CAAC,iBAAD,EAAoB,iBAApB,CAhBiB,EAiBjB,CAAC,iBAAD,EAAoB,iBAApB,CAjBiB,EAkBjB,CAAC,iBAAD,EAAoB,iBAApB,CAlBiB,EAmBjB,CAAC,iBAAD,EAAoB,iBAApB,CAnBiB,EAoBjB,CAAC,iBAAD,EAAoB,iBAApB,CApBiB,EAqBjB,CAAC,iBAAD,EAAoB,iBAApB,CArBiB,EAsBjB,CAAC,iBAAD,EAAoB,iBAApB,CAtBiB,EAuBjB,CAAC,iBAAD,EAAoB,iBAApB,CAvBiB,EAwBjB,CAAC,iBAAD,EAAoB,iBAApB,CAxBiB,EAyBjB,CAAC,iBAAD,EAAoB,iBAApB,CAzBiB,EA0BjB,CAAC,iBAAD,EAAoB,iBAApB,CA1BiB,EA2BjB,CAAC,iBAAD,EAAoB,iBAApB,CA3BiB,EA4BjB,CAAC,iBAAD,EAAoB,iBAApB,CA5BiB,EA6BjB,CAAC,iBAAD,EAAoB,iBAApB,CA7BiB,EA8BjB,CAAC,iBAAD,EAAoB,iBAApB,CA9BiB,EA+BjB,CAAC,iBAAD,EAAoB,iBAApB,CA/BiB,EAgCjB,CAAC,iBAAD,EAAoB,iBAApB,CAhCiB,EAiCjB,CAAC,iBAAD,EAAoB,iBAApB,CAjCiB,EAkCjB,CAAC,iBAAD,EAAoB,iBAApB,CAlCiB,EAmCjB,CAAC,iBAAD,EAAoB,iBAApB,CAnCiB,EAoCjB,CAAC,iBAAD,EAAoB,iBAApB,CApCiB,EAqCjB,CAAC,iBAAD,EAAoB,iBAApB,CArCiB,EAsCjB,CAAC,iBAAD,EAAoB,iBAApB,CAtCiB,EAuCjB,CAAC,iBAAD,EAAoB,iBAApB,CAvCiB,EAwCjB,CAAC,iBAAD,EAAoB,iBAApB,CAxCiB,EAyCjB,CAAC,iBAAD,EAAoB,iBAApB,CAzCiB,EA0CjB,CAAC,iBAAD,EAAoB,iBAApB,CA1CiB,EA2CjB,CAAC,iBAAD,EAAoB,iBAApB,CA3CiB,EA4CjB,CAAC,iBAAD,EAAoB,iBAApB,CA5CiB,EA6CjB,CAAC,iBAAD,EAAoB,iBAApB,CA7CiB,EA8CjB,CAAC,iBAAD,EAAoB,iBAApB,CA9CiB,EA+CjB,CAAC,iBAAD,EAAoB,iBAApB,CA/CiB,EAgDjB,CAAC,iBAAD,EAAoB,iBAApB,CAhDiB,EAiDjB,CAAC,iBAAD,EAAoB,iBAApB,CAjDiB,EAkDjB,CAAC,iBAAD,EAAoB,iBAApB,CAlDiB,EAmDjB,CAAC,iBAAD,EAAoB,iBAApB,CAnDiB,EAoDjB,CAAC,iBAAD,EAAoB,iBAApB,CApDiB,EAqDjB,CAAC,iBAAD,EAAoB,iBAApB,CArDiB,EAsDjB,CAAC,iBAAD,EAAoB,iBAApB,CAtDiB,EAuDjB,CAAC,iBAAD,EAAoB,iBAApB,CAvDiB,EAwDjB,CAAC,iBAAD,EAAoB,iBAApB,CAxDiB,EAyDjB,CAAC,iBAAD,EAAoB,iBAApB,CAzDiB,EA0DjB,CAAC,iBAAD,EAAoB,iBAApB,CA1DiB,EA2DjB,CAAC,iBAAD,EAAoB,iBAApB,CA3DiB,EA4DjB,CAAC,iBAAD,EAAoB,iBAApB,CA5DiB,CAArB;;AA+DA,YAAII,qBAAqB,IAAIlgB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC3B,CAD2B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAEjB,EAFiB,EAEZ,EAFY,EAEP,EAFO,EAEF,EAFE,EAGrC,EAHqC,EAGhC,EAHgC,EAG3B,EAH2B,EAGtB,EAHsB,EAGlB,GAHkB,EAGb,GAHa,EAGR,GAHQ,EAGH,GAHG,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,IANgC,CAAhB,CAAzB;;AASA,YAAImgB,oBAAoB,IAAIngB,WAAJ,CAAgB,CACpC,CADoC,EACjC,CADiC,EAC9B,CAD8B,EAC3B,EAD2B,EACvB,EADuB,EACnB,EADmB,EACf,EADe,EACX,EADW,EACP,EADO,EACH,EADG,EACC,EADD,EACK,EADL,EACS,GADT,CAAhB,CAAxB;;AAIA,YAAIogB,qBAAqB,IAAIpgB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC3B,CAD2B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAEjB,EAFiB,EAEZ,EAFY,EAEP,EAFO,EAEF,EAFE,EAGrC,EAHqC,EAGhC,EAHgC,EAG3B,EAH2B,EAGvB,GAHuB,EAGlB,GAHkB,EAGb,GAHa,EAGR,GAHQ,EAGH,GAHG,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,GANgC,EAM3B,GAN2B,EAMtB,GANsB,EAMjB,GANiB,EAMZ,GANY,EAMP,GANO,EAMF,IANE,CAAhB,CAAzB;;AASA,YAAIqgB,oBAAoB,IAAIrgB,WAAJ,CAAgB,CACpC,CADoC,EACjC,CADiC,EAC9B,CAD8B,EAC3B,EAD2B,EACvB,EADuB,EACnB,EADmB,EACf,EADe,EACX,EADW,EACP,EADO,EACH,EADG,EACC,EADD,EACK,EADL,EACS,GADT,CAAhB,CAAxB;;AAIA,YAAIsgB,qBAAqB,IAAItgB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC3B,CAD2B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAEjB,EAFiB,EAEZ,EAFY,EAEP,EAFO,EAEF,EAFE,EAGrC,EAHqC,EAGhC,EAHgC,EAG5B,GAH4B,EAGvB,GAHuB,EAGlB,GAHkB,EAGb,GAHa,EAGR,GAHQ,EAGH,GAHG,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,GANgC,EAM3B,GAN2B,EAMtB,GANsB,EAMjB,GANiB,EAMZ,GANY,EAMP,GANO,EAMF,GANE,EAOrC,GAPqC,EAOhC,IAPgC,CAAhB,CAAzB;;AAUA,YAAIugB,oBAAoB,IAAIvgB,WAAJ,CAAgB,CACpC,CADoC,EAC/B,CAD+B,EAC1B,CAD0B,EACtB,EADsB,EACjB,EADiB,EACZ,EADY,EACP,EADO,EACF,EADE,EAEpC,EAFoC,EAE/B,EAF+B,EAE1B,EAF0B,EAErB,EAFqB,EAEhB,EAFgB,EAEZ,GAFY,EAEP,GAFO,CAAhB,CAAxB;;AAKA,YAAIwgB,qBAAqB,IAAIxgB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC3B,CAD2B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAEjB,EAFiB,EAEZ,EAFY,EAEP,EAFO,EAEF,EAFE,EAGrC,EAHqC,EAGhC,EAHgC,EAG5B,GAH4B,EAGvB,GAHuB,EAGlB,GAHkB,EAGb,GAHa,EAGR,GAHQ,EAGH,GAHG,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,GANgC,EAM3B,GAN2B,EAMtB,GANsB,EAMjB,GANiB,EAMZ,GANY,EAMP,GANO,EAMF,GANE,EAOrC,GAPqC,EAOhC,GAPgC,EAO3B,GAP2B,EAOtB,IAPsB,CAAhB,CAAzB;;AAUA,YAAIygB,qBAAqB,IAAIzgB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC3B,CAD2B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAEjB,EAFiB,EAEZ,EAFY,EAEP,EAFO,EAEF,EAFE,EAGrC,EAHqC,EAGhC,EAHgC,EAG5B,GAH4B,EAGvB,GAHuB,EAGlB,GAHkB,EAGb,GAHa,EAGR,GAHQ,EAGH,GAHG,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,GANgC,EAM3B,GAN2B,EAMtB,GANsB,EAMjB,GANiB,EAMZ,GANY,EAMP,GANO,EAMF,IANE,CAAhB,CAAzB;;AASA,YAAI0gB,oBAAoB,IAAI1gB,WAAJ,CAAgB,CACpC,CADoC,EAC/B,CAD+B,EAC1B,CAD0B,EACtB,EADsB,EACjB,EADiB,EACZ,EADY,EACP,EADO,EACF,EADE,EAEpC,EAFoC,EAE/B,EAF+B,EAE1B,EAF0B,EAErB,EAFqB,EAEhB,EAFgB,EAEX,EAFW,EAEP,GAFO,EAEF,GAFE,CAAhB,CAAxB;;AAKA,YAAI2gB,qBAAqB,IAAI3gB,WAAJ,CAAgB,CACrC,CADqC,EAChC,CADgC,EAC5B,EAD4B,EACvB,EADuB,EAClB,EADkB,EACb,EADa,EACR,EADQ,EACH,EADG,EAErC,EAFqC,EAEhC,EAFgC,EAE3B,EAF2B,EAEtB,EAFsB,EAElB,GAFkB,EAEb,GAFa,EAER,GAFQ,EAEH,GAFG,EAGrC,GAHqC,EAGhC,GAHgC,EAG3B,GAH2B,EAGtB,GAHsB,EAGjB,GAHiB,EAGZ,GAHY,EAGP,GAHO,EAGF,GAHE,EAIrC,GAJqC,EAIhC,GAJgC,EAI3B,GAJ2B,EAItB,GAJsB,EAIjB,GAJiB,EAIZ,GAJY,EAIP,GAJO,EAIF,GAJE,EAKrC,GALqC,EAKhC,GALgC,EAK3B,GAL2B,EAKtB,GALsB,EAKjB,GALiB,EAKZ,GALY,EAKP,GALO,EAKF,GALE,EAMrC,GANqC,EAMhC,GANgC,EAM3B,GAN2B,EAMtB,IANsB,CAAhB,CAAzB;;AASA,YAAI4gB,oBAAoB,IAAI5gB,WAAJ,CAAgB,CACpC,CADoC,EAC/B,CAD+B,EAC1B,CAD0B,EACtB,EADsB,EACjB,EADiB,EACZ,EADY,EACP,EADO,EACF,EADE,EAEpC,EAFoC,EAE/B,EAF+B,EAE1B,EAF0B,EAErB,EAFqB,EAEhB,EAFgB,EAEX,EAFW,EAEP,GAFO,EAEF,GAFE,CAAhB,CAAxB;;AAKA,YAAI6gB,oBAAoB,IAAI7gB,WAAJ,CAAgB,CACpC,CADoC,EAChC,EADgC,EAC3B,EAD2B,EACtB,EADsB,EACjB,EADiB,EACZ,EADY,EACP,EADO,EACF,EADE,EAEpC,EAFoC,EAEhC,GAFgC,EAE3B,GAF2B,EAEtB,GAFsB,EAEjB,GAFiB,EAEZ,GAFY,EAEP,GAFO,EAEF,GAFE,EAGpC,GAHoC,EAG/B,GAH+B,EAG1B,GAH0B,EAGrB,GAHqB,EAGhB,GAHgB,EAGX,GAHW,EAGN,GAHM,EAGD,GAHC,EAIpC,GAJoC,EAI/B,GAJ+B,EAI1B,GAJ0B,EAIrB,GAJqB,EAIhB,GAJgB,EAIX,GAJW,EAIN,GAJM,EAID,GAJC,EAKpC,GALoC,EAK/B,GAL+B,EAK1B,GAL0B,EAKrB,GALqB,EAKhB,GALgB,EAKX,GALW,EAKN,GALM,EAKD,GALC,EAMpC,IANoC,CAAhB,CAAxB;;AASA,YAAI8gB,mBAAmB,IAAI9gB,WAAJ,CAAgB,CACnC,CADmC,EAC9B,CAD8B,EACzB,CADyB,EACrB,EADqB,EAChB,EADgB,EACX,EADW,EACN,EADM,EACD,EADC,EAEnC,EAFmC,EAE9B,EAF8B,EAEzB,EAFyB,EAEpB,EAFoB,EAEf,EAFe,EAEV,EAFU,EAEN,GAFM,EAED,GAFC,CAAhB,CAAvB;;AAKA,YAAImf,kBAAkB,CAClBe,kBADkB,EAElBA,kBAFkB,EAGlBE,kBAHkB,EAIlBE,kBAJkB,EAKlBA,kBALkB,EAMlBE,kBANkB,EAOlBC,kBAPkB,EAQlBA,kBARkB,EASlBE,kBATkB,EAUlBA,kBAVkB,EAWlBA,kBAXkB,EAYlBE,iBAZkB,CAAtB;;AAeA,YAAI7B,iBAAiB,CACjBmB,iBADiB,EAEjBA,iBAFiB,EAGjBE,iBAHiB,EAIjBE,iBAJiB,EAKjBA,iBALiB,EAMjBA,iBANiB,EAOjBG,iBAPiB,EAQjBA,iBARiB,EASjBE,iBATiB,EAUjBA,iBAViB,EAWjBA,iBAXiB,EAYjBE,gBAZiB,CAArB;;AAeA,YAAI7B,yBAAyB,IAAI5jB,UAAJ,CAAe,CACxC,EADwC,EACpC,EADoC,EAChC,EADgC,EAC5B,EAD4B,EACxB,EADwB,EACpB,EADoB,EAChB,EADgB,EACZ,EADY,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,CAAf,CAA7B;;AAIA,YAAI+jB,wBAAwB,IAAI/jB,UAAJ,CAAe,CACvC,EADuC,EACnC,EADmC,EAC/B,EAD+B,EAC3B,EAD2B,EACvB,EADuB,EACnB,EADmB,EACf,EADe,EACX,EADW,EACP,EADO,EACH,EADG,EACC,EADD,EACK,EADL,CAAf,CAA5B;;AAIA;;;AAGA,YAAI4iB,oBAAqB,YAAW;AAChC,gBAAI1B,QAAQ,IAAInc,YAAJ,CAAiB,GAAjB,CAAZ;;AAEA,iBAAK,IAAItI,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAC1BykB,sBAAMzkB,CAAN,IAAW0B,KAAKkB,GAAL,CAAS,CAAT,EAAY,CAAC5C,IAAI,GAAL,IAAY,CAAxB,CAAX;AACH;;AAED,mBAAOykB,KAAP;AACH,SARuB,EAAxB;;AAWA;;;AAGA,YAAIqC,WAAY,YAAW;AACvB,gBAAIrC,QAAQ,IAAInc,YAAJ,CAAiB,IAAjB,CAAZ;AAAA,gBACI2gB,cAAc,IAAE,CADpB;;AAGA,iBAAK,IAAIjpB,IAAI,CAAb,EAAgBA,IAAI,IAApB,EAA0BA,GAA1B,EAA+B;AAC3BykB,sBAAMzkB,CAAN,IAAW0B,KAAKkB,GAAL,CAAS5C,CAAT,EAAYipB,WAAZ,CAAX;AACH;;AAED,mBAAOxE,KAAP;AACH,SATc,EAAf;;AAWA,YAAIvM,eAAe,IAAI7P,UAAJ,CAAe,CAC9B,KAD8B,EACvB,KADuB,EAChB,KADgB,EACT,KADS,EACF,KADE,EACK,KADL,EAE9B,KAF8B,EAEvB,KAFuB,EAEhB,KAFgB,EAET,KAFS,EAEF,KAFE,EAEK,IAFL,EAEW,IAFX,CAAf,CAAnB;;AAKA;AACA,YAAI6c,MAAO,YAAU;AACjB,qBAASA,GAAT,CAAa9M,MAAb,EAAqB;AACjB,qBAAK8Q,QAAL,GAAgBC,mBAAmB/Q,OAAOkE,WAA1B,CAAhB;AACA,qBAAK8M,KAAL,GAAa,IAAI/gB,UAAJ,CAAe,CAAf,CAAb;AACA,qBAAKnI,MAAL,GAAc,IAAIwD,KAAJ,CAAU,CAAV,CAAd;AACA,qBAAK2lB,SAAL,GAAiB,IAAI3lB,KAAJ,CAAU,CAAV,CAAjB;AACA,qBAAK4lB,KAAL,GAAa,IAAI5lB,KAAJ,CAAU,CAAV,CAAb;AACA,qBAAK6lB,IAAL,GAAY,IAAI7lB,KAAJ,CAAU,CAAV,CAAZ;;AAEA;AACA,qBAAK,IAAIwb,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,yBAAKhf,MAAL,CAAYgf,CAAZ,IAAiB,IAAI7W,UAAJ,CAAe,CAAf,CAAjB;AACA,yBAAKghB,SAAL,CAAenK,CAAf,IAAoB,IAAIxb,KAAJ,CAAU,CAAV,CAApB;AACA,yBAAK4lB,KAAL,CAAWpK,CAAX,IAAgB,IAAI7W,UAAJ,CAAe,CAAf,CAAhB;AACA,yBAAKkhB,IAAL,CAAUrK,CAAV,IAAe,IAAIxb,KAAJ,CAAU,CAAV,CAAf;;AAEA,yBAAK,IAAI8lB,OAAO,CAAhB,EAAmBA,OAAO,CAA1B,EAA6BA,MAA7B,EAAqC;AACjC,6BAAKD,IAAL,CAAUrK,CAAV,EAAasK,IAAb,IAAqB,IAAIlhB,YAAJ,CAAiBmhB,aAAjB,CAArB;AACH;AACJ;;AAED,qBAAKC,GAAL,GAAW,IAAIphB,YAAJ,CAAiBmhB,aAAjB,CAAX;AACA,qBAAK3oB,GAAL,GAAW,IAAIwH,YAAJ,CAAiBmhB,aAAjB,CAAX;AACH;;AAED,gBAAIA,gBAAgB,EAApB;AAAA,gBACIE,aAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADjB;AAAA,gBAEIC,YAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFhB;;AAIA,gBAAIC,eAAe,CAAC,UAAD,EAAa,CAAC,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,CAAnB;AAAA,gBAEIC,eAAe,CAAC,UAAD,EAAa,CAAC,UAAd,EAA0B,CAAC,UAA3B,EAAuC,CAAC,UAAxC,EACX,UADW,EACC,UADD,EACa,UADb,EACyB,UADzB,CAFnB;AAAA,gBAKIC,eAAe,CAAC,UAAD,EAAa,CAAC,UAAd,EAA0B,CAAC,UAA3B,EAAuC,CAAC,UAAxC,EACX,UADW,EACC,UADD,EACa,UADb,EACyB,UADzB,CALnB;AAAA,gBAQIC,eAAe,CAAC,UAAD,EAAa,CAAC,UAAd,EAA0B,CAAC,UAA3B,EAAuC,CAAC,UAAxC,EACX,CAAC,UADU,EACE,CAAC,UADH,EACe,CAAC,UADhB,EAC4B,CAAC,UAD7B,EAEX,UAFW,EAEC,UAFD,EAEa,UAFb,EAEyB,UAFzB,EAGX,UAHW,EAGC,UAHD,EAGa,UAHb,EAGyB,UAHzB,CARnB;AAAA,gBAaIC,aAAa,CAACH,YAAD,EAAeE,YAAf,EAA6BH,YAA7B,EAA2CE,YAA3C,CAbjB;;AAeA,gBAAIZ,qBAAqB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,CAAzB;AAAA,gBACIe,oBAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,CADxB;;AAGAhF,gBAAI9lB,SAAJ,CAAcuN,MAAd,GAAuB,UAAS3L,MAAT,EAAiBoY,IAAjB,EAAuB;AAC1C,oBAAI6N,cAAc7N,KAAK6N,WAAvB;AAAA,oBACI3lB,OAAO8X,KAAK+J,cAAL,KAAwB,CAAxB,GAA4BwG,UAA5B,GAAyCC,SADpD;;AAGA,qBAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAI+H,WAApB,EAAiC/H,GAAjC,EAAsC;AAClC,wBAAI,KAAKkK,KAAL,CAAWlK,CAAX,IAAgBle,OAAOe,IAAP,CAAYT,KAAK,CAAL,CAAZ,CAApB,EAA0C;AACtC,4BAAI6oB,UAAUnpB,OAAOe,IAAP,CAAY,CAAZ,CAAd;AAAA,4BACIqoB,UAAU,KAAKhB,KAAL,CAAWlK,CAAX,CADd;AAAA,4BAEImL,WAAW,KAAKnqB,MAAL,CAAYgf,CAAZ,CAFf;AAAA,4BAGIoL,UAAU,KAAKhB,KAAL,CAAWpK,CAAX,CAHd;AAAA,4BAIIqL,cAAc,KAAKlB,SAAL,CAAenK,CAAf,CAJlB;AAAA,4BAKIsL,SAAS,KAAKjB,IAAL,CAAUrK,CAAV,CALb;;AAOA,6BAAK,IAAIsK,OAAO,CAAhB,EAAmBA,OAAOY,OAA1B,EAAmCZ,MAAnC,EAA2C;AACvCa,qCAASb,IAAT,IAAiBxoB,OAAOe,IAAP,CAAYT,KAAK,CAAL,CAAZ,CAAjB;;AAEA,gCAAI,CAACgpB,QAAQd,IAAR,IAAgBxoB,OAAOe,IAAP,CAAYT,KAAK,CAAL,CAAZ,CAAjB,IAAyC,EAA7C,EACI,MAAM,IAAIwB,KAAJ,CAAU,8BAA8BwnB,QAAQd,IAAR,CAAxC,CAAN;;AAEJ,gCAAIc,QAAQd,IAAR,CAAJ,EAAmB;AACfe,4CAAYf,IAAZ,IAAoB,CAAC,CAACxoB,OAAOe,IAAP,CAAY,CAAZ,CAAtB;AACA,oCAAI0oB,eAAezpB,OAAOe,IAAP,CAAY,CAAZ,CAAnB;AAAA,oCACI2oB,UAAUP,UAAU,CAAV,GAAcM,YAD5B;AAAA,oCAEI3pB,MAAM,IAAI2pB,YAAJ,GAAmBN,OAF7B;AAAA,oCAGI1F,QAAQwF,WAAWnpB,GAAX,CAHZ;AAAA,oCAII6pB,eAAeL,QAAQd,IAAR,CAJnB;AAAA,oCAKIoB,cAAcJ,OAAOhB,IAAP,CALlB;;AAOA,qCAAK,IAAIxpB,IAAI,CAAb,EAAgBA,IAAI2qB,YAApB,EAAkC3qB,GAAlC;AACI4qB,gDAAY5qB,CAAZ,IAAiBykB,MAAMzjB,OAAOe,IAAP,CAAY2oB,OAAZ,CAAN,CAAjB;AADJ;AAEH;AAEJ;AACJ;AACJ;AACJ,aAnCD;;AAqCAxF,gBAAI9lB,SAAJ,CAAc8V,OAAd,GAAwB,UAASmD,GAAT,EAAc7U,IAAd,EAAoBmJ,MAApB,EAA4B;AAChD,oBAAIke,MAAMnpB,KAAK4T,GAAL,CAAS,KAAK4T,QAAd,EAAwB7Q,IAAIgB,MAA5B,CAAV;AAAA,oBACIqQ,MAAM,KAAKA,GADf;AAAA,oBAEI5oB,MAAM,KAAKA,GAFf;AAAA,oBAGIsY,OAAOf,IAAIe,IAHf;AAAA,oBAII6N,cAAc7N,KAAK6N,WAJvB;;AAMA,qBAAK,IAAI/H,IAAI,CAAb,EAAgBA,IAAI+H,WAApB,EAAiC/H,GAAjC,EAAsC;AAClC,wBAAI4L,SAAS1R,KAAKkN,QAAlB;AAAA,wBACI8D,UAAU,KAAKhB,KAAL,CAAWlK,CAAX,CADd;AAAA,wBAEImL,WAAW,KAAKnqB,MAAL,CAAYgf,CAAZ,CAFf;AAAA,wBAGIoL,UAAU,KAAKhB,KAAL,CAAWpK,CAAX,CAHd;AAAA,wBAIIsL,SAAS,KAAKjB,IAAL,CAAUrK,CAAV,CAJb;AAAA,wBAKIqL,cAAc,KAAKlB,SAAL,CAAenK,CAAf,CALlB;;AAOA,yBAAK,IAAIsK,OAAO,CAAhB,EAAmBA,OAAOY,OAA1B,EAAmCZ,MAAnC,EAA2C;AACvC,4BAAIuB,MAAMD,MAAV;AAAA,4BACIA,SAASppB,KAAK2T,GAAL,CAAS,CAAT,EAAYvU,MAAMupB,SAASb,IAAT,CAAlB,CADb;AAAA,4BAEIF,QAAQgB,QAAQd,IAAR,CAFZ;;AAIA,4BAAIF,UAAU,CAAd,EAAiB;;AAEjB;AACA,4BAAI0B,QAAQR,OAAOhB,IAAP,CAAZ;AACA,6BAAK,IAAIxpB,IAAI,CAAb,EAAgBA,IAAIspB,KAApB,EAA2BtpB,GAA3B,EAAgC;AAC5B,gCAAIirB,IAAI,CAACD,MAAMhrB,CAAN,CAAT;AACA0pB,gCAAI1pB,CAAJ,IAASirB,CAAT;;AAEA,iCAAK,IAAItN,IAAI,CAAR,EAAWpD,MAAOva,IAAI,CAAL,IAAW,CAAjC,EAAoC2d,IAAIpD,GAAxC,EAA6CoD,GAA7C,EAAkD;AAC9C,oCAAI6C,IAAIkJ,IAAI/L,CAAJ,CAAR;AAAA,oCACIoC,IAAI2J,IAAI1pB,IAAI,CAAJ,GAAQ2d,CAAZ,CADR;;AAGA+L,oCAAI/L,CAAJ,IAAS6C,IAAIyK,IAAIlL,CAAjB;AACA2J,oCAAI1pB,IAAI,CAAJ,GAAQ2d,CAAZ,IAAiBoC,IAAIkL,IAAIzK,CAAzB;AACH;AACJ;;AAED,4BAAI5R,QAAQwK,KAAKiB,UAAL,CAAgB3Y,KAAK4T,GAAL,CAASwV,MAAT,EAAiBD,GAAjB,CAAhB,CAAZ;AAAA,4BACItf,MAAM6N,KAAKiB,UAAL,CAAgB3Y,KAAK4T,GAAL,CAASyV,GAAT,EAAcF,GAAd,CAAhB,CADV;AAAA,4BAEI1mB,IAFJ;AAAA,4BAGI+mB,MAAM,CAHV;;AAKA,4BAAI,CAAC/mB,OAAOoH,MAAMqD,KAAd,KAAwB,CAA5B,EAA+B;;AAE/B,4BAAI2b,YAAYf,IAAZ,CAAJ,EAAuB;AACnB0B,kCAAM,CAAC,CAAP;AACAtc,oCAAQrD,MAAM,CAAd;AACH;;AAEDqD,iCAASsQ,IAAI,GAAb;;AAEA,4BAAIvS,MAAJ,EAAY;AACR;AACA,iCAAK,IAAImU,IAAI,CAAb,EAAgBA,IAAI3c,IAApB,EAA0B2c,KAAKlS,SAASsc,GAAxC,EAA6C;AACzC,qCAAK,IAAIlrB,IAAI,CAAb,EAAgBA,KAAK0B,KAAK4T,GAAL,CAASwL,CAAT,EAAYwI,KAAZ,CAArB,EAAyCtpB,GAAzC,EAA8C;AAC1CwD,yCAAKoL,KAAL,KAAepL,KAAKoL,QAAQ5O,IAAIkrB,GAAjB,IAAwBxB,IAAI1pB,IAAI,CAAR,CAAvC;AACH;AACJ;AACJ,yBAPD,MAOO;AACH;AACA,iCAAK,IAAI8gB,IAAI,CAAb,EAAgBA,IAAI3c,IAApB,EAA0B2c,KAAKlS,SAASsc,GAAxC,EAA6C;AACzCpqB,oCAAI,CAAJ,IAAS0C,KAAKoL,KAAL,CAAT;;AAEA,qCAAK,IAAI5O,IAAI,CAAb,EAAgBA,KAAK0B,KAAK4T,GAAL,CAASwL,CAAT,EAAYwI,KAAZ,CAArB,EAAyCtpB,GAAzC;AACIwD,yCAAKoL,KAAL,KAAe9N,IAAId,CAAJ,IAAS0pB,IAAI1pB,IAAI,CAAR,CAAxB;AADJ,iCAGA,KAAK,IAAIA,IAAIspB,KAAb,EAAoBtpB,IAAI,CAAxB,EAA2BA,GAA3B;AACIc,wCAAId,CAAJ,IAASc,IAAId,IAAI,CAAR,CAAT;AADJ;AAEH;AACJ;AACJ;AACJ;AACJ,aAxED;;AA0EA,mBAAOklB,GAAP;AACH,SA/JS,EAAV;AAgKH,KApyID,EAoyIG1mB,IApyIH;AAqyIH","file":"AAC.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\VideoSimple\\js\\lib","sourcesContent":["module.exports = aac;\r\nfunction aac(gwin){\r\n    (function (global) {\r\n        var AV = global.AV = {};\r\n        var __hasProp = {}.hasOwnProperty,\r\n            __extends = function (child, parent) {\r\n                for (var key in parent) {\r\n                    if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n                }\r\n    \r\n                function ctor() {\r\n                    this.constructor = child;\r\n                }\r\n    \r\n                ctor.prototype = parent.prototype;\r\n                child.prototype = new ctor();\r\n                child.__super__ = parent.prototype;\r\n                return child;\r\n            },\r\n            __slice = [].slice,\r\n            __bind = function (fn, me) {\r\n                return function () {\r\n                    return fn.apply(me, arguments);\r\n                };\r\n            }, __indexOf = [].indexOf || function (item) {\r\n                for (var i = 0, l = this.length; i < l; i++) {\r\n                    if (i in this && this[i] === item) return i;\r\n                }\r\n                return -1;\r\n            };\r\n    \r\n        var Base = AV.Base = (function () {\r\n            var fnTest;\r\n    \r\n            function Base() {\r\n            }\r\n    \r\n            fnTest = /\\b_super\\b/;\r\n            Base.extend = function (prop) {\r\n                var Class, fn, key, keys, _ref, _super;\r\n                Class = (function (_super) {\r\n                    __extends(Class, _super);\r\n    \r\n                    function Class() {\r\n                        return Class.__super__.constructor.apply(this, arguments);\r\n                    }\r\n    \r\n                    return Class;\r\n                })(this);\r\n                if (typeof prop === 'function') {\r\n                    keys = Object.keys(Class.prototype);\r\n                    prop.call(Class, Class);\r\n                    prop = {};\r\n                    _ref = Class.prototype;\r\n                    for (key in _ref) {\r\n                        fn = _ref[key];\r\n                        if (__indexOf.call(keys, key) < 0) {\r\n                            prop[key] = fn;\r\n                        }\r\n                    }\r\n                }\r\n                _super = Class.__super__;\r\n                for (key in prop) {\r\n                    fn = prop[key];\r\n                    if (typeof fn === 'function' && fnTest.test(fn)) {\r\n                        (function (key, fn) {\r\n                            return Class.prototype[key] = function () {\r\n                                var ret, tmp;\r\n                                tmp = this._super;\r\n                                this._super = _super[key];\r\n                                ret = fn.apply(this, arguments);\r\n                                this._super = tmp;\r\n                                return ret;\r\n                            };\r\n                        })(key, fn);\r\n                    } else {\r\n                        Class.prototype[key] = fn;\r\n                    }\r\n                }\r\n                return Class;\r\n            };\r\n            return Base;\r\n        })();\r\n    \r\n        var Bitstream = AV.Bitstream = (function () {\r\n            function Bitstream(stream) {\r\n                this.stream = stream;\r\n                this.bitPosition = 0;\r\n            }\r\n    \r\n            Bitstream.prototype.copy = function () {\r\n                var result;\r\n                result = new Bitstream(this.stream.copy());\r\n                result.bitPosition = this.bitPosition;\r\n                return result;\r\n            };\r\n    \r\n            Bitstream.prototype.offset = function () {\r\n                return 8 * this.stream.offset + this.bitPosition;\r\n            };\r\n    \r\n            Bitstream.prototype.available = function (bits) {\r\n                return this.stream.available((bits + 8 - this.bitPosition) / 8);\r\n            };\r\n    \r\n            Bitstream.prototype.advance = function (bits) {\r\n                var pos;\r\n                pos = this.bitPosition + bits;\r\n                this.stream.advance(pos >> 3);\r\n                return this.bitPosition = pos & 7;\r\n            };\r\n    \r\n            Bitstream.prototype.rewind = function (bits) {\r\n                var pos;\r\n                pos = this.bitPosition - bits;\r\n                this.stream.rewind(Math.abs(pos >> 3));\r\n                return this.bitPosition = pos & 7;\r\n            };\r\n    \r\n            Bitstream.prototype.seek = function (offset) {\r\n                var curOffset;\r\n                curOffset = this.offset();\r\n                if (offset > curOffset) {\r\n                    return this.advance(offset - curOffset);\r\n                } else if (offset < curOffset) {\r\n                    return this.rewind(curOffset - offset);\r\n                }\r\n            };\r\n    \r\n            Bitstream.prototype.align = function () {\r\n                if (this.bitPosition !== 0) {\r\n                    this.bitPosition = 0;\r\n                    return this.stream.advance(1);\r\n                }\r\n            };\r\n    \r\n            Bitstream.prototype.read = function (bits, signed) {\r\n                var a, a0, a1, a2, a3, a4, mBits;\r\n                if (bits === 0) {\r\n                    return 0;\r\n                }\r\n                mBits = bits + this.bitPosition;\r\n                if (mBits <= 8) {\r\n                    a = ((this.stream.peekUInt8() << this.bitPosition) & 0xff) >>> (8 - bits);\r\n                } else if (mBits <= 16) {\r\n                    a = ((this.stream.peekUInt16() << this.bitPosition) & 0xffff) >>> (16 - bits);\r\n                } else if (mBits <= 24) {\r\n                    a = ((this.stream.peekUInt24() << this.bitPosition) & 0xffffff) >>> (24 - bits);\r\n                } else if (mBits <= 32) {\r\n                    a = (this.stream.peekUInt32() << this.bitPosition) >>> (32 - bits);\r\n                } else if (mBits <= 40) {\r\n                    a0 = this.stream.peekUInt8(0) * 0x0100000000;\r\n                    a1 = this.stream.peekUInt8(1) << 24 >>> 0;\r\n                    a2 = this.stream.peekUInt8(2) << 16;\r\n                    a3 = this.stream.peekUInt8(3) << 8;\r\n                    a4 = this.stream.peekUInt8(4);\r\n                    a = a0 + a1 + a2 + a3 + a4;\r\n                    a %= Math.pow(2, 40 - this.bitPosition);\r\n                    a = Math.floor(a / Math.pow(2, 40 - this.bitPosition - bits));\r\n                } else {\r\n                    throw new Error(\"Too many bits!\");\r\n                }\r\n                if (signed) {\r\n                    if (mBits < 32) {\r\n                        if (a >>> (bits - 1)) {\r\n                            a = ((1 << bits >>> 0) - a) * -1;\r\n                        }\r\n                    } else {\r\n                        if (a / Math.pow(2, bits - 1) | 0) {\r\n                            a = (Math.pow(2, bits) - a) * -1;\r\n                        }\r\n                    }\r\n                }\r\n                this.advance(bits);\r\n                return a;\r\n            };\r\n    \r\n            Bitstream.prototype.peek = function (bits, signed) {\r\n                var a, a0, a1, a2, a3, a4, mBits;\r\n                if (bits === 0) {\r\n                    return 0;\r\n                }\r\n                mBits = bits + this.bitPosition;\r\n                if (mBits <= 8) {\r\n                    a = ((this.stream.peekUInt8() << this.bitPosition) & 0xff) >>> (8 - bits);\r\n                } else if (mBits <= 16) {\r\n                    a = ((this.stream.peekUInt16() << this.bitPosition) & 0xffff) >>> (16 - bits);\r\n                } else if (mBits <= 24) {\r\n                    a = ((this.stream.peekUInt24() << this.bitPosition) & 0xffffff) >>> (24 - bits);\r\n                } else if (mBits <= 32) {\r\n                    a = (this.stream.peekUInt32() << this.bitPosition) >>> (32 - bits);\r\n                } else if (mBits <= 40) {\r\n                    a0 = this.stream.peekUInt8(0) * 0x0100000000;\r\n                    a1 = this.stream.peekUInt8(1) << 24 >>> 0;\r\n                    a2 = this.stream.peekUInt8(2) << 16;\r\n                    a3 = this.stream.peekUInt8(3) << 8;\r\n                    a4 = this.stream.peekUInt8(4);\r\n                    a = a0 + a1 + a2 + a3 + a4;\r\n                    a %= Math.pow(2, 40 - this.bitPosition);\r\n                    a = Math.floor(a / Math.pow(2, 40 - this.bitPosition - bits));\r\n                } else {\r\n                    throw new Error(\"Too many bits!\");\r\n                }\r\n                if (signed) {\r\n                    if (mBits < 32) {\r\n                        if (a >>> (bits - 1)) {\r\n                            a = ((1 << bits >>> 0) - a) * -1;\r\n                        }\r\n                    } else {\r\n                        if (a / Math.pow(2, bits - 1) | 0) {\r\n                            a = (Math.pow(2, bits) - a) * -1;\r\n                        }\r\n                    }\r\n                }\r\n                return a;\r\n            };\r\n    \r\n            Bitstream.prototype.readLSB = function (bits, signed) {\r\n                var a, mBits;\r\n                if (bits === 0) {\r\n                    return 0;\r\n                }\r\n                if (bits > 40) {\r\n                    throw new Error(\"Too many bits!\");\r\n                }\r\n                mBits = bits + this.bitPosition;\r\n                a = (this.stream.peekUInt8(0)) >>> this.bitPosition;\r\n                if (mBits > 8) {\r\n                    a |= (this.stream.peekUInt8(1)) << (8 - this.bitPosition);\r\n                }\r\n                if (mBits > 16) {\r\n                    a |= (this.stream.peekUInt8(2)) << (16 - this.bitPosition);\r\n                }\r\n                if (mBits > 24) {\r\n                    a += (this.stream.peekUInt8(3)) << (24 - this.bitPosition) >>> 0;\r\n                }\r\n                if (mBits > 32) {\r\n                    a += (this.stream.peekUInt8(4)) * Math.pow(2, 32 - this.bitPosition);\r\n                }\r\n                if (mBits >= 32) {\r\n                    a %= Math.pow(2, bits);\r\n                } else {\r\n                    a &= (1 << bits) - 1;\r\n                }\r\n                if (signed) {\r\n                    if (mBits < 32) {\r\n                        if (a >>> (bits - 1)) {\r\n                            a = ((1 << bits >>> 0) - a) * -1;\r\n                        }\r\n                    } else {\r\n                        if (a / Math.pow(2, bits - 1) | 0) {\r\n                            a = (Math.pow(2, bits) - a) * -1;\r\n                        }\r\n                    }\r\n                }\r\n                this.advance(bits);\r\n                return a;\r\n            };\r\n    \r\n            Bitstream.prototype.peekLSB = function (bits, signed) {\r\n                var a, mBits;\r\n                if (bits === 0) {\r\n                    return 0;\r\n                }\r\n                if (bits > 40) {\r\n                    throw new Error(\"Too many bits!\");\r\n                }\r\n                mBits = bits + this.bitPosition;\r\n                a = (this.stream.peekUInt8(0)) >>> this.bitPosition;\r\n                if (mBits > 8) {\r\n                    a |= (this.stream.peekUInt8(1)) << (8 - this.bitPosition);\r\n                }\r\n                if (mBits > 16) {\r\n                    a |= (this.stream.peekUInt8(2)) << (16 - this.bitPosition);\r\n                }\r\n                if (mBits > 24) {\r\n                    a += (this.stream.peekUInt8(3)) << (24 - this.bitPosition) >>> 0;\r\n                }\r\n                if (mBits > 32) {\r\n                    a += (this.stream.peekUInt8(4)) * Math.pow(2, 32 - this.bitPosition);\r\n                }\r\n                if (mBits >= 32) {\r\n                    a %= Math.pow(2, bits);\r\n                } else {\r\n                    a &= (1 << bits) - 1;\r\n                }\r\n                if (signed) {\r\n                    if (mBits < 32) {\r\n                        if (a >>> (bits - 1)) {\r\n                            a = ((1 << bits >>> 0) - a) * -1;\r\n                        }\r\n                    } else {\r\n                        if (a / Math.pow(2, bits - 1) | 0) {\r\n                            a = (Math.pow(2, bits) - a) * -1;\r\n                        }\r\n                    }\r\n                }\r\n                return a;\r\n            };\r\n    \r\n            return Bitstream;\r\n        })();\r\n    \r\n        var AVBuffer = AV.Buffer = (function () {\r\n            var BlobBuilder, URL;\r\n    \r\n            function AVBuffer(input) {\r\n                var _ref;\r\n                if (input instanceof Uint8Array) {\r\n                    this.data = input;\r\n                } else if (input instanceof ArrayBuffer || Array.isArray(input) || typeof input === 'number' || ((_ref = global.Buffer) != null ? _ref.isBuffer(input) : void 0)) {\r\n                    this.data = new Uint8Array(input);\r\n                } else if (input.buffer instanceof ArrayBuffer) {\r\n                    this.data = new Uint8Array(input.buffer, input.byteOffset, input.length * input.BYTES_PER_ELEMENT);\r\n                } else if (input instanceof AVBuffer) {\r\n                    this.data = input.data;\r\n                } else {\r\n                    throw new Error(\"Constructing buffer with unknown type.\");\r\n                }\r\n                this.length = this.data.length;\r\n                this.next = null;\r\n                this.prev = null;\r\n            }\r\n    \r\n            AVBuffer.allocate = function (size) {\r\n                return new AVBuffer(size);\r\n            };\r\n    \r\n            AVBuffer.prototype.copy = function () {\r\n                return new AVBuffer(new Uint8Array(this.data));\r\n            };\r\n    \r\n            AVBuffer.prototype.slice = function (position, length) {\r\n                if (length == null) {\r\n                    length = this.length;\r\n                }\r\n                if (position === 0 && length >= this.length) {\r\n                    return new AVBuffer(this.data);\r\n                } else {\r\n                    return new AVBuffer(this.data.subarray(position, position + length));\r\n                }\r\n            };\r\n    \r\n            BlobBuilder = global.BlobBuilder || global.MozBlobBuilder || global.WebKitBlobBuilder;\r\n    \r\n            URL = global.URL || global.webkitURL || global.mozURL;\r\n    \r\n            AVBuffer.makeBlob = function (data, type) {\r\n                var bb;\r\n                if (type == null) {\r\n                    type = 'application/octet-stream';\r\n                }\r\n                try {\r\n                    return new Blob([data], {\r\n                        type: type\r\n                    });\r\n                } catch (_error) {\r\n                }\r\n                if (BlobBuilder != null) {\r\n                    bb = new BlobBuilder;\r\n                    bb.append(data);\r\n                    return bb.getBlob(type);\r\n                }\r\n                return null;\r\n            };\r\n    \r\n            AVBuffer.makeBlobURL = function (data, type) {\r\n                return URL != null ? URL.createObjectURL(this.makeBlob(data, type)) : void 0;\r\n            };\r\n    \r\n            AVBuffer.revokeBlobURL = function (url) {\r\n                return URL != null ? URL.revokeObjectURL(url) : void 0;\r\n            };\r\n    \r\n            AVBuffer.prototype.toBlob = function () {\r\n                return AVBuffer.makeBlob(this.data.buffer);\r\n            };\r\n    \r\n            AVBuffer.prototype.toBlobURL = function () {\r\n                return AVBuffer.makeBlobURL(this.data.buffer);\r\n            };\r\n    \r\n            return AVBuffer;\r\n        })();\r\n    \r\n        var UnderflowError = AV.UnderflowError = (function (_super) {\r\n            __extends(UnderflowError, _super);\r\n    \r\n            function UnderflowError() {\r\n                UnderflowError.__super__.constructor.apply(this, arguments);\r\n                this.name = 'UnderflowError';\r\n                this.stack = new Error().stack;\r\n            }\r\n    \r\n            return UnderflowError;\r\n        })(Error);\r\n    \r\n        var BufferList = AV.BufferList = (function () {\r\n            function BufferList() {\r\n                this.first = null;\r\n                this.last = null;\r\n                this.numBuffers = 0;\r\n                this.availableBytes = 0;\r\n                this.availableBuffers = 0;\r\n            }\r\n    \r\n            BufferList.prototype.copy = function () {\r\n                var result;\r\n                result = new BufferList;\r\n                result.first = this.first;\r\n                result.last = this.last;\r\n                result.numBuffers = this.numBuffers;\r\n                result.availableBytes = this.availableBytes;\r\n                result.availableBuffers = this.availableBuffers;\r\n                return result;\r\n            };\r\n    \r\n            BufferList.prototype.append = function (buffer) {\r\n                var _ref;\r\n                buffer.prev = this.last;\r\n                if ((_ref = this.last) != null) {\r\n                    _ref.next = buffer;\r\n                }\r\n                this.last = buffer;\r\n                if (this.first == null) {\r\n                    this.first = buffer;\r\n                }\r\n                this.availableBytes += buffer.length;\r\n                this.availableBuffers++;\r\n                return this.numBuffers++;\r\n            };\r\n    \r\n            BufferList.prototype.advance = function () {\r\n                if (this.first) {\r\n                    this.availableBytes -= this.first.length;\r\n                    this.availableBuffers--;\r\n                    this.first = this.first.next;\r\n                    return this.first != null;\r\n                }\r\n                return false;\r\n            };\r\n    \r\n            BufferList.prototype.rewind = function () {\r\n                var _ref;\r\n                if (this.first && !this.first.prev) {\r\n                    return false;\r\n                }\r\n                this.first = ((_ref = this.first) != null ? _ref.prev : void 0) || this.last;\r\n                if (this.first) {\r\n                    this.availableBytes += this.first.length;\r\n                    this.availableBuffers++;\r\n                }\r\n                return this.first != null;\r\n            };\r\n    \r\n            BufferList.prototype.reset = function () {\r\n                var _results;\r\n                _results = [];\r\n                while (this.rewind()) {\r\n                    continue;\r\n                }\r\n                return _results;\r\n            };\r\n    \r\n            return BufferList;\r\n    \r\n        })();\r\n    \r\n        var EventEmitter = AV.BufferList = (function (_super) {\r\n            __extends(EventEmitter, _super);\r\n    \r\n            function EventEmitter() {\r\n                return EventEmitter.__super__.constructor.apply(this, arguments);\r\n            }\r\n    \r\n            EventEmitter.prototype.on = function (event, fn) {\r\n                var _base;\r\n                if (this.events == null) {\r\n                    this.events = {};\r\n                }\r\n                if ((_base = this.events)[event] == null) {\r\n                    _base[event] = [];\r\n                }\r\n                return this.events[event].push(fn);\r\n            };\r\n    \r\n            EventEmitter.prototype.off = function (event, fn) {\r\n                var events, index, _ref;\r\n                if (this.events == null) {\r\n                    return;\r\n                }\r\n                if ((_ref = this.events) != null ? _ref[event] : void 0) {\r\n                    if (fn != null) {\r\n                        index = this.events[event].indexOf(fn);\r\n                        if (~index) {\r\n                            return this.events[event].splice(index, 1);\r\n                        }\r\n                    } else {\r\n                        return this.events[event];\r\n                    }\r\n                } else if (event == null) {\r\n                    return events = {};\r\n                }\r\n            };\r\n    \r\n            EventEmitter.prototype.once = function (event, fn) {\r\n                var cb;\r\n                return this.on(event, cb = function () {\r\n                    this.off(event, cb);\r\n                    return fn.apply(this, arguments);\r\n                });\r\n            };\r\n    \r\n            EventEmitter.prototype.emit = function () {\r\n                var args, event, fn, _i, _len, _ref, _ref1;\r\n                event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\r\n                if (!((_ref = this.events) != null ? _ref[event] : void 0)) {\r\n                    return;\r\n                }\r\n                _ref1 = this.events[event].slice();\r\n                for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n                    fn = _ref1[_i];\r\n                    fn.apply(this, args);\r\n                }\r\n            };\r\n    \r\n            return EventEmitter;\r\n    \r\n        })(Base);\r\n    \r\n        var Stream = AV.Stream = (function () {\r\n            var buf, decodeString, float32, float64, float64Fallback, float80, int16, int32, int8, nativeEndian, uint16,\r\n                uint32, uint8;\r\n    \r\n            buf = new ArrayBuffer(16);\r\n    \r\n            uint8 = new Uint8Array(buf);\r\n    \r\n            int8 = new Int8Array(buf);\r\n    \r\n            uint16 = new Uint16Array(buf);\r\n    \r\n            int16 = new Int16Array(buf);\r\n    \r\n            uint32 = new Uint32Array(buf);\r\n    \r\n            int32 = new Int32Array(buf);\r\n    \r\n            float32 = new Float32Array(buf);\r\n    \r\n            if (typeof Float64Array !== \"undefined\" && Float64Array !== null) {\r\n                float64 = new Float64Array(buf);\r\n            }\r\n    \r\n            nativeEndian = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] === 0x3412;\r\n    \r\n            function Stream(list) {\r\n                this.list = list;\r\n                this.localOffset = 0;\r\n                this.offset = 0;\r\n            }\r\n    \r\n            Stream.fromBuffer = function (buffer) {\r\n                var list;\r\n                list = new BufferList;\r\n                list.append(buffer);\r\n                return new Stream(list);\r\n            };\r\n    \r\n            Stream.prototype.copy = function () {\r\n                var result;\r\n                result = new Stream(this.list.copy());\r\n                result.localOffset = this.localOffset;\r\n                result.offset = this.offset;\r\n                return result;\r\n            };\r\n    \r\n            Stream.prototype.available = function (bytes) {\r\n                return bytes <= this.list.availableBytes - this.localOffset;\r\n            };\r\n    \r\n            Stream.prototype.remainingBytes = function () {\r\n                return this.list.availableBytes - this.localOffset;\r\n            };\r\n    \r\n            Stream.prototype.advance = function (bytes) {\r\n                if (!this.available(bytes)) {\r\n                    throw new UnderflowError();\r\n                }\r\n                this.localOffset += bytes;\r\n                this.offset += bytes;\r\n                while (this.list.first && this.localOffset >= this.list.first.length) {\r\n                    this.localOffset -= this.list.first.length;\r\n                    this.list.advance();\r\n                }\r\n                return this;\r\n            };\r\n    \r\n            Stream.prototype.rewind = function (bytes) {\r\n                if (bytes > this.offset) {\r\n                    throw new UnderflowError();\r\n                }\r\n                if (!this.list.first) {\r\n                    this.list.rewind();\r\n                    this.localOffset = this.list.first.length;\r\n                }\r\n                this.localOffset -= bytes;\r\n                this.offset -= bytes;\r\n                while (this.list.first.prev && this.localOffset < 0) {\r\n                    this.list.rewind();\r\n                    this.localOffset += this.list.first.length;\r\n                }\r\n                return this;\r\n            };\r\n    \r\n            Stream.prototype.seek = function (position) {\r\n                if (position > this.offset) {\r\n                    return this.advance(position - this.offset);\r\n                } else if (position < this.offset) {\r\n                    return this.rewind(this.offset - position);\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.readUInt8 = function () {\r\n                var a;\r\n                if (!this.available(1)) {\r\n                    throw new UnderflowError();\r\n                }\r\n                a = this.list.first.data[this.localOffset];\r\n                this.localOffset += 1;\r\n                this.offset += 1;\r\n                if (this.localOffset === this.list.first.length) {\r\n                    this.localOffset = 0;\r\n                    this.list.advance();\r\n                }\r\n                return a;\r\n            };\r\n    \r\n            Stream.prototype.peekUInt8 = function (offset) {\r\n                var buffer;\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                if (!this.available(offset + 1)) {\r\n                    throw new UnderflowError();\r\n                }\r\n                offset = this.localOffset + offset;\r\n                buffer = this.list.first;\r\n                while (buffer) {\r\n                    if (buffer.length > offset) {\r\n                        return buffer.data[offset];\r\n                    }\r\n                    offset -= buffer.length;\r\n                    buffer = buffer.next;\r\n                }\r\n                return 0;\r\n            };\r\n    \r\n            Stream.prototype.read = function (bytes, littleEndian) {\r\n                var i, _i, _j, _ref;\r\n                if (littleEndian == null) {\r\n                    littleEndian = false;\r\n                }\r\n                if (littleEndian === nativeEndian) {\r\n                    for (i = _i = 0; _i < bytes; i = _i += 1) {\r\n                        uint8[i] = this.readUInt8();\r\n                    }\r\n                } else {\r\n                    for (i = _j = _ref = bytes - 1; _j >= 0; i = _j += -1) {\r\n                        uint8[i] = this.readUInt8();\r\n                    }\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.peek = function (bytes, offset, littleEndian) {\r\n                var i, _i, _j;\r\n                if (littleEndian == null) {\r\n                    littleEndian = false;\r\n                }\r\n                if (littleEndian === nativeEndian) {\r\n                    for (i = _i = 0; _i < bytes; i = _i += 1) {\r\n                        uint8[i] = this.peekUInt8(offset + i);\r\n                    }\r\n                } else {\r\n                    for (i = _j = 0; _j < bytes; i = _j += 1) {\r\n                        uint8[bytes - i - 1] = this.peekUInt8(offset + i);\r\n                    }\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.readInt8 = function () {\r\n                this.read(1);\r\n                return int8[0];\r\n            };\r\n    \r\n            Stream.prototype.peekInt8 = function (offset) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(1, offset);\r\n                return int8[0];\r\n            };\r\n    \r\n            Stream.prototype.readUInt16 = function (littleEndian) {\r\n                this.read(2, littleEndian);\r\n                return uint16[0];\r\n            };\r\n    \r\n            Stream.prototype.peekUInt16 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(2, offset, littleEndian);\r\n                return uint16[0];\r\n            };\r\n    \r\n            Stream.prototype.readInt16 = function (littleEndian) {\r\n                this.read(2, littleEndian);\r\n                return int16[0];\r\n            };\r\n    \r\n            Stream.prototype.peekInt16 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(2, offset, littleEndian);\r\n                return int16[0];\r\n            };\r\n    \r\n            Stream.prototype.readUInt24 = function (littleEndian) {\r\n                if (littleEndian) {\r\n                    return this.readUInt16(true) + (this.readUInt8() << 16);\r\n                } else {\r\n                    return (this.readUInt16() << 8) + this.readUInt8();\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.peekUInt24 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                if (littleEndian) {\r\n                    return this.peekUInt16(offset, true) + (this.peekUInt8(offset + 2) << 16);\r\n                } else {\r\n                    return (this.peekUInt16(offset) << 8) + this.peekUInt8(offset + 2);\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.readInt24 = function (littleEndian) {\r\n                if (littleEndian) {\r\n                    return this.readUInt16(true) + (this.readInt8() << 16);\r\n                } else {\r\n                    return (this.readInt16() << 8) + this.readUInt8();\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.peekInt24 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                if (littleEndian) {\r\n                    return this.peekUInt16(offset, true) + (this.peekInt8(offset + 2) << 16);\r\n                } else {\r\n                    return (this.peekInt16(offset) << 8) + this.peekUInt8(offset + 2);\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.readUInt32 = function (littleEndian) {\r\n                this.read(4, littleEndian);\r\n                return uint32[0];\r\n            };\r\n    \r\n            Stream.prototype.peekUInt32 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(4, offset, littleEndian);\r\n                return uint32[0];\r\n            };\r\n    \r\n            Stream.prototype.readInt32 = function (littleEndian) {\r\n                this.read(4, littleEndian);\r\n                return int32[0];\r\n            };\r\n    \r\n            Stream.prototype.peekInt32 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(4, offset, littleEndian);\r\n                return int32[0];\r\n            };\r\n    \r\n            Stream.prototype.readFloat32 = function (littleEndian) {\r\n                this.read(4, littleEndian);\r\n                return float32[0];\r\n            };\r\n    \r\n            Stream.prototype.peekFloat32 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(4, offset, littleEndian);\r\n                return float32[0];\r\n            };\r\n    \r\n            Stream.prototype.readFloat64 = function (littleEndian) {\r\n                this.read(8, littleEndian);\r\n                if (float64) {\r\n                    return float64[0];\r\n                } else {\r\n                    return float64Fallback();\r\n                }\r\n            };\r\n    \r\n            float64Fallback = function () {\r\n                var exp, frac, high, low, out, sign;\r\n                low = uint32[0], high = uint32[1];\r\n                if (!high || high === 0x80000000) {\r\n                    return 0.0;\r\n                }\r\n                sign = 1 - (high >>> 31) * 2;\r\n                exp = (high >>> 20) & 0x7ff;\r\n                frac = high & 0xfffff;\r\n                if (exp === 0x7ff) {\r\n                    if (frac) {\r\n                        return NaN;\r\n                    }\r\n                    return sign * Infinity;\r\n                }\r\n                exp -= 1023;\r\n                out = (frac | 0x100000) * Math.pow(2, exp - 20);\r\n                out += low * Math.pow(2, exp - 52);\r\n                return sign * out;\r\n            };\r\n    \r\n            Stream.prototype.peekFloat64 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(8, offset, littleEndian);\r\n                if (float64) {\r\n                    return float64[0];\r\n                } else {\r\n                    return float64Fallback();\r\n                }\r\n            };\r\n    \r\n            Stream.prototype.readFloat80 = function (littleEndian) {\r\n                this.read(10, littleEndian);\r\n                return float80();\r\n            };\r\n    \r\n            float80 = function () {\r\n                var a0, a1, exp, high, low, out, sign;\r\n                high = uint32[0], low = uint32[1];\r\n                a0 = uint8[9];\r\n                a1 = uint8[8];\r\n                sign = 1 - (a0 >>> 7) * 2;\r\n                exp = ((a0 & 0x7F) << 8) | a1;\r\n                if (exp === 0 && low === 0 && high === 0) {\r\n                    return 0;\r\n                }\r\n                if (exp === 0x7fff) {\r\n                    if (low === 0 && high === 0) {\r\n                        return sign * Infinity;\r\n                    }\r\n                    return NaN;\r\n                }\r\n                exp -= 16383;\r\n                out = low * Math.pow(2, exp - 31);\r\n                out += high * Math.pow(2, exp - 63);\r\n                return sign * out;\r\n            };\r\n    \r\n            Stream.prototype.peekFloat80 = function (offset, littleEndian) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                this.peek(10, offset, littleEndian);\r\n                return float80();\r\n            };\r\n    \r\n            Stream.prototype.readBuffer = function (length) {\r\n                var i, result, to, _i;\r\n                result = AVBuffer.allocate(length);\r\n                to = result.data;\r\n                for (i = _i = 0; _i < length; i = _i += 1) {\r\n                    to[i] = this.readUInt8();\r\n                }\r\n                return result;\r\n            };\r\n    \r\n            Stream.prototype.peekBuffer = function (offset, length) {\r\n                var i, result, to, _i;\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                result = AVBuffer.allocate(length);\r\n                to = result.data;\r\n                for (i = _i = 0; _i < length; i = _i += 1) {\r\n                    to[i] = this.peekUInt8(offset + i);\r\n                }\r\n                return result;\r\n            };\r\n    \r\n            Stream.prototype.readSingleBuffer = function (length) {\r\n                var result;\r\n                result = this.list.first.slice(this.localOffset, length);\r\n                this.advance(result.length);\r\n                return result;\r\n            };\r\n    \r\n            Stream.prototype.peekSingleBuffer = function (offset, length) {\r\n                var result;\r\n                result = this.list.first.slice(this.localOffset + offset, length);\r\n                return result;\r\n            };\r\n    \r\n            Stream.prototype.readString = function (length, encoding) {\r\n                if (encoding == null) {\r\n                    encoding = 'ascii';\r\n                }\r\n                return decodeString.call(this, 0, length, encoding, true);\r\n            };\r\n    \r\n            Stream.prototype.peekString = function (offset, length, encoding) {\r\n                if (offset == null) {\r\n                    offset = 0;\r\n                }\r\n                if (encoding == null) {\r\n                    encoding = 'ascii';\r\n                }\r\n                return decodeString.call(this, offset, length, encoding, false);\r\n            };\r\n    \r\n            decodeString = function (offset, length, encoding, advance) {\r\n                var b1, b2, b3, b4, bom, c, end, littleEndian, nullEnd, pt, result, w1, w2;\r\n                encoding = encoding.toLowerCase();\r\n                nullEnd = length === null ? 0 : -1;\r\n                if (length == null) {\r\n                    length = Infinity;\r\n                }\r\n                end = offset + length;\r\n                result = '';\r\n                switch (encoding) {\r\n                    case 'ascii':\r\n                    case 'latin1':\r\n                        while (offset < end && (c = this.peekUInt8(offset++)) !== nullEnd) {\r\n                            result += String.fromCharCode(c);\r\n                        }\r\n                        break;\r\n                    case 'utf8':\r\n                    case 'utf-8':\r\n                        while (offset < end && (b1 = this.peekUInt8(offset++)) !== nullEnd) {\r\n                            if ((b1 & 0x80) === 0) {\r\n                                result += String.fromCharCode(b1);\r\n                            } else if ((b1 & 0xe0) === 0xc0) {\r\n                                b2 = this.peekUInt8(offset++) & 0x3f;\r\n                                result += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\r\n                            } else if ((b1 & 0xf0) === 0xe0) {\r\n                                b2 = this.peekUInt8(offset++) & 0x3f;\r\n                                b3 = this.peekUInt8(offset++) & 0x3f;\r\n                                result += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\r\n                            } else if ((b1 & 0xf8) === 0xf0) {\r\n                                b2 = this.peekUInt8(offset++) & 0x3f;\r\n                                b3 = this.peekUInt8(offset++) & 0x3f;\r\n                                b4 = this.peekUInt8(offset++) & 0x3f;\r\n                                pt = (((b1 & 0x0f) << 18) | (b2 << 12) | (b3 << 6) | b4) - 0x10000;\r\n                                result += String.fromCharCode(0xd800 + (pt >> 10), 0xdc00 + (pt & 0x3ff));\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'utf16-be':\r\n                    case 'utf16be':\r\n                    case 'utf16le':\r\n                    case 'utf16-le':\r\n                    case 'utf16bom':\r\n                    case 'utf16-bom':\r\n                        switch (encoding) {\r\n                            case 'utf16be':\r\n                            case 'utf16-be':\r\n                                littleEndian = false;\r\n                                break;\r\n                            case 'utf16le':\r\n                            case 'utf16-le':\r\n                                littleEndian = true;\r\n                                break;\r\n                            case 'utf16bom':\r\n                            case 'utf16-bom':\r\n                                if (length < 2 || (bom = this.peekUInt16(offset)) === nullEnd) {\r\n                                    if (advance) {\r\n                                        this.advance(offset += 2);\r\n                                    }\r\n                                    return result;\r\n                                }\r\n                                littleEndian = bom === 0xfffe;\r\n                                offset += 2;\r\n                        }\r\n                        while (offset < end && (w1 = this.peekUInt16(offset, littleEndian)) !== nullEnd) {\r\n                            offset += 2;\r\n                            if (w1 < 0xd800 || w1 > 0xdfff) {\r\n                                result += String.fromCharCode(w1);\r\n                            } else {\r\n                                if (w1 > 0xdbff) {\r\n                                    throw new Error(\"Invalid utf16 sequence.\");\r\n                                }\r\n                                w2 = this.peekUInt16(offset, littleEndian);\r\n                                if (w2 < 0xdc00 || w2 > 0xdfff) {\r\n                                    throw new Error(\"Invalid utf16 sequence.\");\r\n                                }\r\n                                result += String.fromCharCode(w1, w2);\r\n                                offset += 2;\r\n                            }\r\n                        }\r\n                        if (w1 === nullEnd) {\r\n                            offset += 2;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"Unknown encoding: \" + encoding);\r\n                }\r\n                if (advance) {\r\n                    this.advance(offset);\r\n                }\r\n                return result;\r\n            };\r\n    \r\n            return Stream;\r\n    \r\n        })();\r\n    \r\n        var Decoder = AV.Decoder = (function (_super) {\r\n            var codecs;\r\n    \r\n            __extends(Decoder, _super);\r\n    \r\n            function Decoder(demuxer, format) {\r\n                var list;\r\n                this.demuxer = demuxer;\r\n                this.format = format;\r\n                list = new BufferList;\r\n                this.stream = new Stream(list);\r\n                this.bitstream = new Bitstream(this.stream);\r\n                this.receivedFinalBuffer = false;\r\n                this.waiting = false;\r\n                this.demuxer.on('cookie', (function (_this) {\r\n                    return function (cookie) {\r\n                        var error;\r\n                        try {\r\n                            return _this.setCookie(cookie);\r\n                        } catch (_error) {\r\n                            error = _error;\r\n                            return _this.emit('error', error);\r\n                        }\r\n                    };\r\n                })(this));\r\n                this.demuxer.on('data', (function (_this) {\r\n                    return function (chunk) {\r\n                        list.append(chunk);\r\n                        if (_this.waiting) {\r\n                            return _this.decode();\r\n                        }\r\n                    };\r\n                })(this));\r\n                this.demuxer.on('end', (function (_this) {\r\n                    return function () {\r\n                        _this.receivedFinalBuffer = true;\r\n                        if (_this.waiting) {\r\n                            return _this.decode();\r\n                        }\r\n                    };\r\n                })(this));\r\n                this.init();\r\n            }\r\n    \r\n            Decoder.prototype.init = function () {\r\n            };\r\n    \r\n            Decoder.prototype.setCookie = function (cookie) {\r\n            };\r\n    \r\n            Decoder.prototype.readChunk = function () {\r\n            };\r\n    \r\n            Decoder.prototype.decode = function () {\r\n                var error, offset, packet;\r\n                this.waiting = !this.receivedFinalBuffer;\r\n                offset = this.bitstream.offset();\r\n                try {\r\n                    packet = this.readChunk();\r\n                } catch (_error) {\r\n                    error = _error;\r\n                    if (!(error instanceof UnderflowError)) {\r\n                        this.emit('error', error);\r\n                        return false;\r\n                    }\r\n                }\r\n                if (packet) {\r\n                    this.emit('data', packet);\r\n                    if (this.receivedFinalBuffer) {\r\n                        this.emit('end');\r\n                    }\r\n                    return true;\r\n                } else if (!this.receivedFinalBuffer) {\r\n                    this.bitstream.seek(offset);\r\n                    this.waiting = true;\r\n                } else {\r\n                    this.emit('end');\r\n                }\r\n                return false;\r\n            };\r\n    \r\n            Decoder.prototype.seek = function (timestamp) {\r\n                var seekPoint;\r\n                seekPoint = this.demuxer.seek(timestamp);\r\n                this.stream.seek(seekPoint.offset);\r\n                return seekPoint.timestamp;\r\n            };\r\n    \r\n            codecs = {};\r\n    \r\n            Decoder.register = function (id, decoder) {\r\n                return codecs[id] = decoder;\r\n            };\r\n    \r\n            Decoder.find = function (id) {\r\n                return codecs[id] || null;\r\n            };\r\n    \r\n            return Decoder;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var Demuxer = AV.Demuxer = (function (_super) {\r\n            var formats;\r\n    \r\n            __extends(Demuxer, _super);\r\n    \r\n            Demuxer.probe = function (buffer) {\r\n                return false;\r\n            };\r\n    \r\n            function Demuxer(source, chunk) {\r\n                var list, received;\r\n                list = new BufferList;\r\n                list.append(chunk);\r\n                this.stream = new Stream(list);\r\n                received = false;\r\n                source.on('data', (function (_this) {\r\n                    return function (chunk) {\r\n                        var e;\r\n                        received = true;\r\n                        list.append(chunk);\r\n                        try {\r\n                            return _this.readChunk(chunk);\r\n                        } catch (_error) {\r\n                            e = _error;\r\n                            return _this.emit('error', e);\r\n                        }\r\n                    };\r\n                })(this));\r\n                source.on('error', (function (_this) {\r\n                    return function (err) {\r\n                        return _this.emit('error', err);\r\n                    };\r\n                })(this));\r\n                source.on('end', (function (_this) {\r\n                    return function () {\r\n                        if (!received) {\r\n                            _this.readChunk(chunk);\r\n                        }\r\n                        return _this.emit('end');\r\n                    };\r\n                })(this));\r\n                this.seekPoints = [];\r\n                this.init();\r\n            }\r\n    \r\n            Demuxer.prototype.init = function () {\r\n            };\r\n    \r\n            Demuxer.prototype.readChunk = function (chunk) {\r\n            };\r\n    \r\n            Demuxer.prototype.addSeekPoint = function (offset, timestamp) {\r\n                var index;\r\n                index = this.searchTimestamp(timestamp);\r\n                return this.seekPoints.splice(index, 0, {\r\n                    offset: offset,\r\n                    timestamp: timestamp\r\n                });\r\n            };\r\n    \r\n            Demuxer.prototype.searchTimestamp = function (timestamp, backward) {\r\n                var high, low, mid, time;\r\n                low = 0;\r\n                high = this.seekPoints.length;\r\n                if (high > 0 && this.seekPoints[high - 1].timestamp < timestamp) {\r\n                    return high;\r\n                }\r\n                while (low < high) {\r\n                    mid = (low + high) >> 1;\r\n                    time = this.seekPoints[mid].timestamp;\r\n                    if (time < timestamp) {\r\n                        low = mid + 1;\r\n                    } else if (time >= timestamp) {\r\n                        high = mid;\r\n                    }\r\n                }\r\n                if (high > this.seekPoints.length) {\r\n                    high = this.seekPoints.length;\r\n                }\r\n                return high;\r\n            };\r\n    \r\n            Demuxer.prototype.seek = function (timestamp) {\r\n                var index, seekPoint;\r\n                if (this.format && this.format.framesPerPacket > 0 && this.format.bytesPerPacket > 0) {\r\n                    seekPoint = {\r\n                        timestamp: timestamp,\r\n                        offset: this.format.bytesPerPacket * timestamp / this.format.framesPerPacket\r\n                    };\r\n                    return seekPoint;\r\n                } else {\r\n                    index = this.searchTimestamp(timestamp);\r\n                    return this.seekPoints[index];\r\n                }\r\n            };\r\n    \r\n            formats = [];\r\n    \r\n            Demuxer.register = function (demuxer) {\r\n                return formats.push(demuxer);\r\n            };\r\n    \r\n            Demuxer.find = function (buffer) {\r\n                var e, format, offset, stream, _i, _len;\r\n                stream = Stream.fromBuffer(buffer);\r\n                for (_i = 0, _len = formats.length; _i < _len; _i++) {\r\n                    format = formats[_i];\r\n                    offset = stream.offset;\r\n                    try {\r\n                        if (format.probe(stream)) {\r\n                            return format;\r\n                        }\r\n                    } catch (_error) {\r\n                        e = _error;\r\n                    }\r\n                    stream.seek(offset);\r\n                }\r\n                return null;\r\n            };\r\n    \r\n            return Demuxer;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var AudioDevice = AV.AudioDevice = (function (_super) {\r\n            var devices;\r\n    \r\n            __extends(AudioDevice, _super);\r\n    \r\n            function AudioDevice(sampleRate, channels) {\r\n                this.sampleRate = sampleRate;\r\n                this.channels = channels;\r\n                this.updateTime = __bind(this.updateTime, this);\r\n                this.playing = false;\r\n                this.currentTime = 0;\r\n                this._lastTime = 0;\r\n            }\r\n    \r\n            AudioDevice.prototype.start = function () {\r\n                if (this.playing) {\r\n                    return;\r\n                }\r\n                this.playing = true;\r\n                if (this.device == null) {\r\n                    this.device = AudioDevice.create(this.sampleRate, this.channels);\r\n                }\r\n                if (!this.device) {\r\n                    throw new Error(\"No supported audio device found.\");\r\n                }\r\n                this._lastTime = this.device.getDeviceTime();\r\n                this._timer = setInterval(this.updateTime, 200);  //default is 200\r\n                return this.device.on('refill', this.refill = (function (_this) {\r\n                    return function (buffer) {\r\n                        return _this.emit('refill', buffer);\r\n                    };\r\n                })(this));\r\n            };\r\n    \r\n            AudioDevice.prototype.stop = function () {\r\n                if (!this.playing) {\r\n                    return;\r\n                }\r\n                this.playing = false;\r\n                if(this.device)\r\n                    this.device.off('refill', this.refill);\r\n                return clearInterval(this._timer);\r\n            };\r\n    \r\n            AudioDevice.prototype.destroy = function () {\r\n                var _ref;\r\n                this.stop();\r\n                return (_ref = this.device) != null ? _ref.destroy() : void 0;\r\n            };\r\n    \r\n            AudioDevice.prototype.seek = function (currentTime) {\r\n                this.currentTime = currentTime;\r\n                if (this.playing) {\r\n                    this._lastTime = this.device.getDeviceTime();\r\n                }\r\n                return this.emit('timeUpdate', this.currentTime);\r\n            };\r\n    \r\n            AudioDevice.prototype.updateTime = function () {\r\n                var time;\r\n                time = this.device.getDeviceTime();\r\n                this.currentTime += (time - this._lastTime) / this.device.sampleRate * 1000 | 0;\r\n                this._lastTime = time;\r\n                return this.emit('timeUpdate', this.currentTime);\r\n            };\r\n    \r\n            devices = [];\r\n    \r\n            AudioDevice.register = function (device) {\r\n                return devices.push(device);\r\n            };\r\n    \r\n            AudioDevice.create = function (sampleRate, channels) {\r\n                var device, _i, _len;\r\n                for (_i = 0, _len = devices.length; _i < _len; _i++) {\r\n                    device = devices[_i];\r\n                    if (device.supported) {\r\n                        return new device(sampleRate, channels);\r\n                    }\r\n                }\r\n                return null;\r\n            };\r\n    \r\n            return AudioDevice;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var MozillaAudioDevice = AV.MozillaAudioDevice = (function (_super) {\r\n            var createTimer, destroyTimer;\r\n    \r\n            __extends(MozillaAudioDevice, _super);\r\n    \r\n            AudioDevice.register(MozillaAudioDevice);\r\n    \r\n            // ios在執行下列這行 MozillaAudioDevice.supported = (typeof Audio !== \"undefined\" && Audio !== null) && 'mozWriteAudio' in new Audio; 時會發生錯誤\r\n            // 因為ios不允許new Audio去產生一個沒有內容的Audio\r\n            // 且egret.Capabilities.os 在這邊會回傳 unknown，無法用這方式判斷是ios或是android\r\n            // 所以這邊只判斷是否為原生，原生的 MozillaAudioDevice.supported 就設為false 因為反正原生也不是用Mozilla 不會影響到web端即可\r\n            // sorrows 2018.03.22\r\n            if(cc.sys.isNative)\r\n            {\r\n                MozillaAudioDevice.supported = false;\r\n            }\r\n            else\r\n            {\r\n                MozillaAudioDevice.supported = (typeof Audio !== \"undefined\" && Audio !== null) && 'mozWriteAudio' in new Audio;\r\n            }\r\n    \r\n            function MozillaAudioDevice(sampleRate, channels) {\r\n                this.sampleRate = sampleRate;\r\n                this.channels = channels;\r\n                this.refill = __bind(this.refill, this);\r\n                this.audio = new Audio;\r\n                this.audio.mozSetup(this.channels, this.sampleRate);\r\n                this.writePosition = 0;\r\n                this.prebufferSize = this.sampleRate / 2;\r\n                this.tail = null;\r\n                this.timer = createTimer(this.refill, 100);\r\n            }\r\n    \r\n            MozillaAudioDevice.prototype.refill = function () {\r\n                var available, buffer, currentPosition, written;\r\n                if (this.tail) {\r\n                    written = this.audio.mozWriteAudio(this.tail);\r\n                    this.writePosition += written;\r\n                    if (this.writePosition < this.tail.length) {\r\n                        this.tail = this.tail.subarray(written);\r\n                    } else {\r\n                        this.tail = null;\r\n                    }\r\n                }\r\n                currentPosition = this.audio.mozCurrentSampleOffset();\r\n                available = currentPosition + this.prebufferSize - this.writePosition;\r\n                if (available > 0) {\r\n                    buffer = new Float32Array(available);\r\n                    this.emit('refill', buffer);\r\n                    written = this.audio.mozWriteAudio(buffer);\r\n                    if (written < buffer.length) {\r\n                        this.tail = buffer.subarray(written);\r\n                    }\r\n                    this.writePosition += written;\r\n                }\r\n            };\r\n    \r\n            MozillaAudioDevice.prototype.destroy = function () {\r\n                return destroyTimer(this.timer);\r\n            };\r\n    \r\n            MozillaAudioDevice.prototype.getDeviceTime = function () {\r\n                return this.audio.mozCurrentSampleOffset() / this.channels;\r\n            };\r\n    \r\n            createTimer = function (fn, interval) {\r\n                var url, worker;\r\n                url = AVBuffer.makeBlobURL(\"setInterval(function() { postMessage('ping'); }, \" + interval + \");\");\r\n                if (url == null) {\r\n                    return setInterval(fn, interval);\r\n                }\r\n                worker = new Worker(url);\r\n                worker.onmessage = fn;\r\n                worker.url = url;\r\n                return worker;\r\n            };\r\n    \r\n            destroyTimer = function (timer) {\r\n                if (timer.terminate) {\r\n                    timer.terminate();\r\n                    return URL.revokeObjectURL(timer.url);\r\n                } else {\r\n                    return clearInterval(timer);\r\n                }\r\n            };\r\n    \r\n            return MozillaAudioDevice;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var Asset = AV.Asset = (function (_super) {\r\n            __extends(Asset, _super);\r\n    \r\n            function Asset(source) {\r\n                this.source = source;\r\n                this._decode = __bind(this._decode, this);\r\n                this.findDecoder = __bind(this.findDecoder, this);\r\n                this.probe = __bind(this.probe, this);\r\n                this.buffered = 0;\r\n                this.duration = null;\r\n                this.format = null;\r\n                this.metadata = null;\r\n                this.active = false;\r\n                this.demuxer = null;\r\n                this.decoder = null;\r\n                this.source.once('data', this.probe);\r\n                this.source.on('error', (function (_this) {\r\n                    return function (err) {\r\n                        _this.emit('error', err);\r\n                        return _this.stop();\r\n                    };\r\n                })(this));\r\n                this.source.on('progress', (function (_this) {\r\n                    return function (buffered) {\r\n                        _this.buffered = buffered;\r\n                        return _this.emit('buffer', _this.buffered);\r\n                    };\r\n                })(this));\r\n            }\r\n    \r\n            Asset.fromBuffer = function (buffer) {\r\n                return new Asset(new BufferSource(buffer));\r\n            };\r\n            Asset.fromBufferSource = function (serverUrl) {\r\n                return new AV.Asset(new AV.BufferSource());\r\n            };\r\n            Asset.prototype.start = function (decode) {\r\n                if (this.active) {\r\n                    return;\r\n                }\r\n                if (decode != null) {\r\n                    this.shouldDecode = decode;\r\n                }\r\n                if (this.shouldDecode == null) {\r\n                    this.shouldDecode = true;\r\n                }\r\n                this.active = true;\r\n                this.source.start();\r\n                if (this.decoder && this.shouldDecode) {\r\n                    return this._decode();\r\n                }\r\n            };\r\n    \r\n            Asset.prototype.stop = function () {\r\n                if (!this.active) {\r\n                    return;\r\n                }\r\n                this.active = false;\r\n                return this.source.pause();\r\n            };\r\n    \r\n            Asset.prototype.get = function (event, callback) {\r\n                if (event !== 'format' && event !== 'duration' && event !== 'metadata') {\r\n                    return;\r\n                }\r\n                if (this[event] != null) {\r\n                    return callback(this[event]);\r\n                } else {\r\n                    this.once(event, (function (_this) {\r\n                        return function (value) {\r\n                            _this.stop();\r\n                            return callback(value);\r\n                        };\r\n                    })(this));\r\n                    return this.start();\r\n                }\r\n            };\r\n    \r\n            Asset.prototype.decodePacket = function () {\r\n                return this.decoder.decode();\r\n            };\r\n    \r\n            Asset.prototype.decodeToBuffer = function (callback) {\r\n                var chunks, dataHandler, length;\r\n                length = 0;\r\n                chunks = [];\r\n                this.on('data', dataHandler = function (chunk) {\r\n                    length += chunk.length;\r\n                    return chunks.push(chunk);\r\n                });\r\n                this.once('end', function () {\r\n                    var buf, chunk, offset, _i, _len;\r\n                    buf = new Float32Array(length);\r\n                    offset = 0;\r\n                    for (_i = 0, _len = chunks.length; _i < _len; _i++) {\r\n                        chunk = chunks[_i];\r\n                        buf.set(chunk, offset);\r\n                        offset += chunk.length;\r\n                    }\r\n                    this.off('data', dataHandler);\r\n                    return callback(buf);\r\n                });\r\n                return this.start();\r\n            };\r\n    \r\n            Asset.prototype.probe = function (chunk) {\r\n                var demuxer;\r\n                if (!this.active) {\r\n                    return;\r\n                }\r\n                demuxer = Demuxer.find(chunk);\r\n                if (!demuxer) {\r\n                    return this.emit('error', 'A demuxer for this container was not found.');\r\n                }\r\n                this.demuxer = new demuxer(this.source, chunk);\r\n                this.demuxer.on('format', this.findDecoder);\r\n                this.demuxer.on('duration', (function (_this) {\r\n                    return function (duration) {\r\n                        _this.duration = duration;\r\n                        return _this.emit('duration', _this.duration);\r\n                    };\r\n                })(this));\r\n                this.demuxer.on('metadata', (function (_this) {\r\n                    return function (metadata) {\r\n                        _this.metadata = metadata;\r\n                        return _this.emit('metadata', _this.metadata);\r\n                    };\r\n                })(this));\r\n                return this.demuxer.on('error', (function (_this) {\r\n                    return function (err) {\r\n                        _this.emit('error', err);\r\n                        return _this.stop();\r\n                    };\r\n                })(this));\r\n            };\r\n    \r\n            Asset.prototype.findDecoder = function (format) {\r\n                var decoder, div;\r\n                this.format = format;\r\n                if (!this.active) {\r\n                    return;\r\n                }\r\n                this.emit('format', this.format);\r\n                decoder = Decoder.find(this.format.formatID);\r\n                if (!decoder) {\r\n                    return this.emit('error', \"A decoder for \" + this.format.formatID + \" was not found.\");\r\n                }\r\n                this.decoder = new decoder(this.demuxer, this.format);\r\n                if (this.format.floatingPoint) {\r\n                    this.decoder.on('data', (function (_this) {\r\n                        return function (buffer) {\r\n                            return _this.emit('data', buffer);\r\n                        };\r\n                    })(this));\r\n                } else {\r\n                    div = Math.pow(2, this.format.bitsPerChannel - 1);\r\n                    this.decoder.on('data', (function (_this) {\r\n                        return function (buffer) {\r\n                            var buf, i, sample, _i, _len;\r\n                            buf = new Float32Array(buffer.length);\r\n                            for (i = _i = 0, _len = buffer.length; _i < _len; i = ++_i) {\r\n                                sample = buffer[i];\r\n                                buf[i] = sample / div;\r\n                            }\r\n                            return _this.emit('data', buf);\r\n                        };\r\n                    })(this));\r\n                }\r\n                this.decoder.on('error', (function (_this) {\r\n                    return function (err) {\r\n                        _this.emit('error', err);\r\n                        return _this.stop();\r\n                    };\r\n                })(this));\r\n                this.decoder.on('end', (function (_this) {\r\n                    return function () {\r\n                        return _this.emit('end');\r\n                    };\r\n                })(this));\r\n                this.emit('decodeStart');\r\n                if (this.shouldDecode) {\r\n                    return this._decode();\r\n                }\r\n            };\r\n    \r\n            Asset.prototype._decode = function () {\r\n                while (this.decoder.decode() && this.active) {\r\n                    continue;\r\n                }\r\n                if (this.active) {\r\n                    return this.decoder.once('data', this._decode);\r\n                }\r\n            };\r\n    \r\n            Asset.prototype.destroy = function () {\r\n                var _ref, _ref1, _ref2;\r\n                this.stop();\r\n                if ((_ref = this.demuxer) != null) {\r\n                    _ref.off();\r\n                }\r\n                if ((_ref1 = this.decoder) != null) {\r\n                    _ref1.off();\r\n                }\r\n                if ((_ref2 = this.source) != null) {\r\n                    _ref2.off();\r\n                }\r\n                return this.off();\r\n            };\r\n    \r\n            return Asset;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var Resampler = AV.Resampler = (function () {\r\n            //JavaScript Audio Resampler\r\n            //Copyright (C) 2011-2015 Grant Galitz\r\n            //Released to Public Domain\r\n            function Resampler(fromSampleRate, toSampleRate, channels, inputBufferLength) {\r\n                this.fromSampleRate = +fromSampleRate;\r\n                this.toSampleRate = +toSampleRate;\r\n                this.channels = channels | 0;\r\n                this.inputBufferLength = inputBufferLength;\r\n                this.initialize();\r\n            }\r\n    \r\n            Resampler.prototype.initialize = function () {\r\n                //Perform some checks:\r\n                if (this.fromSampleRate > 0 && this.toSampleRate > 0 && this.channels > 0) {\r\n                    if (this.fromSampleRate == this.toSampleRate) {\r\n                        //Setup a resampler bypass:\r\n                        this.resampler = this.bypassResampler;    //Resampler just returns what was passed through.\r\n                        this.ratioWeight = 1;\r\n                    } else {\r\n                        this.ratioWeight = this.fromSampleRate / this.toSampleRate;\r\n                        if (this.fromSampleRate < this.toSampleRate) {\r\n                            /*\r\n                              Use generic linear interpolation if upsampling,\r\n                              as linear interpolation produces a gradient that we want\r\n                              and works fine with two input sample points per output in this case.\r\n                            */\r\n                            this.compileLinearInterpolationFunction();\r\n                            this.lastWeight = 1;\r\n                        } else {\r\n                            /*\r\n                              Custom resampler I wrote that doesn't skip samples\r\n                              like standard linear interpolation in high downsampling.\r\n                              This is more accurate than linear interpolation on downsampling.\r\n                            */\r\n                            this.compileMultiTapFunction();\r\n                            this.tailExists = false;\r\n                            this.lastWeight = 0;\r\n                        }\r\n    \r\n                        var outputBufferSize = (Math.ceil(this.inputBufferLength * this.toSampleRate / this.fromSampleRate / this.channels * 1.01) * this.channels) + this.channels;\r\n                        this.outputBuffer = new Float32Array(outputBufferSize);\r\n                        this.lastOutput = new Float32Array(this.channels);\r\n                    }\r\n                } else {\r\n                    throw(new Error(\"Invalid settings specified for the resampler.\"));\r\n                }\r\n            };\r\n    \r\n            Resampler.prototype.compileLinearInterpolationFunction = function () {\r\n                var toCompile = \"var outputOffset = 0;\\\r\n        var bufferLength = buffer.length;\\\r\n        if (bufferLength > 0) {\\\r\n          var weight = this.lastWeight;\\\r\n          var firstWeight = 0;\\\r\n          var secondWeight = 0;\\\r\n          var sourceOffset = 0;\\\r\n          var outputOffset = 0;\\\r\n          var outputBuffer = this.outputBuffer;\\\r\n          for (; weight < 1; weight += \" + this.ratioWeight + \") {\\\r\n            secondWeight = weight % 1;\\\r\n            firstWeight = 1 - secondWeight;\";\r\n                for (var channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"outputBuffer[outputOffset++] = (this.lastOutput[\" + channel + \"] * firstWeight) + (buffer[\" + channel + \"] * secondWeight);\";\r\n                }\r\n                toCompile += \"}\\\r\n          weight -= 1;\\\r\n          for (bufferLength -= \" + this.channels + \", sourceOffset = Math.floor(weight) * \" + this.channels + \"; sourceOffset < bufferLength;) {\\\r\n            secondWeight = weight % 1;\\\r\n            firstWeight = 1 - secondWeight;\";\r\n                for (var channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"outputBuffer[outputOffset++] = (buffer[sourceOffset\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * firstWeight) + (buffer[sourceOffset + \" + (this.channels + channel) + \"] * secondWeight);\";\r\n                }\r\n                toCompile += \"weight += \" + this.ratioWeight + \";\\\r\n            sourceOffset = Math.floor(weight) * \" + this.channels + \";\\\r\n          }\";\r\n                for (var channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"this.lastOutput[\" + channel + \"] = buffer[sourceOffset++];\";\r\n                }\r\n                toCompile += \"this.lastWeight = weight % 1;\\\r\n        }\\\r\n        return this.outputBuffer;\";\r\n    \r\n                this.resampler = Function(\"buffer\", toCompile);\r\n            };\r\n    \r\n            Resampler.prototype.compileMultiTapFunction = function () {\r\n                var toCompile = \"var outputOffset = 0;\\\r\n        var bufferLength = buffer.length;\\\r\n        if (bufferLength > 0) {\\\r\n          var weight = 0;\";\r\n                for (var channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"var output\" + channel + \" = 0;\"\r\n                }\r\n                toCompile += \"var actualPosition = 0;\\\r\n          var amountToNext = 0;\\\r\n          var alreadyProcessedTail = !this.tailExists;\\\r\n          this.tailExists = false;\\\r\n          var outputBuffer = this.outputBuffer;\\\r\n          var currentPosition = 0;\\\r\n          do {\\\r\n            if (alreadyProcessedTail) {\\\r\n              weight = \" + this.ratioWeight + \";\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"output\" + channel + \" = 0;\"\r\n                }\r\n                toCompile += \"}\\\r\n            else {\\\r\n              weight = this.lastWeight;\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"output\" + channel + \" = this.lastOutput[\" + channel + \"];\"\r\n                }\r\n                toCompile += \"alreadyProcessedTail = true;\\\r\n            }\\\r\n            while (weight > 0 && actualPosition < bufferLength) {\\\r\n              amountToNext = 1 + actualPosition - currentPosition;\\\r\n              if (weight >= amountToNext) {\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"output\" + channel + \" += buffer[actualPosition++] * amountToNext;\"\r\n                }\r\n                toCompile += \"currentPosition = actualPosition;\\\r\n                weight -= amountToNext;\\\r\n              }\\\r\n              else {\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"output\" + channel + \" += buffer[actualPosition\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * weight;\"\r\n                }\r\n                toCompile += \"currentPosition += weight;\\\r\n                weight = 0;\\\r\n                break;\\\r\n              }\\\r\n            }\\\r\n            if (weight <= 0) {\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"outputBuffer[outputOffset++] = output\" + channel + \" / \" + this.ratioWeight + \";\"\r\n                }\r\n                toCompile += \"}\\\r\n            else {\\\r\n              this.lastWeight = weight;\";\r\n                for (channel = 0; channel < this.channels; ++channel) {\r\n                    toCompile += \"this.lastOutput[\" + channel + \"] = output\" + channel + \";\"\r\n                }\r\n                toCompile += \"this.tailExists = true;\\\r\n              break;\\\r\n            }\\\r\n          } while (actualPosition < bufferLength);\\\r\n        }\\\r\n        return this.outputBuffer;\";\r\n    \r\n                this.resampler = Function(\"buffer\", toCompile);\r\n            };\r\n    \r\n            Resampler.prototype.bypassResampler = function (inputBuffer) {\r\n                return inputBuffer;\r\n            };\r\n            return Resampler;\r\n        })();\r\n    \r\n        var WebAudioDevice = AV.WebAudioDevice = (function (_super) {\r\n            var createProcessor, sharedContext = null, AudioContext = global.AudioContext || global.webkitAudioContext;\r\n    \r\n            __extends(WebAudioDevice, _super);\r\n    \r\n            AudioDevice.register(WebAudioDevice);\r\n    \r\n            WebAudioDevice.supported = AudioContext && (typeof AudioContext.prototype[createProcessor = 'createScriptProcessor'] === 'function' || typeof AudioContext.prototype[createProcessor = 'createJavaScriptNode'] === 'function');\r\n    \r\n            WebAudioDevice.init = function(){\r\n                if(WebAudioDevice.supported){\r\n                    if(!sharedContext) {\r\n                        sharedContext = new AudioContext();\r\n                        var node = sharedContext[createProcessor](4096, 1, 1);\r\n                        node.connect(sharedContext.destination);\r\n                    } else {\r\n                        if(sharedContext.state === \"suspended\") {\r\n                            sharedContext.close();\r\n                            sharedContext = new AudioContext();\r\n                            var node = sharedContext[createProcessor](4096, 1, 1);\r\n                            node.connect(sharedContext.destination);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n    \r\n            function WebAudioDevice(sampleRate, channels) {\r\n                var buffSize = 4096; //default is 4096\r\n                this.sampleRate = sampleRate;\r\n                this.channels = channels;\r\n                this.refill = __bind(this.refill, this);\r\n                this.context = sharedContext != null ? sharedContext : sharedContext = new AudioContext;\r\n                this.deviceSampleRate = this.context.sampleRate;\r\n                this.bufferSize = Math.ceil(buffSize / (this.deviceSampleRate / this.sampleRate) * this.channels);\r\n                this.bufferSize += this.bufferSize % this.channels;\r\n                if (this.deviceSampleRate !== this.sampleRate) {\r\n                    this.resampler = new Resampler(this.sampleRate, this.deviceSampleRate, this.channels, this.bufferSize);\r\n                }\r\n                this.node = this.context[createProcessor](buffSize, this.channels, this.channels);\r\n                this.node.onaudioprocess = this.refill;\r\n                this.node.connect(this.context.destination);\r\n            }\r\n    \r\n            WebAudioDevice.prototype.refill = function (event) {\r\n                var channelCount, channels, data, i, n, outputBuffer, _i, _j, _k, _ref;\r\n                outputBuffer = event.outputBuffer;\r\n                channelCount = outputBuffer.numberOfChannels;\r\n                channels = new Array(channelCount);\r\n                for (i = _i = 0; _i < channelCount; i = _i += 1) {\r\n                    channels[i] = outputBuffer.getChannelData(i);\r\n                }\r\n                data = new Float32Array(this.bufferSize);\r\n                this.emit('refill', data);\r\n                if (this.resampler) {\r\n                    data = this.resampler.resampler(data);\r\n                }\r\n                for (i = _j = 0, _ref = outputBuffer.length; _j < _ref; i = _j += 1) {\r\n                    for (n = _k = 0; _k < channelCount; n = _k += 1) {\r\n                        channels[n][i] = data[i * channelCount + n];\r\n                    }\r\n                }\r\n            };\r\n    \r\n            WebAudioDevice.prototype.destroy = function () {\r\n                return this.node.disconnect(0);\r\n            };\r\n    \r\n            WebAudioDevice.prototype.getDeviceTime = function () {\r\n                return this.context.currentTime * this.sampleRate;\r\n            };\r\n    \r\n            return WebAudioDevice;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var Filter = AV.Filter = (function () {\r\n            function Filter(context, key) {\r\n                if (context && key) {\r\n                    Object.defineProperty(this, 'value', {\r\n                        get: function () {\r\n                            return context[key];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n    \r\n            Filter.prototype.process = function (buffer) {\r\n            };\r\n    \r\n            return Filter;\r\n    \r\n        })();\r\n    \r\n        var BalanceFilter = AV.BalanceFilter = (function(_super) {\r\n            __extends(BalanceFilter, _super);\r\n    \r\n            function BalanceFilter() {\r\n                return BalanceFilter.__super__.constructor.apply(this, arguments);\r\n            }\r\n    \r\n            BalanceFilter.prototype.process = function(buffer) {\r\n                var i, pan, _i, _ref;\r\n                if (this.value === 0) {\r\n                    return;\r\n                }\r\n                pan = Math.max(-50, Math.min(50, this.value));\r\n                for (i = _i = 0, _ref = buffer.length; _i < _ref; i = _i += 2) {\r\n                    buffer[i] *= Math.min(1, (50 - pan) / 50);\r\n                    buffer[i + 1] *= Math.min(1, (50 + pan) / 50);\r\n                }\r\n            };\r\n    \r\n            return BalanceFilter;\r\n    \r\n        })(Filter);\r\n    \r\n        var VolumeFilter = AV.VolumeFilter = (function(_super) {\r\n            __extends(VolumeFilter, _super);\r\n    \r\n            function VolumeFilter() {\r\n                return VolumeFilter.__super__.constructor.apply(this, arguments);\r\n            }\r\n    \r\n            VolumeFilter.prototype.process = function(buffer) {\r\n                var i, vol, _i, _ref;\r\n                if (this.value >= 100) {\r\n                    return;\r\n                }\r\n                vol = Math.max(0, Math.min(100, this.value)) / 100;\r\n                for (i = _i = 0, _ref = buffer.length; _i < _ref; i = _i += 1) {\r\n                    buffer[i] *= vol;\r\n                }\r\n            };\r\n    \r\n            return VolumeFilter;\r\n    \r\n        })(Filter);\r\n    \r\n        AV.Player = (function(_super) {\r\n            __extends(Player, _super);\r\n    \r\n            function Player(asset) {\r\n                this.asset = asset;\r\n                this.startPlaying = __bind(this.startPlaying, this);\r\n                this.playing = false;\r\n                this.buffered = 0;\r\n                this.currentTime = 0;\r\n                this.duration = 0;\r\n                this.volume = 100;\r\n                this.pan = 0;\r\n                this.metadata = {};\r\n                this.filters = [new VolumeFilter(this, 'volume'), new BalanceFilter(this, 'pan')];\r\n                this.asset.on('buffer', (function(_this) {\r\n                    return function(buffered) {\r\n                        _this.buffered = buffered;\r\n                        return _this.emit('buffer', _this.buffered);\r\n                    };\r\n                })(this));\r\n                this.asset.on('decodeStart', (function(_this) {\r\n                    return function() {\r\n                        _this.queue = new Queue(_this.asset);\r\n                        return _this.queue.once('ready', _this.startPlaying);\r\n                    };\r\n                })(this));\r\n                this.asset.on('format', (function(_this) {\r\n                    return function(format) {\r\n                        _this.format = format;\r\n                        return _this.emit('format', _this.format);\r\n                    };\r\n                })(this));\r\n                this.asset.on('metadata', (function(_this) {\r\n                    return function(metadata) {\r\n                        _this.metadata = metadata;\r\n                        return _this.emit('metadata', _this.metadata);\r\n                    };\r\n                })(this));\r\n                this.asset.on('duration', (function(_this) {\r\n                    return function(duration) {\r\n                        _this.duration = duration;\r\n                        return _this.emit('duration', _this.duration);\r\n                    };\r\n                })(this));\r\n                this.asset.on('error', (function(_this) {\r\n                    return function(error) {\r\n                        return _this.emit('error', error);\r\n                    };\r\n                })(this));\r\n            }\r\n    \r\n            Player.fromBuffer = function(buffer) {\r\n                return new Player(Asset.fromBuffer(buffer));\r\n            };\r\n            Player.fromBufferSource = function () {\r\n                return new AV.Player(AV.Asset.fromBufferSource());\r\n            };\r\n            Player.prototype.preload = function() {\r\n                if (!this.asset) {\r\n                    return;\r\n                }\r\n                this.startedPreloading = true;\r\n                return this.asset.start(false);\r\n            };\r\n    \r\n            Player.prototype.play = function() {\r\n                var _ref;\r\n                if (this.playing) {\r\n                    return;\r\n                }\r\n                if (!this.startedPreloading) {\r\n                    this.preload();\r\n                }\r\n                this.playing = true;\r\n                return (_ref = this.device) != null ? _ref.start() : void 0;\r\n            };\r\n    \r\n            Player.prototype.pause = function() {\r\n                var _ref;\r\n                if (!this.playing) {\r\n                    return;\r\n                }\r\n                this.playing = false;\r\n                return (_ref = this.device) != null ? _ref.stop() : void 0;\r\n            };\r\n    \r\n            Player.prototype.togglePlayback = function() {\r\n                if (this.playing) {\r\n                    return this.pause();\r\n                } else {\r\n                    return this.play();\r\n                }\r\n            };\r\n    \r\n            Player.prototype.stop = function() {\r\n                var _ref;\r\n                this.pause();\r\n                this.asset.stop();\r\n                return (_ref = this.device) != null ? _ref.destroy() : void 0;\r\n            };\r\n    \r\n            Player.prototype.seek = function(timestamp) {\r\n                var _ref;\r\n                if ((_ref = this.device) != null) {\r\n                    _ref.stop();\r\n                }\r\n                this.queue.once('ready', (function(_this) {\r\n                    return function() {\r\n                        var _ref1, _ref2;\r\n                        if ((_ref1 = _this.device) != null) {\r\n                            _ref1.seek(_this.currentTime);\r\n                        }\r\n                        if (_this.playing) {\r\n                            return (_ref2 = _this.device) != null ? _ref2.start() : void 0;\r\n                        }\r\n                    };\r\n                })(this));\r\n                timestamp = (timestamp / 1000) * this.format.sampleRate;\r\n                timestamp = this.asset.decoder.seek(timestamp);\r\n                this.currentTime = timestamp / this.format.sampleRate * 1000 | 0;\r\n                this.queue.reset();\r\n                return this.currentTime;\r\n            };\r\n    \r\n            Player.prototype.startPlaying = function() {\r\n                var frame, frameOffset;\r\n                frame = this.queue.read();\r\n                frameOffset = 0;\r\n                this.device = new AudioDevice(this.format.sampleRate, this.format.channelsPerFrame);\r\n                this.device.on('timeUpdate', (function(_this) {\r\n                    return function(currentTime) {\r\n                        _this.currentTime = currentTime;\r\n                        return _this.emit('progress', _this.currentTime);\r\n                    };\r\n                })(this));\r\n                this.refill = (function(_this) {\r\n                    return function(buffer) {\r\n                        var bufferOffset, filter, i, max, _i, _j, _len, _ref;\r\n                        if (!_this.playing) {\r\n                            return;\r\n                        }\r\n                        if (!frame) {\r\n                            frame = _this.queue.read();\r\n                            frameOffset = 0;\r\n                        }\r\n                        bufferOffset = 0;\r\n                        while (frame && bufferOffset < buffer.length) {\r\n                            max = Math.min(frame.length - frameOffset, buffer.length - bufferOffset);\r\n                            for (i = _i = 0; _i < max; i = _i += 1) {\r\n                                buffer[bufferOffset++] = frame[frameOffset++];\r\n                            }\r\n                            if (frameOffset === frame.length) {\r\n                                frame = _this.queue.read();\r\n                                frameOffset = 0;\r\n                            }\r\n                        }\r\n                        _ref = _this.filters;\r\n                        for (_j = 0, _len = _ref.length; _j < _len; _j++) {\r\n                            filter = _ref[_j];\r\n                            filter.process(buffer);\r\n                        }\r\n                        if (!frame) {\r\n                            //David: live audio. don't stop.\r\n                            /**\r\n                             if (_this.queue.ended) {\r\n                _this.currentTime = _this.duration;\r\n                _this.emit('progress', _this.currentTime);\r\n                _this.emit('end');\r\n                _this.stop();\r\n              } else {\r\n                _this.device.stop();\r\n              }\r\n                             **/\r\n                        }\r\n                    };\r\n                })(this);\r\n                this.device.on('refill', this.refill);\r\n                if (this.playing) {\r\n                    this.device.start();\r\n                }\r\n                return this.emit('ready');\r\n            };\r\n    \r\n            Player.prototype.destroy = function() {\r\n                var _ref, _ref1;\r\n                this.stop();\r\n                if ((_ref = this.device) != null) {\r\n                    _ref.off();\r\n                }\r\n                if ((_ref1 = this.asset) != null) {\r\n                    _ref1.destroy();\r\n                }\r\n                return this.off();\r\n            };\r\n    \r\n            return Player;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var Queue = AV.Queue = (function(_super) {\r\n            __extends(Queue, _super);\r\n    \r\n            function Queue(asset) {\r\n                this.asset = asset;\r\n                this.write = __bind(this.write, this);\r\n                this.readyMark = 2;  //David: buffer size. default = 64\r\n                this.finished = false;\r\n                this.buffering = true;\r\n                this.ended = false;\r\n                this.buffers = [];\r\n                this.asset.on('data', this.write);\r\n                this.asset.on('end', (function(_this) {\r\n                    return function() {\r\n                        return _this.ended = true;\r\n                    };\r\n                })(this));\r\n                this.asset.decodePacket();\r\n            }\r\n    \r\n            Queue.prototype.write = function(buffer) {\r\n                if (buffer) {\r\n                    this.buffers.push(buffer);\r\n                }\r\n                if (this.buffering) {\r\n                    if (this.buffers.length >= this.readyMark || this.ended) {\r\n                        this.buffering = false;\r\n                        return this.emit('ready');\r\n                    } else {\r\n                        return this.asset.decodePacket();\r\n                    }\r\n                }\r\n            };\r\n    \r\n            Queue.prototype.read = function() {\r\n                if (this.buffers.length === 0) {\r\n                    return null;\r\n                }\r\n                this.asset.decodePacket();\r\n                return this.buffers.shift();\r\n            };\r\n    \r\n            Queue.prototype.reset = function() {\r\n                this.buffers.length = 0;\r\n                this.buffering = true;\r\n                return this.asset.decodePacket();\r\n            };\r\n    \r\n            return Queue;\r\n    \r\n        })(EventEmitter);\r\n    \r\n        var BufferSource = AV.BufferSource = (function(_super) {\r\n            var clearImmediate, setImmediate;\r\n    \r\n            __extends(BufferSource, _super);\r\n    \r\n            function BufferSource(input) {\r\n                this.loop = __bind(this.loop, this);\r\n                if (input instanceof BufferList) {\r\n                    this.list = input;\r\n                } else {\r\n                    this.list = new BufferList;\r\n                    if (input != null) //David's modify\r\n                        this.list.append(new AVBuffer(input));\r\n                }\r\n                this.paused = true;\r\n            }\r\n    \r\n            setImmediate = global.setImmediate || function (fn) {\r\n                return global.setTimeout(fn, 0);\r\n            };\r\n    \r\n            clearImmediate = global.clearImmediate || function (timer) {\r\n                return global.clearTimeout(timer);\r\n            };\r\n    \r\n            BufferSource.prototype.start = function () {\r\n                this.paused = false;\r\n                return null;  //David's modify.\r\n                //return this._timer = setImmediate(this.loop);\r\n            };\r\n    \r\n            BufferSource.prototype.add = function (data) {  //David's added.\r\n                this.bytesLoaded += data.length;\r\n                //console.log(\"bytesLoaded:\", this.bytesLoaded);\r\n                this.list.append(new AVBuffer(data));\r\n                this.emit('data', this.list.first);\r\n                this.list.advance()\r\n            };\r\n    \r\n            BufferSource.prototype.loop = function () {\r\n                this.emit('progress', (this.list.numBuffers - this.list.availableBuffers + 1) / this.list.numBuffers * 100 | 0);\r\n                this.emit('data', this.list.first);\r\n                if (this.list.advance()) {\r\n                    return setImmediate(this.loop);\r\n                } else {\r\n                    return this.emit('end');\r\n                }\r\n            };\r\n    \r\n            BufferSource.prototype.pause = function () {\r\n                clearImmediate(this._timer);\r\n                return this.paused = true;\r\n            };\r\n    \r\n            BufferSource.prototype.reset = function () {\r\n                this.pause();\r\n                return this.list.rewind();\r\n            };\r\n    \r\n            return BufferSource;\r\n    \r\n        })(EventEmitter);\r\n    })(gwin);\r\n    /*\r\n     * AAC.js - Advanced Audio Coding decoder in JavaScript\r\n     * Created by Devon Govett\r\n     * Copyright (c) 2012, Official.fm Labs\r\n     *\r\n     * AAC.js is free software; you can redistribute it and/or modify it\r\n     * under the terms of the GNU Lesser General Public License as\r\n     * published by the Free Software Foundation; either version 3 of the\r\n     * License, or (at your option) any later version.\r\n     *\r\n     * AAC.js is distributed in the hope that it will be useful, but WITHOUT\r\n     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\r\n     * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General\r\n     * Public License for more details.\r\n     *\r\n     * You should have received a copy of the GNU Lesser General Public\r\n     * License along with this library.\r\n     * If not, see <http://www.gnu.org/licenses/>.\r\n     */\r\n    (function (global) {\r\n        var AV = global.AV;\r\n    \r\n        var ADTSDemuxer = AV.Demuxer.extend(function () {\r\n            AV.Demuxer.register(this);\r\n    \r\n            this.probe = function (stream) {\r\n                var offset = stream.offset;\r\n    \r\n                // attempt to find ADTS syncword\r\n                while (stream.available(2)) {\r\n                    if ((stream.readUInt16() & 0xfff6) === 0xfff0) {\r\n                        stream.seek(offset);\r\n                        return true;\r\n                    }\r\n                }\r\n    \r\n                stream.seek(offset);\r\n                return false;\r\n            };\r\n    \r\n            this.prototype.init = function () {\r\n                this.bitstream = new AV.Bitstream(this.stream);\r\n            };\r\n    \r\n            // Reads an ADTS header\r\n            // See http://wiki.multimedia.cx/index.php?title=ADTS\r\n            this.readHeader = function (stream) {\r\n                if (stream.read(12) !== 0xfff)\r\n                    throw new Error('Invalid ADTS header.');\r\n    \r\n                var ret = {};\r\n                stream.advance(3); // mpeg version and layer\r\n                var protectionAbsent = !!stream.read(1);\r\n    \r\n                ret.profile = stream.read(2) + 1;\r\n                ret.samplingIndex = stream.read(4);\r\n    \r\n                stream.advance(1); // private\r\n                ret.chanConfig = stream.read(3);\r\n                stream.advance(4); // original/copy, home, copywrite, and copywrite start\r\n    \r\n                ret.frameLength = stream.read(13);\r\n                stream.advance(11); // fullness\r\n    \r\n                ret.numFrames = stream.read(2) + 1;\r\n    \r\n                if (!protectionAbsent)\r\n                    stream.advance(16);\r\n    \r\n                return ret;\r\n            };\r\n    \r\n            this.prototype.readChunk = function () {\r\n                if (!this.sentHeader) {\r\n                    var offset = this.stream.offset;\r\n                    var header = ADTSDemuxer.readHeader(this.bitstream);\r\n    \r\n                    this.emit('format', {\r\n                        formatID: 'aac ',\r\n                        sampleRate: SAMPLE_RATES[header.samplingIndex],\r\n                        channelsPerFrame: header.chanConfig,\r\n                        bitsPerChannel: 16\r\n                    });\r\n    \r\n                    // generate a magic cookie from the ADTS header\r\n                    var cookie = new Uint8Array(2);\r\n                    cookie[0] = (header.profile << 3) | ((header.samplingIndex >> 1) & 7);\r\n                    cookie[1] = ((header.samplingIndex & 1) << 7) | (header.chanConfig << 3);\r\n                    this.emit('cookie', new AV.Buffer(cookie));\r\n    \r\n                    this.stream.seek(offset);\r\n                    this.sentHeader = true;\r\n                }\r\n    \r\n                while (this.stream.available(1)) {\r\n                    var buffer = this.stream.readSingleBuffer(this.stream.remainingBytes());\r\n                    this.emit('data', buffer);\r\n                }\r\n            };\r\n        });\r\n    \r\n        // Channel Coupling Element\r\n        var CCEElement = (function () {\r\n            function CCEElement(config) {\r\n                this.ics = new ICStream(config);\r\n                this.channelPair = new Array(8);\r\n                this.idSelect = new Int32Array(8);\r\n                this.chSelect = new Int32Array(8);\r\n                this.gain = new Array(16);\r\n            }\r\n    \r\n            CCEElement.BEFORE_TNS = 0;\r\n            CCEElement.AFTER_TNS = 1;\r\n            CCEElement.AFTER_IMDCT = 2;\r\n    \r\n            var CCE_SCALE = new Float32Array([\r\n                1.09050773266525765921,\r\n                1.18920711500272106672,\r\n                1.4142135623730950488016887,\r\n                2.0\r\n            ]);\r\n    \r\n            CCEElement.prototype = {\r\n                decode: function (stream, config) {\r\n                    var channelPair = this.channelPair,\r\n                        idSelect = this.idSelect,\r\n                        chSelect = this.chSelect;\r\n    \r\n                    this.couplingPoint = 2 * stream.read(1);\r\n                    this.coupledCount = stream.read(3);\r\n    \r\n                    var gainCount = 0;\r\n                    for (var i = 0; i <= this.coupledCount; i++) {\r\n                        gainCount++;\r\n                        channelPair[i] = stream.read(1);\r\n                        idSelect[i] = stream.read(4);\r\n    \r\n                        if (channelPair[i]) {\r\n                            chSelect[i] = stream.read(2);\r\n                            if (chSelect[i] === 3)\r\n                                gainCount++;\r\n    \r\n                        } else {\r\n                            chSelect[i] = 2;\r\n                        }\r\n                    }\r\n    \r\n                    this.couplingPoint += stream.read(1);\r\n                    this.couplingPoint |= (this.couplingPoint >>> 1);\r\n    \r\n                    var sign = stream.read(1),\r\n                        scale = CCE_SCALE[stream.read(2)];\r\n    \r\n                    this.ics.decode(stream, config, false);\r\n    \r\n                    var groupCount = this.ics.info.groupCount,\r\n                        maxSFB = this.ics.info.maxSFB,\r\n                        bandTypes = this.ics.bandTypes;\r\n    \r\n                    for (var i = 0; i < gainCount; i++) {\r\n                        var idx = 0,\r\n                            cge = 1,\r\n                            gain = 0,\r\n                            gainCache = 1;\r\n    \r\n                        if (i > 0) {\r\n                            cge = this.couplingPoint === CCEElement.AFTER_IMDCT ? 1 : stream.read(1);\r\n                            gain = cge ? Huffman.decodeScaleFactor(stream) - 60 : 0;\r\n                            gainCache = Math.pow(scale, -gain);\r\n                        }\r\n    \r\n                        var gain_i = this.gain[i] = new Float32Array(120);\r\n    \r\n                        if (this.couplingPoint === CCEElement.AFTER_IMDCT) {\r\n                            gain_i[0] = gainCache;\r\n                        } else {\r\n                            for (var g = 0; g < groupCount; g++) {\r\n                                for (var sfb = 0; sfb < maxSFB; sfb++) {\r\n                                    if (bandTypes[idx] !== ICStream.ZERO_BT) {\r\n                                        if (cge === 0) {\r\n                                            var t = Huffman.decodeScaleFactor(stream) - 60;\r\n                                            if (t !== 0) {\r\n                                                var s = 1;\r\n                                                t = gain += t;\r\n                                                if (!sign) {\r\n                                                    s -= 2 * (t & 0x1);\r\n                                                    t >>>= 1;\r\n                                                }\r\n                                                gainCache = Math.pow(scale, -t) * s;\r\n                                            }\r\n                                        }\r\n                                        gain_i[idx++] = gainCache;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n    \r\n                applyIndependentCoupling: function (index, data) {\r\n                    var gain = this.gain[index][0],\r\n                        iqData = this.ics.data;\r\n    \r\n                    for (var i = 0; i < data.length; i++) {\r\n                        data[i] += gain * iqData[i];\r\n                    }\r\n                },\r\n    \r\n                applyDependentCoupling: function (index, data) {\r\n                    var info = this.ics.info,\r\n                        swbOffsets = info.swbOffsets,\r\n                        groupCount = info.groupCount,\r\n                        maxSFB = info.maxSFB,\r\n                        bandTypes = this.ics.bandTypes,\r\n                        iqData = this.ics.data;\r\n    \r\n                    var idx = 0,\r\n                        offset = 0,\r\n                        gains = this.gain[index];\r\n    \r\n                    for (var g = 0; g < groupCount; g++) {\r\n                        var len = info.groupLength[g];\r\n    \r\n                        for (var sfb = 0; sfb < maxSFB; sfb++, idx++) {\r\n                            if (bandTypes[idx] !== ICStream.ZERO_BT) {\r\n                                var gain = gains[idx];\r\n                                for (var group = 0; group < len; group++) {\r\n                                    for (var k = swbOffsets[sfb]; k < swbOffsets[swb + 1]; k++) {\r\n                                        data[offset + group * 128 + k] += gain * iqData[offset + group * 128 + k];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n    \r\n                        offset += len * 128;\r\n                    }\r\n                }\r\n            };\r\n            return CCEElement;\r\n        })();\r\n    \r\n        // Channel Pair Element\r\n        var CPEElement = (function(){\r\n            function CPEElement(config) {\r\n                this.ms_used = [];\r\n                this.left = new ICStream(config);\r\n                this.right = new ICStream(config);\r\n            }\r\n    \r\n            var MAX_MS_MASK = 128;\r\n    \r\n            var MASK_TYPE_ALL_0 = 0,\r\n                MASK_TYPE_USED = 1,\r\n                MASK_TYPE_ALL_1 = 2,\r\n                MASK_TYPE_RESERVED = 3;\r\n    \r\n            CPEElement.prototype.decode = function(stream, config) {\r\n                var left = this.left,\r\n                    right = this.right,\r\n                    ms_used = this.ms_used;\r\n    \r\n                if (this.commonWindow = !!stream.read(1)) {\r\n                    left.info.decode(stream, config, true);\r\n                    right.info = left.info;\r\n    \r\n                    var mask = stream.read(2);\r\n                    this.maskPresent = !!mask;\r\n    \r\n                    switch (mask) {\r\n                        case MASK_TYPE_USED:\r\n                            var len = left.info.groupCount * left.info.maxSFB;\r\n                            for (var i = 0; i < len; i++) {\r\n                                ms_used[i] = !!stream.read(1);\r\n                            }\r\n                            break;\r\n    \r\n                        case MASK_TYPE_ALL_0:\r\n                        case MASK_TYPE_ALL_1:\r\n                            var val = !!mask;\r\n                            for (var i = 0; i < MAX_MS_MASK; i++) {\r\n                                ms_used[i] = val;\r\n                            }\r\n                            break;\r\n    \r\n                        default:\r\n                            throw new Error(\"Reserved ms mask type: \" + mask);\r\n                    }\r\n                } else {\r\n                    for (var i = 0; i < MAX_MS_MASK; i++)\r\n                        ms_used[i] = false;\r\n                }\r\n    \r\n                left.decode(stream, config, this.commonWindow);\r\n                right.decode(stream, config, this.commonWindow);\r\n            };\r\n    \r\n            return CPEElement;\r\n        })();\r\n    \r\n        var AACDecoder = AV.Decoder.extend(function() {\r\n            AV.Decoder.register('mp4a', this);\r\n            AV.Decoder.register('aac ', this);\r\n    \r\n            // AAC profiles\r\n            var AOT_AAC_MAIN = 1, // no\r\n                AOT_AAC_LC = 2,   // yes\r\n                AOT_AAC_LTP = 4,  // no\r\n                AOT_ESCAPE = 31;\r\n    \r\n            // Channel configurations\r\n            var CHANNEL_CONFIG_NONE = 0,\r\n                CHANNEL_CONFIG_MONO = 1,\r\n                CHANNEL_CONFIG_STEREO = 2,\r\n                CHANNEL_CONFIG_STEREO_PLUS_CENTER = 3,\r\n                CHANNEL_CONFIG_STEREO_PLUS_CENTER_PLUS_REAR_MONO = 4,\r\n                CHANNEL_CONFIG_FIVE = 5,\r\n                CHANNEL_CONFIG_FIVE_PLUS_ONE = 6,\r\n                CHANNEL_CONFIG_SEVEN_PLUS_ONE = 8;\r\n    \r\n            this.prototype.init = function() {\r\n                this.format.floatingPoint = true;\r\n            }\r\n    \r\n            this.prototype.setCookie = function(buffer) {\r\n                var data = AV.Stream.fromBuffer(buffer),\r\n                    stream = new AV.Bitstream(data);\r\n    \r\n                this.config = {};\r\n    \r\n                this.config.profile = stream.read(5);\r\n                if (this.config.profile === AOT_ESCAPE)\r\n                    this.config.profile = 32 + stream.read(6);\r\n    \r\n                this.config.sampleIndex = stream.read(4);\r\n                if (this.config.sampleIndex === 0x0f) {\r\n                    this.config.sampleRate = stream.read(24);\r\n                    for (var i = 0; i < SAMPLE_RATES.length; i++) {\r\n                        if (SAMPLE_RATES[i] === this.config.sampleRate) {\r\n                            this.config.sampleIndex = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.config.sampleRate = SAMPLE_RATES[this.config.sampleIndex];\r\n                }\r\n    \r\n                this.config.chanConfig = stream.read(4);\r\n                this.format.channelsPerFrame = this.config.chanConfig; // sometimes m4a files encode this wrong\r\n    \r\n                switch (this.config.profile) {\r\n                    case AOT_AAC_MAIN:\r\n                    case AOT_AAC_LC:\r\n                    case AOT_AAC_LTP:\r\n                        if (stream.read(1)) // frameLengthFlag\r\n                            throw new Error('frameLengthFlag not supported');\r\n    \r\n                        this.config.frameLength = 1024;\r\n    \r\n                        if (stream.read(1)) // dependsOnCoreCoder\r\n                            stream.advance(14); // coreCoderDelay\r\n    \r\n                        if (stream.read(1)) { // extensionFlag\r\n                            if (this.config.profile > 16) { // error resiliant profile\r\n                                this.config.sectionDataResilience = stream.read(1);\r\n                                this.config.scalefactorResilience = stream.read(1);\r\n                                this.config.spectralDataResilience = stream.read(1);\r\n                            }\r\n    \r\n                            stream.advance(1);\r\n                        }\r\n    \r\n                        if (this.config.chanConfig === CHANNEL_CONFIG_NONE) {\r\n                            stream.advance(4) // element_instance_tag\r\n                            throw new Error('PCE unimplemented');\r\n                        }\r\n    \r\n                        break;\r\n    \r\n                    default:\r\n                        throw new Error('AAC profile ' + this.config.profile + ' not supported.');\r\n                }\r\n    \r\n                this.filter_bank = new FilterBank(false, this.config.chanConfig);\r\n            };\r\n    \r\n            var SCE_ELEMENT = 0,\r\n                CPE_ELEMENT = 1,\r\n                CCE_ELEMENT = 2,\r\n                LFE_ELEMENT = 3,\r\n                DSE_ELEMENT = 4,\r\n                PCE_ELEMENT = 5,\r\n                FIL_ELEMENT = 6,\r\n                END_ELEMENT = 7;\r\n    \r\n            // The main decoding function.\r\n            this.prototype.readChunk = function() {\r\n                var stream = this.bitstream;\r\n    \r\n                // check if there is an ADTS header, and read it if so\r\n                if (stream.peek(12) === 0xfff)\r\n                    ADTSDemuxer.readHeader(stream);\r\n    \r\n                this.cces = [];\r\n                var elements = [],\r\n                    config = this.config,\r\n                    frameLength = config.frameLength,\r\n                    elementType = null;\r\n    \r\n                while ((elementType = stream.read(3)) !== END_ELEMENT) {\r\n                    var id = stream.read(4);\r\n    \r\n                    switch (elementType) {\r\n                        // single channel and low frequency elements\r\n                        case SCE_ELEMENT:\r\n                        case LFE_ELEMENT:\r\n                            var ics = new ICStream(this.config);\r\n                            ics.id = id;\r\n                            elements.push(ics);\r\n                            ics.decode(stream, config, false);\r\n                            break;\r\n    \r\n                        // channel pair element\r\n                        case CPE_ELEMENT:\r\n                            var cpe = new CPEElement(this.config);\r\n                            cpe.id = id;\r\n                            elements.push(cpe);\r\n                            cpe.decode(stream, config);\r\n                            break;\r\n    \r\n                        // channel coupling element\r\n                        case CCE_ELEMENT:\r\n                            var cce = new CCEElement(this.config);\r\n                            this.cces.push(cce);\r\n                            cce.decode(stream, config);\r\n                            break;\r\n    \r\n                        // data-stream element\r\n                        case DSE_ELEMENT:\r\n                            var align = stream.read(1),\r\n                                count = stream.read(8);\r\n    \r\n                            if (count === 255)\r\n                                count += stream.read(8);\r\n    \r\n                            if (align)\r\n                                stream.align();\r\n    \r\n                            // skip for now...\r\n                            stream.advance(count * 8);\r\n                            break;\r\n    \r\n                        // program configuration element\r\n                        case PCE_ELEMENT:\r\n                            throw new Error(\"TODO: PCE_ELEMENT\")\r\n                            break;\r\n    \r\n                        // filler element\r\n                        case FIL_ELEMENT:\r\n                            if (id === 15)\r\n                                id += stream.read(8) - 1;\r\n    \r\n                            // skip for now...\r\n                            stream.advance(id * 8);\r\n                            break;\r\n    \r\n                        default:\r\n                            throw new Error('Unknown element')\r\n                    }\r\n                }\r\n    \r\n                stream.align();\r\n                this.process(elements);\r\n    \r\n                // Interleave channels\r\n                var data = this.data,\r\n                    channels = data.length,\r\n                    output = new Float32Array(frameLength * channels),\r\n                    j = 0;\r\n    \r\n                for (var k = 0; k < frameLength; k++) {\r\n                    for (var i = 0; i < channels; i++) {\r\n                        output[j++] = data[i][k] / 32768;\r\n                    }\r\n                }\r\n    \r\n                return output;\r\n            };\r\n    \r\n            this.prototype.process = function(elements) {\r\n                var channels = this.config.chanConfig;\r\n    \r\n                // if (channels === 1 &&  psPresent)\r\n                // TODO: sbrPresent (2)\r\n                var mult = 1;\r\n    \r\n                var len = mult * this.config.frameLength;\r\n                var data = this.data = [];\r\n    \r\n                // Initialize channels\r\n                for (var i = 0; i < channels; i++) {\r\n                    data[i] = new Float32Array(len);\r\n                }\r\n    \r\n                var channel = 0;\r\n                for (var i = 0; i < elements.length && channel < channels; i++) {\r\n                    var e = elements[i];\r\n    \r\n                    if (e instanceof ICStream) { // SCE or LFE element\r\n                        channel += this.processSingle(e, channel);\r\n                    } else if (e instanceof CPEElement) {\r\n                        this.processPair(e, channel);\r\n                        channel += 2;\r\n                    } else if (e instanceof CCEElement) {\r\n                        channel++;\r\n                    } else {\r\n                        throw new Error(\"Unknown element found.\")\r\n                    }\r\n                }\r\n            };\r\n    \r\n            this.prototype.processSingle = function(element, channel) {\r\n                var profile = this.config.profile,\r\n                    info = element.info,\r\n                    data = element.data;\r\n    \r\n                if (profile === AOT_AAC_MAIN)\r\n                    throw new Error(\"Main prediction unimplemented\");\r\n    \r\n                if (profile === AOT_AAC_LTP)\r\n                    throw new Error(\"LTP prediction unimplemented\");\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.BEFORE_TNS, data, null);\r\n    \r\n                if (element.tnsPresent)\r\n                    element.tns.process(element, data, false);\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.AFTER_TNS, data, null);\r\n    \r\n                // filterbank\r\n                this.filter_bank.process(info, data, this.data[channel], channel);\r\n    \r\n                if (profile === AOT_AAC_LTP)\r\n                    throw new Error(\"LTP prediction unimplemented\");\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.AFTER_IMDCT, this.data[channel], null);\r\n    \r\n                if (element.gainPresent)\r\n                    throw new Error(\"Gain control not implemented\");\r\n    \r\n                if (this.sbrPresent)\r\n                    throw new Error(\"SBR not implemented\");\r\n    \r\n                return 1;\r\n            };\r\n    \r\n            this.prototype.processPair = function(element, channel) {\r\n                var profile = this.config.profile,\r\n                    left = element.left,\r\n                    right = element.right,\r\n                    l_info = left.info,\r\n                    r_info = right.info,\r\n                    l_data = left.data,\r\n                    r_data = right.data;\r\n    \r\n                // Mid-side stereo\r\n                if (element.commonWindow && element.maskPresent)\r\n                    this.processMS(element, l_data, r_data);\r\n    \r\n                if (profile === AOT_AAC_MAIN)\r\n                    throw new Error(\"Main prediction unimplemented\");\r\n    \r\n                // Intensity stereo\r\n                this.processIS(element, l_data, r_data);\r\n    \r\n                if (profile === AOT_AAC_LTP)\r\n                    throw new Error(\"LTP prediction unimplemented\");\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.BEFORE_TNS, l_data, r_data);\r\n    \r\n                if (left.tnsPresent)\r\n                    left.tns.process(left, l_data, false);\r\n    \r\n                if (right.tnsPresent)\r\n                    right.tns.process(right, r_data, false);\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.AFTER_TNS, l_data, r_data);\r\n    \r\n                // filterbank\r\n                this.filter_bank.process(l_info, l_data, this.data[channel], channel);\r\n                this.filter_bank.process(r_info, r_data, this.data[channel + 1], channel + 1);\r\n    \r\n                if (profile === AOT_AAC_LTP)\r\n                    throw new Error(\"LTP prediction unimplemented\");\r\n    \r\n                this.applyChannelCoupling(element, CCEElement.AFTER_IMDCT, this.data[channel], this.data[channel + 1]);\r\n    \r\n                if (left.gainPresent)\r\n                    throw new Error(\"Gain control not implemented\");\r\n    \r\n                if (right.gainPresent)\r\n                    throw new Error(\"Gain control not implemented\");\r\n    \r\n                if (this.sbrPresent)\r\n                    throw new Error(\"SBR not implemented\");\r\n            };\r\n    \r\n            // Intensity stereo\r\n            this.prototype.processIS = function(element, left, right) {\r\n                var ics = element.right,\r\n                    info = ics.info,\r\n                    offsets = info.swbOffsets,\r\n                    windowGroups = info.groupCount,\r\n                    maxSFB = info.maxSFB,\r\n                    bandTypes = ics.bandTypes,\r\n                    sectEnd = ics.sectEnd,\r\n                    scaleFactors = ics.scaleFactors;\r\n    \r\n                var idx = 0, groupOff = 0;\r\n                for (var g = 0; g < windowGroups; g++) {\r\n                    for (var i = 0; i < maxSFB;) {\r\n                        var end = sectEnd[idx];\r\n    \r\n                        if (bandTypes[idx] === ICStream.INTENSITY_BT || bandTypes[idx] === ICStream.INTENSITY_BT2) {\r\n                            for (; i < end; i++, idx++) {\r\n                                var c = bandTypes[idx] === ICStream.INTENSITY_BT ? 1 : -1;\r\n                                if (element.maskPresent)\r\n                                    c *= element.ms_used[idx] ? -1 : 1;\r\n    \r\n                                var scale = c * scaleFactors[idx];\r\n                                for (var w = 0; w < info.groupLength[g]; w++) {\r\n                                    var off = groupOff + w * 128 + offsets[i],\r\n                                        len = offsets[i + 1] - offsets[i];\r\n    \r\n                                    for (var j = 0; j < len; j++) {\r\n                                        right[off + j] = left[off + j] * scale;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else  {\r\n                            idx += end - i;\r\n                            i = end;\r\n                        }\r\n                    }\r\n    \r\n                    groupOff += info.groupLength[g] * 128;\r\n                }\r\n            };\r\n    \r\n            // Mid-side stereo\r\n            this.prototype.processMS = function(element, left, right) {\r\n                var ics = element.left,\r\n                    info = ics.info,\r\n                    offsets = info.swbOffsets,\r\n                    windowGroups = info.groupCount,\r\n                    maxSFB = info.maxSFB,\r\n                    sfbCBl = ics.bandTypes,\r\n                    sfbCBr = element.right.bandTypes;\r\n    \r\n                var groupOff = 0, idx = 0;\r\n                for (var g = 0; g < windowGroups; g++) {\r\n                    for (var i = 0; i < maxSFB; i++, idx++) {\r\n                        if (element.ms_used[idx] && sfbCBl[idx] < ICStream.NOISE_BT && sfbCBr[idx] < ICStream.NOISE_BT) {\r\n                            for (var w = 0; w < info.groupLength[g]; w++) {\r\n                                var off = groupOff + w * 128 + offsets[i];\r\n                                for (var j = 0; j < offsets[i + 1] - offsets[i]; j++) {\r\n                                    var t = left[off + j] - right[off + j];\r\n                                    left[off + j] += right[off + j];\r\n                                    right[off + j] = t;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    groupOff += info.groupLength[g] * 128;\r\n                }\r\n            };\r\n    \r\n            this.prototype.applyChannelCoupling = function(element, couplingPoint, data1, data2) {\r\n                var cces = this.cces,\r\n                    isChannelPair = element instanceof CPEElement,\r\n                    applyCoupling = couplingPoint === CCEElement.AFTER_IMDCT ? 'applyIndependentCoupling' : 'applyDependentCoupling';\r\n    \r\n                for (var i = 0; i < cces.length; i++) {\r\n                    var cce = cces[i],\r\n                        index = 0;\r\n    \r\n                    if (cce.couplingPoint === couplingPoint) {\r\n                        for (var c = 0; c < cce.coupledCount; c++) {\r\n                            var chSelect = cce.chSelect[c];\r\n                            if (cce.channelPair[c] === isChannelPair && cce.idSelect[c] === element.id) {\r\n                                if (chSelect !== 1) {\r\n                                    cce[applyCoupling](index, data1);\r\n                                    if (chSelect) index++;\r\n                                }\r\n    \r\n                                if (chSelect !== 2)\r\n                                    cce[applyCoupling](index++, data2);\r\n    \r\n                            } else {\r\n                                index += 1 + (chSelect === 3 ? 1 : 0);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n    \r\n        });\r\n    \r\n        var FFT = (function(){\r\n            function FFT(length) {\r\n                this.length = length;\r\n    \r\n                switch (length) {\r\n                    case 64:\r\n                        this.roots = generateFFTTableShort(64);\r\n                        break;\r\n    \r\n                    case 512:\r\n                        this.roots = generateFFTTableLong(512);\r\n                        break;\r\n    \r\n                    case 60:\r\n                        this.roots = generateFFTTableShort(60);\r\n                        break;\r\n    \r\n                    case 480:\r\n                        this.roots = generateFFTTableLong(480);\r\n                        break;\r\n    \r\n                    default:\r\n                        throw new Error(\"unexpected FFT length: \" + length);\r\n                }\r\n    \r\n                // processing buffers\r\n                this.rev = new Array(length);\r\n                for (var i = 0; i < length; i++) {\r\n                    this.rev[i] = new Float32Array(2);\r\n                }\r\n    \r\n                this.a = new Float32Array(2);\r\n                this.b = new Float32Array(2);\r\n                this.c = new Float32Array(2);\r\n                this.d = new Float32Array(2);\r\n                this.e1 = new Float32Array(2);\r\n                this.e2 = new Float32Array(2);\r\n            }\r\n    \r\n            function generateFFTTableShort(len) {\r\n                var t = 2 * Math.PI / len,\r\n                    cosT = Math.cos(t),\r\n                    sinT = Math.sin(t),\r\n                    f = new Array(len);\r\n    \r\n                for (var i = 0; i < len; i++) {\r\n                    f[i] = new Float32Array(2);\r\n                }\r\n    \r\n                f[0][0] = 1;\r\n                f[0][1] = 0;\r\n                var lastImag = 0;\r\n    \r\n                for (var i = 1; i < len; i++) {\r\n                    f[i][0] = f[i - 1][0] * cosT + lastImag * sinT;\r\n                    lastImag = lastImag * cosT - f[i - 1][0] * sinT;\r\n                    f[i][1] = -lastImag;\r\n                }\r\n    \r\n                return f;\r\n            }\r\n    \r\n            function generateFFTTableLong(len) {\r\n                var t = 2 * Math.PI / len,\r\n                    cosT = Math.cos(t),\r\n                    sinT = Math.sin(t),\r\n                    f = new Array(len);\r\n    \r\n                for (var i = 0; i < len; i++) {\r\n                    f[i] = new Float32Array(3);\r\n                }\r\n    \r\n                f[0][0] = 1;\r\n                f[0][1] = 0;\r\n                f[0][2] = 0;\r\n    \r\n                for (var i = 1; i < len; i++) {\r\n                    f[i][0] = f[i - 1][0] * cosT + f[i - 1][2] * sinT;\r\n                    f[i][2] = f[i - 1][2] * cosT - f[i - 1][0] * sinT;\r\n                    f[i][1] = -f[i][2];\r\n                }\r\n    \r\n                return f;\r\n            }\r\n    \r\n            FFT.prototype.process = function(input, forward) {\r\n                var length = this.length,\r\n                    imOffset = (forward ? 2 : 1),\r\n                    scale = (forward ? length : 1),\r\n                    rev = this.rev,\r\n                    roots = this.roots;\r\n    \r\n                // bit-reversal\r\n                var ii = 0;\r\n                for (var i = 0; i < length; i++) {\r\n                    rev[i][0] = input[ii][0];\r\n                    rev[i][1] = input[ii][1];\r\n    \r\n                    var k = length >>> 1;\r\n                    while (ii >= k && k > 0) {\r\n                        ii -= k;\r\n                        k >>= 1;\r\n                    }\r\n    \r\n                    ii += k;\r\n                }\r\n    \r\n                var a = this.a,\r\n                    b = this.b,\r\n                    c = this.c,\r\n                    d = this.d,\r\n                    e1 = this.e1,\r\n                    e2 = this.e2,\r\n                    tmpInputI;\r\n    \r\n                for (var i = 0; i < length; i++) {\r\n                    input[i][0] = rev[i][0];\r\n                    input[i][1] = rev[i][1];\r\n                }\r\n    \r\n                // bottom base-4 round\r\n                for (var i = 0; i < length; i += 4) {\r\n                    tmpInputI = input[i];\r\n                    a[0] = tmpInputI[0] + input[i + 1][0];\r\n                    a[1] = tmpInputI[1] + input[i + 1][1];\r\n                    b[0] = input[i + 2][0] + input[i + 3][0];\r\n                    b[1] = input[i + 2][1] + input[i + 3][1];\r\n                    c[0] = tmpInputI[0] - input[i + 1][0];\r\n                    c[1] = tmpInputI[1] - input[i + 1][1];\r\n                    d[0] = input[i + 2][0] - input[i + 3][0];\r\n                    d[1] = input[i + 2][1] - input[i + 3][1];\r\n                    tmpInputI[0] = a[0] + b[0];\r\n                    tmpInputI[1] = a[1] + b[1];\r\n                    input[i + 2][0] = a[0] - b[0];\r\n                    input[i + 2][1] = a[1] - b[1];\r\n    \r\n                    e1[0] = c[0] - d[1];\r\n                    e1[1] = c[1] + d[0];\r\n                    e2[0] = c[0] + d[1];\r\n                    e2[1] = c[1] - d[0];\r\n    \r\n                    if (forward) {\r\n                        input[i + 1][0] = e2[0];\r\n                        input[i + 1][1] = e2[1];\r\n                        input[i + 3][0] = e1[0];\r\n                        input[i + 3][1] = e1[1];\r\n                    } else {\r\n                        input[i + 1][0] = e1[0];\r\n                        input[i + 1][1] = e1[1];\r\n                        input[i + 3][0] = e2[0];\r\n                        input[i + 3][1] = e2[1];\r\n                    }\r\n                }\r\n    \r\n                // iterations from bottom to top\r\n                for (var i = 4; i < length; i <<= 1) {\r\n                    var shift = i << 1,\r\n                        m = length / shift;\r\n    \r\n                    for(var j = 0; j < length; j += shift) {\r\n                        for(var k = 0; k < i; k++) {\r\n                            var km = k * m, tmpI = input[i + j + k], tmpJK = input[j + k],\r\n                                rootRe = roots[km][0],\r\n                                rootIm = roots[km][imOffset],\r\n                                zRe = tmpI[0] * rootRe - tmpI[1] * rootIm,\r\n                                zIm = tmpI[0] * rootIm + tmpI[1] * rootRe;\r\n    \r\n                            tmpI[0] = (tmpJK[0] - zRe) * scale;\r\n                            tmpI[1] = (tmpJK[1] - zIm) * scale;\r\n                            tmpJK[0] = (tmpJK[0] + zRe) * scale;\r\n                            tmpJK[1] = (tmpJK[1] + zIm) * scale;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n    \r\n            return FFT;\r\n        })();\r\n    \r\n        var FilterBank= (function() {\r\n            function FilterBank(smallFrames, channels) {\r\n                if (smallFrames) {\r\n                    throw new Error(\"WHA?? No small frames allowed.\");\r\n                }\r\n    \r\n                this.length = 1024;\r\n                this.shortLength = 128;\r\n    \r\n                this.mid = (this.length - this.shortLength) / 2;\r\n                this.trans = this.shortLength / 2;\r\n    \r\n                this.mdctShort = new MDCT(this.shortLength * 2);\r\n                this.mdctLong = new MDCT(this.length * 2);\r\n    \r\n                this.overlaps = new Array(channels);\r\n                for (var i = 0; i < channels; i++) {\r\n                    this.overlaps[i] = new Float32Array(this.length);\r\n                }\r\n    \r\n                this.buf = new Float32Array(2 * this.length);\r\n            }\r\n    \r\n            function generateSineWindow(len) {\r\n                var d = new Float32Array(len);\r\n                for (var i = 0; i < len; i++) {\r\n                    d[i] = Math.sin((i + 0.5) * (Math.PI / (2.0 * len)))\r\n                }\r\n                return d;\r\n            }\r\n    \r\n            function generateKBDWindow(alpha, len) {\r\n                var PIN = Math.PI / len,\r\n                    out = new Float32Array(len),\r\n                    sum = 0,\r\n                    f = new Float32Array(len),\r\n                    alpha2 = (alpha * PIN) * (alpha * PIN);\r\n    \r\n                for (var n = 0; n < len; n++) {\r\n                    var tmp = n * (len - n) * alpha2,\r\n                        bessel = 1;\r\n    \r\n                    for (var j = 50; j > 0; j--) {\r\n                        bessel = bessel * tmp / (j * j) + 1;\r\n                    }\r\n    \r\n                    sum += bessel;\r\n                    f[n] = sum;\r\n                }\r\n    \r\n                sum++;\r\n                for (var n = 0; n < len; n++) {\r\n                    out[n] = Math.sqrt(f[n] / sum);\r\n                }\r\n    \r\n                return out;\r\n            }\r\n    \r\n            var SINE_1024 = generateSineWindow(1024),\r\n                SINE_128 = generateSineWindow(128),\r\n                KBD_1024 = generateKBDWindow(4, 1024),\r\n                KBD_128 = generateKBDWindow(6, 128),\r\n                LONG_WINDOWS = [SINE_1024, KBD_1024],\r\n                SHORT_WINDOWS = [SINE_128, KBD_128];\r\n    \r\n            FilterBank.prototype.process = function (info, input, output, channel) {\r\n                var overlap = this.overlaps[channel],\r\n                    windowShape = info.windowShape[1],\r\n                    windowShapePrev = info.windowShape[0],\r\n                    longWindows = LONG_WINDOWS[windowShape],\r\n                    shortWindows = SHORT_WINDOWS[windowShape],\r\n                    longWindowsPrev = LONG_WINDOWS[windowShapePrev],\r\n                    shortWindowsPrev = SHORT_WINDOWS[windowShapePrev],\r\n                    length = this.length,\r\n                    shortLen = this.shortLength,\r\n                    mid = this.mid,\r\n                    trans = this.trans,\r\n                    buf = this.buf,\r\n                    mdctLong = this.mdctLong,\r\n                    mdctShort = this.mdctShort;\r\n    \r\n                switch (info.windowSequence) {\r\n                    case ICStream.ONLY_LONG_SEQUENCE:\r\n                        mdctLong.process(input, 0, buf, 0);\r\n    \r\n                        // add second half output of previous frame to windowed output of current frame\r\n                        for (var i = 0; i < length; i++) {\r\n                            output[i] = overlap[i] + (buf[i] * longWindowsPrev[i]);\r\n                        }\r\n    \r\n                        // window the second half and save as overlap for next frame\r\n                        for (var i = 0; i < length; i++) {\r\n                            overlap[i] = buf[length + i] * longWindows[length - 1 - i];\r\n                        }\r\n    \r\n                        break;\r\n    \r\n                    case ICStream.LONG_START_SEQUENCE:\r\n                        mdctLong.process(input, 0, buf, 0);\r\n    \r\n                        // add second half output of previous frame to windowed output of current frame\r\n                        for (var i = 0; i < length; i++) {\r\n                            output[i] = overlap[i] + (buf[i] * longWindowsPrev[i]);\r\n                        }\r\n    \r\n                        // window the second half and save as overlap for next frame\r\n                        for (var i = 0; i < mid; i++) {\r\n                            overlap[i] = buf[length + i];\r\n                        }\r\n    \r\n                        for (var i = 0; i < shortLen; i++) {\r\n                            overlap[mid + i] = buf[length + mid + i] * shortWindows[shortLen - i - 1];\r\n                        }\r\n    \r\n                        for (var i = 0; i < mid; i++) {\r\n                            overlap[mid + shortLen + i] = 0;\r\n                        }\r\n    \r\n                        break;\r\n    \r\n                    case ICStream.EIGHT_SHORT_SEQUENCE:\r\n                        for (var i = 0; i < 8; i++) {\r\n                            mdctShort.process(input, i * shortLen, buf, 2 * i * shortLen);\r\n                        }\r\n    \r\n                        // add second half output of previous frame to windowed output of current frame\r\n                        for (var i = 0; i < mid; i++) {\r\n                            output[i] = overlap[i];\r\n                        }\r\n    \r\n                        for (var i = 0; i < shortLen; i++) {\r\n                            output[mid + i] = overlap[mid + i] + buf[i] * shortWindowsPrev[i];\r\n                            output[mid + 1 * shortLen + i] = overlap[mid + shortLen * 1 + i] + (buf[shortLen * 1 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 2 + i] * shortWindows[i]);\r\n                            output[mid + 2 * shortLen + i] = overlap[mid + shortLen * 2 + i] + (buf[shortLen * 3 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 4 + i] * shortWindows[i]);\r\n                            output[mid + 3 * shortLen + i] = overlap[mid + shortLen * 3 + i] + (buf[shortLen * 5 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 6 + i] * shortWindows[i]);\r\n    \r\n                            if (i < trans)\r\n                                output[mid + 4 * shortLen + i] = overlap[mid + shortLen * 4 + i] + (buf[shortLen * 7 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 8 + i] * shortWindows[i]);\r\n                        }\r\n    \r\n                        // window the second half and save as overlap for next frame\r\n                        for (var i = 0; i < shortLen; i++) {\r\n                            if (i >= trans)\r\n                                overlap[mid + 4 * shortLen + i - length] = (buf[shortLen * 7 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 8 + i] * shortWindows[i]);\r\n    \r\n                            overlap[mid + 5 * shortLen + i - length] = (buf[shortLen * 9 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 10 + i] * shortWindows[i]);\r\n                            overlap[mid + 6 * shortLen + i - length] = (buf[shortLen * 11 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 12 + i] * shortWindows[i]);\r\n                            overlap[mid + 7 * shortLen + i - length] = (buf[shortLen * 13 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 14 + i] * shortWindows[i]);\r\n                            overlap[mid + 8 * shortLen + i - length] = (buf[shortLen * 15 + i] * shortWindows[shortLen - 1 - i]);\r\n                        }\r\n    \r\n                        for (var i = 0; i < mid; i++) {\r\n                            overlap[mid + shortLen + i] = 0;\r\n                        }\r\n    \r\n                        break;\r\n    \r\n                    case ICStream.LONG_STOP_SEQUENCE:\r\n                        mdctLong.process(input, 0, buf, 0);\r\n    \r\n                        // add second half output of previous frame to windowed output of current frame\r\n                        // construct first half window using padding with 1's and 0's\r\n                        for (var i = 0; i < mid; i++) {\r\n                            output[i] = overlap[i];\r\n                        }\r\n    \r\n                        for (var i = 0; i < shortLen; i++) {\r\n                            output[mid + i] = overlap[mid + i] + (buf[mid + i] * shortWindowsPrev[i]);\r\n                        }\r\n    \r\n                        for (var i = 0; i < mid; i++) {\r\n                            output[mid + shortLen + i] = overlap[mid + shortLen + i] + buf[mid + shortLen + i];\r\n                        }\r\n    \r\n                        // window the second half and save as overlap for next frame\r\n                        for (var i = 0; i < length; i++) {\r\n                            overlap[i] = buf[length + i] * longWindows[length - 1 - i];\r\n                        }\r\n    \r\n                        break;\r\n                }\r\n            };\r\n    \r\n            return FilterBank;\r\n        })();\r\n    \r\n        var Huffman = (function(){\r\n            var HCB1 = [\r\n                [1, 0, 0, 0, 0, 0],\r\n                [5, 16, 1, 0, 0, 0],\r\n                [5, 17, -1, 0, 0, 0],\r\n                [5, 18, 0, 0, 0, -1],\r\n                [5, 19, 0, 1, 0, 0],\r\n                [5, 20, 0, 0, 0, 1],\r\n                [5, 21, 0, 0, -1, 0],\r\n                [5, 22, 0, 0, 1, 0],\r\n                [5, 23, 0, -1, 0, 0],\r\n                [7, 96, 1, -1, 0, 0],\r\n                [7, 97, -1, 1, 0, 0],\r\n                [7, 98, 0, 0, -1, 1],\r\n                [7, 99, 0, 1, -1, 0],\r\n                [7, 100, 0, -1, 1, 0],\r\n                [7, 101, 0, 0, 1, -1],\r\n                [7, 102, 1, 1, 0, 0],\r\n                [7, 103, 0, 0, -1, -1],\r\n                [7, 104, -1, -1, 0, 0],\r\n                [7, 105, 0, -1, -1, 0],\r\n                [7, 106, 1, 0, -1, 0],\r\n                [7, 107, 0, 1, 0, -1],\r\n                [7, 108, -1, 0, 1, 0],\r\n                [7, 109, 0, 0, 1, 1],\r\n                [7, 110, 1, 0, 1, 0],\r\n                [7, 111, 0, -1, 0, 1],\r\n                [7, 112, 0, 1, 1, 0],\r\n                [7, 113, 0, 1, 0, 1],\r\n                [7, 114, -1, 0, -1, 0],\r\n                [7, 115, 1, 0, 0, 1],\r\n                [7, 116, -1, 0, 0, -1],\r\n                [7, 117, 1, 0, 0, -1],\r\n                [7, 118, -1, 0, 0, 1],\r\n                [7, 119, 0, -1, 0, -1],\r\n                [9, 480, 1, 1, -1, 0],\r\n                [9, 481, -1, 1, -1, 0],\r\n                [9, 482, 1, -1, 1, 0],\r\n                [9, 483, 0, 1, 1, -1],\r\n                [9, 484, 0, 1, -1, 1],\r\n                [9, 485, 0, -1, 1, 1],\r\n                [9, 486, 0, -1, 1, -1],\r\n                [9, 487, 1, -1, -1, 0],\r\n                [9, 488, 1, 0, -1, 1],\r\n                [9, 489, 0, 1, -1, -1],\r\n                [9, 490, -1, 1, 1, 0],\r\n                [9, 491, -1, 0, 1, -1],\r\n                [9, 492, -1, -1, 1, 0],\r\n                [9, 493, 0, -1, -1, 1],\r\n                [9, 494, 1, -1, 0, 1],\r\n                [9, 495, 1, -1, 0, -1],\r\n                [9, 496, -1, 1, 0, -1],\r\n                [9, 497, -1, -1, -1, 0],\r\n                [9, 498, 0, -1, -1, -1],\r\n                [9, 499, 0, 1, 1, 1],\r\n                [9, 500, 1, 0, 1, -1],\r\n                [9, 501, 1, 1, 0, 1],\r\n                [9, 502, -1, 1, 0, 1],\r\n                [9, 503, 1, 1, 1, 0],\r\n                [10, 1008, -1, -1, 0, 1],\r\n                [10, 1009, -1, 0, -1, -1],\r\n                [10, 1010, 1, 1, 0, -1],\r\n                [10, 1011, 1, 0, -1, -1],\r\n                [10, 1012, -1, 0, -1, 1],\r\n                [10, 1013, -1, -1, 0, -1],\r\n                [10, 1014, -1, 0, 1, 1],\r\n                [10, 1015, 1, 0, 1, 1],\r\n                [11, 2032, 1, -1, 1, -1],\r\n                [11, 2033, -1, 1, -1, 1],\r\n                [11, 2034, -1, 1, 1, -1],\r\n                [11, 2035, 1, -1, -1, 1],\r\n                [11, 2036, 1, 1, 1, 1],\r\n                [11, 2037, -1, -1, 1, 1],\r\n                [11, 2038, 1, 1, -1, -1],\r\n                [11, 2039, -1, -1, 1, -1],\r\n                [11, 2040, -1, -1, -1, -1],\r\n                [11, 2041, 1, 1, -1, 1],\r\n                [11, 2042, 1, -1, 1, 1],\r\n                [11, 2043, -1, 1, 1, 1],\r\n                [11, 2044, -1, 1, -1, -1],\r\n                [11, 2045, -1, -1, -1, 1],\r\n                [11, 2046, 1, -1, -1, -1],\r\n                [11, 2047, 1, 1, 1, -1]\r\n            ];\r\n    \r\n            var HCB2 = [\r\n                [3, 0, 0, 0, 0, 0],\r\n                [4, 2, 1, 0, 0, 0],\r\n                [5, 6, -1, 0, 0, 0],\r\n                [5, 7, 0, 0, 0, 1],\r\n                [5, 8, 0, 0, -1, 0],\r\n                [5, 9, 0, 0, 0, -1],\r\n                [5, 10, 0, -1, 0, 0],\r\n                [5, 11, 0, 0, 1, 0],\r\n                [5, 12, 0, 1, 0, 0],\r\n                [6, 26, 0, -1, 1, 0],\r\n                [6, 27, -1, 1, 0, 0],\r\n                [6, 28, 0, 1, -1, 0],\r\n                [6, 29, 0, 0, 1, -1],\r\n                [6, 30, 0, 1, 0, -1],\r\n                [6, 31, 0, 0, -1, 1],\r\n                [6, 32, -1, 0, 0, -1],\r\n                [6, 33, 1, -1, 0, 0],\r\n                [6, 34, 1, 0, -1, 0],\r\n                [6, 35, -1, -1, 0, 0],\r\n                [6, 36, 0, 0, -1, -1],\r\n                [6, 37, 1, 0, 1, 0],\r\n                [6, 38, 1, 0, 0, 1],\r\n                [6, 39, 0, -1, 0, 1],\r\n                [6, 40, -1, 0, 1, 0],\r\n                [6, 41, 0, 1, 0, 1],\r\n                [6, 42, 0, -1, -1, 0],\r\n                [6, 43, -1, 0, 0, 1],\r\n                [6, 44, 0, -1, 0, -1],\r\n                [6, 45, -1, 0, -1, 0],\r\n                [6, 46, 1, 1, 0, 0],\r\n                [6, 47, 0, 1, 1, 0],\r\n                [6, 48, 0, 0, 1, 1],\r\n                [6, 49, 1, 0, 0, -1],\r\n                [7, 100, 0, 1, -1, 1],\r\n                [7, 101, 1, 0, -1, 1],\r\n                [7, 102, -1, 1, -1, 0],\r\n                [7, 103, 0, -1, 1, -1],\r\n                [7, 104, 1, -1, 1, 0],\r\n                [7, 105, 1, 1, 0, -1],\r\n                [7, 106, 1, 0, 1, 1],\r\n                [7, 107, -1, 1, 1, 0],\r\n                [7, 108, 0, -1, -1, 1],\r\n                [7, 109, 1, 1, 1, 0],\r\n                [7, 110, -1, 0, 1, -1],\r\n                [7, 111, -1, -1, -1, 0],\r\n                [7, 112, -1, 0, -1, 1],\r\n                [7, 113, 1, -1, -1, 0],\r\n                [7, 114, 1, 1, -1, 0],\r\n                [8, 230, 1, -1, 0, 1],\r\n                [8, 231, -1, 1, 0, -1],\r\n                [8, 232, -1, -1, 1, 0],\r\n                [8, 233, -1, 0, 1, 1],\r\n                [8, 234, -1, -1, 0, 1],\r\n                [8, 235, -1, -1, 0, -1],\r\n                [8, 236, 0, -1, -1, -1],\r\n                [8, 237, 1, 0, 1, -1],\r\n                [8, 238, 1, 0, -1, -1],\r\n                [8, 239, 0, 1, -1, -1],\r\n                [8, 240, 0, 1, 1, 1],\r\n                [8, 241, -1, 1, 0, 1],\r\n                [8, 242, -1, 0, -1, -1],\r\n                [8, 243, 0, 1, 1, -1],\r\n                [8, 244, 1, -1, 0, -1],\r\n                [8, 245, 0, -1, 1, 1],\r\n                [8, 246, 1, 1, 0, 1],\r\n                [8, 247, 1, -1, 1, -1],\r\n                [8, 248, -1, 1, -1, 1],\r\n                [9, 498, 1, -1, -1, 1],\r\n                [9, 499, -1, -1, -1, -1],\r\n                [9, 500, -1, 1, 1, -1],\r\n                [9, 501, -1, 1, 1, 1],\r\n                [9, 502, 1, 1, 1, 1],\r\n                [9, 503, -1, -1, 1, -1],\r\n                [9, 504, 1, -1, 1, 1],\r\n                [9, 505, -1, 1, -1, -1],\r\n                [9, 506, -1, -1, 1, 1],\r\n                [9, 507, 1, 1, -1, -1],\r\n                [9, 508, 1, -1, -1, -1],\r\n                [9, 509, -1, -1, -1, 1],\r\n                [9, 510, 1, 1, -1, 1],\r\n                [9, 511, 1, 1, 1, -1]\r\n            ];\r\n    \r\n            var HCB3 = [\r\n                [1, 0, 0, 0, 0, 0],\r\n                [4, 8, 1, 0, 0, 0],\r\n                [4, 9, 0, 0, 0, 1],\r\n                [4, 10, 0, 1, 0, 0],\r\n                [4, 11, 0, 0, 1, 0],\r\n                [5, 24, 1, 1, 0, 0],\r\n                [5, 25, 0, 0, 1, 1],\r\n                [6, 52, 0, 1, 1, 0],\r\n                [6, 53, 0, 1, 0, 1],\r\n                [6, 54, 1, 0, 1, 0],\r\n                [6, 55, 0, 1, 1, 1],\r\n                [6, 56, 1, 0, 0, 1],\r\n                [6, 57, 1, 1, 1, 0],\r\n                [7, 116, 1, 1, 1, 1],\r\n                [7, 117, 1, 0, 1, 1],\r\n                [7, 118, 1, 1, 0, 1],\r\n                [8, 238, 2, 0, 0, 0],\r\n                [8, 239, 0, 0, 0, 2],\r\n                [8, 240, 0, 0, 1, 2],\r\n                [8, 241, 2, 1, 0, 0],\r\n                [8, 242, 1, 2, 1, 0],\r\n                [9, 486, 0, 0, 2, 1],\r\n                [9, 487, 0, 1, 2, 1],\r\n                [9, 488, 1, 2, 0, 0],\r\n                [9, 489, 0, 1, 1, 2],\r\n                [9, 490, 2, 1, 1, 0],\r\n                [9, 491, 0, 0, 2, 0],\r\n                [9, 492, 0, 2, 1, 0],\r\n                [9, 493, 0, 1, 2, 0],\r\n                [9, 494, 0, 2, 0, 0],\r\n                [9, 495, 0, 1, 0, 2],\r\n                [9, 496, 2, 0, 1, 0],\r\n                [9, 497, 1, 2, 1, 1],\r\n                [9, 498, 0, 2, 1, 1],\r\n                [9, 499, 1, 1, 2, 0],\r\n                [9, 500, 1, 1, 2, 1],\r\n                [10, 1002, 1, 2, 0, 1],\r\n                [10, 1003, 1, 0, 2, 0],\r\n                [10, 1004, 1, 0, 2, 1],\r\n                [10, 1005, 0, 2, 0, 1],\r\n                [10, 1006, 2, 1, 1, 1],\r\n                [10, 1007, 1, 1, 1, 2],\r\n                [10, 1008, 2, 1, 0, 1],\r\n                [10, 1009, 1, 0, 1, 2],\r\n                [10, 1010, 0, 0, 2, 2],\r\n                [10, 1011, 0, 1, 2, 2],\r\n                [10, 1012, 2, 2, 1, 0],\r\n                [10, 1013, 1, 2, 2, 0],\r\n                [10, 1014, 1, 0, 0, 2],\r\n                [10, 1015, 2, 0, 0, 1],\r\n                [10, 1016, 0, 2, 2, 1],\r\n                [11, 2034, 2, 2, 0, 0],\r\n                [11, 2035, 1, 2, 2, 1],\r\n                [11, 2036, 1, 1, 0, 2],\r\n                [11, 2037, 2, 0, 1, 1],\r\n                [11, 2038, 1, 1, 2, 2],\r\n                [11, 2039, 2, 2, 1, 1],\r\n                [11, 2040, 0, 2, 2, 0],\r\n                [11, 2041, 0, 2, 1, 2],\r\n                [12, 4084, 1, 0, 2, 2],\r\n                [12, 4085, 2, 2, 0, 1],\r\n                [12, 4086, 2, 1, 2, 0],\r\n                [12, 4087, 2, 2, 2, 0],\r\n                [12, 4088, 0, 2, 2, 2],\r\n                [12, 4089, 2, 2, 2, 1],\r\n                [12, 4090, 2, 1, 2, 1],\r\n                [12, 4091, 1, 2, 1, 2],\r\n                [12, 4092, 1, 2, 2, 2],\r\n                [13, 8186, 0, 2, 0, 2],\r\n                [13, 8187, 2, 0, 2, 0],\r\n                [13, 8188, 1, 2, 0, 2],\r\n                [14, 16378, 2, 0, 2, 1],\r\n                [14, 16379, 2, 1, 1, 2],\r\n                [14, 16380, 2, 1, 0, 2],\r\n                [15, 32762, 2, 2, 2, 2],\r\n                [15, 32763, 2, 2, 1, 2],\r\n                [15, 32764, 2, 1, 2, 2],\r\n                [15, 32765, 2, 0, 1, 2],\r\n                [15, 32766, 2, 0, 0, 2],\r\n                [16, 65534, 2, 2, 0, 2],\r\n                [16, 65535, 2, 0, 2, 2]\r\n            ];\r\n    \r\n            var HCB4 = [\r\n                [4, 0, 1, 1, 1, 1],\r\n                [4, 1, 0, 1, 1, 1],\r\n                [4, 2, 1, 1, 0, 1],\r\n                [4, 3, 1, 1, 1, 0],\r\n                [4, 4, 1, 0, 1, 1],\r\n                [4, 5, 1, 0, 0, 0],\r\n                [4, 6, 1, 1, 0, 0],\r\n                [4, 7, 0, 0, 0, 0],\r\n                [4, 8, 0, 0, 1, 1],\r\n                [4, 9, 1, 0, 1, 0],\r\n                [5, 20, 1, 0, 0, 1],\r\n                [5, 21, 0, 1, 1, 0],\r\n                [5, 22, 0, 0, 0, 1],\r\n                [5, 23, 0, 1, 0, 1],\r\n                [5, 24, 0, 0, 1, 0],\r\n                [5, 25, 0, 1, 0, 0],\r\n                [7, 104, 2, 1, 1, 1],\r\n                [7, 105, 1, 1, 2, 1],\r\n                [7, 106, 1, 2, 1, 1],\r\n                [7, 107, 1, 1, 1, 2],\r\n                [7, 108, 2, 1, 1, 0],\r\n                [7, 109, 2, 1, 0, 1],\r\n                [7, 110, 1, 2, 1, 0],\r\n                [7, 111, 2, 0, 1, 1],\r\n                [7, 112, 0, 1, 2, 1],\r\n                [8, 226, 0, 1, 1, 2],\r\n                [8, 227, 1, 1, 2, 0],\r\n                [8, 228, 0, 2, 1, 1],\r\n                [8, 229, 1, 0, 1, 2],\r\n                [8, 230, 1, 2, 0, 1],\r\n                [8, 231, 1, 1, 0, 2],\r\n                [8, 232, 1, 0, 2, 1],\r\n                [8, 233, 2, 1, 0, 0],\r\n                [8, 234, 2, 0, 1, 0],\r\n                [8, 235, 1, 2, 0, 0],\r\n                [8, 236, 2, 0, 0, 1],\r\n                [8, 237, 0, 1, 0, 2],\r\n                [8, 238, 0, 2, 1, 0],\r\n                [8, 239, 0, 0, 1, 2],\r\n                [8, 240, 0, 1, 2, 0],\r\n                [8, 241, 0, 2, 0, 1],\r\n                [8, 242, 1, 0, 0, 2],\r\n                [8, 243, 0, 0, 2, 1],\r\n                [8, 244, 1, 0, 2, 0],\r\n                [8, 245, 2, 0, 0, 0],\r\n                [8, 246, 0, 0, 0, 2],\r\n                [9, 494, 0, 2, 0, 0],\r\n                [9, 495, 0, 0, 2, 0],\r\n                [9, 496, 1, 2, 2, 1],\r\n                [9, 497, 2, 2, 1, 1],\r\n                [9, 498, 2, 1, 2, 1],\r\n                [9, 499, 1, 1, 2, 2],\r\n                [9, 500, 1, 2, 1, 2],\r\n                [9, 501, 2, 1, 1, 2],\r\n                [10, 1004, 1, 2, 2, 0],\r\n                [10, 1005, 2, 2, 1, 0],\r\n                [10, 1006, 2, 1, 2, 0],\r\n                [10, 1007, 0, 2, 2, 1],\r\n                [10, 1008, 0, 1, 2, 2],\r\n                [10, 1009, 2, 2, 0, 1],\r\n                [10, 1010, 0, 2, 1, 2],\r\n                [10, 1011, 2, 0, 2, 1],\r\n                [10, 1012, 1, 0, 2, 2],\r\n                [10, 1013, 2, 2, 2, 1],\r\n                [10, 1014, 1, 2, 0, 2],\r\n                [10, 1015, 2, 0, 1, 2],\r\n                [10, 1016, 2, 1, 0, 2],\r\n                [10, 1017, 1, 2, 2, 2],\r\n                [11, 2036, 2, 1, 2, 2],\r\n                [11, 2037, 2, 2, 1, 2],\r\n                [11, 2038, 0, 2, 2, 0],\r\n                [11, 2039, 2, 2, 0, 0],\r\n                [11, 2040, 0, 0, 2, 2],\r\n                [11, 2041, 2, 0, 2, 0],\r\n                [11, 2042, 0, 2, 0, 2],\r\n                [11, 2043, 2, 0, 0, 2],\r\n                [11, 2044, 2, 2, 2, 2],\r\n                [11, 2045, 0, 2, 2, 2],\r\n                [11, 2046, 2, 2, 2, 0],\r\n                [12, 4094, 2, 2, 0, 2],\r\n                [12, 4095, 2, 0, 2, 2]\r\n            ];\r\n    \r\n            var HCB5 = [\r\n                [1, 0, 0, 0],\r\n                [4, 8, -1, 0],\r\n                [4, 9, 1, 0],\r\n                [4, 10, 0, 1],\r\n                [4, 11, 0, -1],\r\n                [5, 24, 1, -1],\r\n                [5, 25, -1, 1],\r\n                [5, 26, -1, -1],\r\n                [5, 27, 1, 1],\r\n                [7, 112, -2, 0],\r\n                [7, 113, 0, 2],\r\n                [7, 114, 2, 0],\r\n                [7, 115, 0, -2],\r\n                [8, 232, -2, -1],\r\n                [8, 233, 2, 1],\r\n                [8, 234, -1, -2],\r\n                [8, 235, 1, 2],\r\n                [8, 236, -2, 1],\r\n                [8, 237, 2, -1],\r\n                [8, 238, -1, 2],\r\n                [8, 239, 1, -2],\r\n                [8, 240, -3, 0],\r\n                [8, 241, 3, 0],\r\n                [8, 242, 0, -3],\r\n                [8, 243, 0, 3],\r\n                [9, 488, -3, -1],\r\n                [9, 489, 1, 3],\r\n                [9, 490, 3, 1],\r\n                [9, 491, -1, -3],\r\n                [9, 492, -3, 1],\r\n                [9, 493, 3, -1],\r\n                [9, 494, 1, -3],\r\n                [9, 495, -1, 3],\r\n                [9, 496, -2, 2],\r\n                [9, 497, 2, 2],\r\n                [9, 498, -2, -2],\r\n                [9, 499, 2, -2],\r\n                [10, 1000, -3, -2],\r\n                [10, 1001, 3, -2],\r\n                [10, 1002, -2, 3],\r\n                [10, 1003, 2, -3],\r\n                [10, 1004, 3, 2],\r\n                [10, 1005, 2, 3],\r\n                [10, 1006, -3, 2],\r\n                [10, 1007, -2, -3],\r\n                [10, 1008, 0, -4],\r\n                [10, 1009, -4, 0],\r\n                [10, 1010, 4, 1],\r\n                [10, 1011, 4, 0],\r\n                [11, 2024, -4, -1],\r\n                [11, 2025, 0, 4],\r\n                [11, 2026, 4, -1],\r\n                [11, 2027, -1, -4],\r\n                [11, 2028, 1, 4],\r\n                [11, 2029, -1, 4],\r\n                [11, 2030, -4, 1],\r\n                [11, 2031, 1, -4],\r\n                [11, 2032, 3, -3],\r\n                [11, 2033, -3, -3],\r\n                [11, 2034, -3, 3],\r\n                [11, 2035, -2, 4],\r\n                [11, 2036, -4, -2],\r\n                [11, 2037, 4, 2],\r\n                [11, 2038, 2, -4],\r\n                [11, 2039, 2, 4],\r\n                [11, 2040, 3, 3],\r\n                [11, 2041, -4, 2],\r\n                [12, 4084, -2, -4],\r\n                [12, 4085, 4, -2],\r\n                [12, 4086, 3, -4],\r\n                [12, 4087, -4, -3],\r\n                [12, 4088, -4, 3],\r\n                [12, 4089, 3, 4],\r\n                [12, 4090, -3, 4],\r\n                [12, 4091, 4, 3],\r\n                [12, 4092, 4, -3],\r\n                [12, 4093, -3, -4],\r\n                [13, 8188, 4, -4],\r\n                [13, 8189, -4, 4],\r\n                [13, 8190, 4, 4],\r\n                [13, 8191, -4, -4]\r\n            ];\r\n    \r\n            var HCB6 = [\r\n                [4, 0, 0, 0],\r\n                [4, 1, 1, 0],\r\n                [4, 2, 0, -1],\r\n                [4, 3, 0, 1],\r\n                [4, 4, -1, 0],\r\n                [4, 5, 1, 1],\r\n                [4, 6, -1, 1],\r\n                [4, 7, 1, -1],\r\n                [4, 8, -1, -1],\r\n                [6, 36, 2, -1],\r\n                [6, 37, 2, 1],\r\n                [6, 38, -2, 1],\r\n                [6, 39, -2, -1],\r\n                [6, 40, -2, 0],\r\n                [6, 41, -1, 2],\r\n                [6, 42, 2, 0],\r\n                [6, 43, 1, -2],\r\n                [6, 44, 1, 2],\r\n                [6, 45, 0, -2],\r\n                [6, 46, -1, -2],\r\n                [6, 47, 0, 2],\r\n                [6, 48, 2, -2],\r\n                [6, 49, -2, 2],\r\n                [6, 50, -2, -2],\r\n                [6, 51, 2, 2],\r\n                [7, 104, -3, 1],\r\n                [7, 105, 3, 1],\r\n                [7, 106, 3, -1],\r\n                [7, 107, -1, 3],\r\n                [7, 108, -3, -1],\r\n                [7, 109, 1, 3],\r\n                [7, 110, 1, -3],\r\n                [7, 111, -1, -3],\r\n                [7, 112, 3, 0],\r\n                [7, 113, -3, 0],\r\n                [7, 114, 0, -3],\r\n                [7, 115, 0, 3],\r\n                [7, 116, 3, 2],\r\n                [8, 234, -3, -2],\r\n                [8, 235, -2, 3],\r\n                [8, 236, 2, 3],\r\n                [8, 237, 3, -2],\r\n                [8, 238, 2, -3],\r\n                [8, 239, -2, -3],\r\n                [8, 240, -3, 2],\r\n                [8, 241, 3, 3],\r\n                [9, 484, 3, -3],\r\n                [9, 485, -3, -3],\r\n                [9, 486, -3, 3],\r\n                [9, 487, 1, -4],\r\n                [9, 488, -1, -4],\r\n                [9, 489, 4, 1],\r\n                [9, 490, -4, 1],\r\n                [9, 491, -4, -1],\r\n                [9, 492, 1, 4],\r\n                [9, 493, 4, -1],\r\n                [9, 494, -1, 4],\r\n                [9, 495, 0, -4],\r\n                [9, 496, -4, 2],\r\n                [9, 497, -4, -2],\r\n                [9, 498, 2, 4],\r\n                [9, 499, -2, -4],\r\n                [9, 500, -4, 0],\r\n                [9, 501, 4, 2],\r\n                [9, 502, 4, -2],\r\n                [9, 503, -2, 4],\r\n                [9, 504, 4, 0],\r\n                [9, 505, 2, -4],\r\n                [9, 506, 0, 4],\r\n                [10, 1014, -3, -4],\r\n                [10, 1015, -3, 4],\r\n                [10, 1016, 3, -4],\r\n                [10, 1017, 4, -3],\r\n                [10, 1018, 3, 4],\r\n                [10, 1019, 4, 3],\r\n                [10, 1020, -4, 3],\r\n                [10, 1021, -4, -3],\r\n                [11, 2044, 4, 4],\r\n                [11, 2045, -4, 4],\r\n                [11, 2046, -4, -4],\r\n                [11, 2047, 4, -4]\r\n            ];\r\n    \r\n            var HCB7 = [\r\n                [1, 0, 0, 0],\r\n                [3, 4, 1, 0],\r\n                [3, 5, 0, 1],\r\n                [4, 12, 1, 1],\r\n                [6, 52, 2, 1],\r\n                [6, 53, 1, 2],\r\n                [6, 54, 2, 0],\r\n                [6, 55, 0, 2],\r\n                [7, 112, 3, 1],\r\n                [7, 113, 1, 3],\r\n                [7, 114, 2, 2],\r\n                [7, 115, 3, 0],\r\n                [7, 116, 0, 3],\r\n                [8, 234, 2, 3],\r\n                [8, 235, 3, 2],\r\n                [8, 236, 1, 4],\r\n                [8, 237, 4, 1],\r\n                [8, 238, 1, 5],\r\n                [8, 239, 5, 1],\r\n                [8, 240, 3, 3],\r\n                [8, 241, 2, 4],\r\n                [8, 242, 0, 4],\r\n                [8, 243, 4, 0],\r\n                [9, 488, 4, 2],\r\n                [9, 489, 2, 5],\r\n                [9, 490, 5, 2],\r\n                [9, 491, 0, 5],\r\n                [9, 492, 6, 1],\r\n                [9, 493, 5, 0],\r\n                [9, 494, 1, 6],\r\n                [9, 495, 4, 3],\r\n                [9, 496, 3, 5],\r\n                [9, 497, 3, 4],\r\n                [9, 498, 5, 3],\r\n                [9, 499, 2, 6],\r\n                [9, 500, 6, 2],\r\n                [9, 501, 1, 7],\r\n                [10, 1004, 3, 6],\r\n                [10, 1005, 0, 6],\r\n                [10, 1006, 6, 0],\r\n                [10, 1007, 4, 4],\r\n                [10, 1008, 7, 1],\r\n                [10, 1009, 4, 5],\r\n                [10, 1010, 7, 2],\r\n                [10, 1011, 5, 4],\r\n                [10, 1012, 6, 3],\r\n                [10, 1013, 2, 7],\r\n                [10, 1014, 7, 3],\r\n                [10, 1015, 6, 4],\r\n                [10, 1016, 5, 5],\r\n                [10, 1017, 4, 6],\r\n                [10, 1018, 3, 7],\r\n                [11, 2038, 7, 0],\r\n                [11, 2039, 0, 7],\r\n                [11, 2040, 6, 5],\r\n                [11, 2041, 5, 6],\r\n                [11, 2042, 7, 4],\r\n                [11, 2043, 4, 7],\r\n                [11, 2044, 5, 7],\r\n                [11, 2045, 7, 5],\r\n                [12, 4092, 7, 6],\r\n                [12, 4093, 6, 6],\r\n                [12, 4094, 6, 7],\r\n                [12, 4095, 7, 7]\r\n            ];\r\n    \r\n            var HCB8 = [\r\n                [3, 0, 1, 1],\r\n                [4, 2, 2, 1],\r\n                [4, 3, 1, 0],\r\n                [4, 4, 1, 2],\r\n                [4, 5, 0, 1],\r\n                [4, 6, 2, 2],\r\n                [5, 14, 0, 0],\r\n                [5, 15, 2, 0],\r\n                [5, 16, 0, 2],\r\n                [5, 17, 3, 1],\r\n                [5, 18, 1, 3],\r\n                [5, 19, 3, 2],\r\n                [5, 20, 2, 3],\r\n                [6, 42, 3, 3],\r\n                [6, 43, 4, 1],\r\n                [6, 44, 1, 4],\r\n                [6, 45, 4, 2],\r\n                [6, 46, 2, 4],\r\n                [6, 47, 3, 0],\r\n                [6, 48, 0, 3],\r\n                [6, 49, 4, 3],\r\n                [6, 50, 3, 4],\r\n                [6, 51, 5, 2],\r\n                [7, 104, 5, 1],\r\n                [7, 105, 2, 5],\r\n                [7, 106, 1, 5],\r\n                [7, 107, 5, 3],\r\n                [7, 108, 3, 5],\r\n                [7, 109, 4, 4],\r\n                [7, 110, 5, 4],\r\n                [7, 111, 0, 4],\r\n                [7, 112, 4, 5],\r\n                [7, 113, 4, 0],\r\n                [7, 114, 2, 6],\r\n                [7, 115, 6, 2],\r\n                [7, 116, 6, 1],\r\n                [7, 117, 1, 6],\r\n                [8, 236, 3, 6],\r\n                [8, 237, 6, 3],\r\n                [8, 238, 5, 5],\r\n                [8, 239, 5, 0],\r\n                [8, 240, 6, 4],\r\n                [8, 241, 0, 5],\r\n                [8, 242, 4, 6],\r\n                [8, 243, 7, 1],\r\n                [8, 244, 7, 2],\r\n                [8, 245, 2, 7],\r\n                [8, 246, 6, 5],\r\n                [8, 247, 7, 3],\r\n                [8, 248, 1, 7],\r\n                [8, 249, 5, 6],\r\n                [8, 250, 3, 7],\r\n                [9, 502, 6, 6],\r\n                [9, 503, 7, 4],\r\n                [9, 504, 6, 0],\r\n                [9, 505, 4, 7],\r\n                [9, 506, 0, 6],\r\n                [9, 507, 7, 5],\r\n                [9, 508, 7, 6],\r\n                [9, 509, 6, 7],\r\n                [10, 1020, 5, 7],\r\n                [10, 1021, 7, 0],\r\n                [10, 1022, 0, 7],\r\n                [10, 1023, 7, 7]\r\n            ];\r\n    \r\n            var HCB9 = [\r\n                [1, 0, 0, 0],\r\n                [3, 4, 1, 0],\r\n                [3, 5, 0, 1],\r\n                [4, 12, 1, 1],\r\n                [6, 52, 2, 1],\r\n                [6, 53, 1, 2],\r\n                [6, 54, 2, 0],\r\n                [6, 55, 0, 2],\r\n                [7, 112, 3, 1],\r\n                [7, 113, 2, 2],\r\n                [7, 114, 1, 3],\r\n                [8, 230, 3, 0],\r\n                [8, 231, 0, 3],\r\n                [8, 232, 2, 3],\r\n                [8, 233, 3, 2],\r\n                [8, 234, 1, 4],\r\n                [8, 235, 4, 1],\r\n                [8, 236, 2, 4],\r\n                [8, 237, 1, 5],\r\n                [9, 476, 4, 2],\r\n                [9, 477, 3, 3],\r\n                [9, 478, 0, 4],\r\n                [9, 479, 4, 0],\r\n                [9, 480, 5, 1],\r\n                [9, 481, 2, 5],\r\n                [9, 482, 1, 6],\r\n                [9, 483, 3, 4],\r\n                [9, 484, 5, 2],\r\n                [9, 485, 6, 1],\r\n                [9, 486, 4, 3],\r\n                [10, 974, 0, 5],\r\n                [10, 975, 2, 6],\r\n                [10, 976, 5, 0],\r\n                [10, 977, 1, 7],\r\n                [10, 978, 3, 5],\r\n                [10, 979, 1, 8],\r\n                [10, 980, 8, 1],\r\n                [10, 981, 4, 4],\r\n                [10, 982, 5, 3],\r\n                [10, 983, 6, 2],\r\n                [10, 984, 7, 1],\r\n                [10, 985, 0, 6],\r\n                [10, 986, 8, 2],\r\n                [10, 987, 2, 8],\r\n                [10, 988, 3, 6],\r\n                [10, 989, 2, 7],\r\n                [10, 990, 4, 5],\r\n                [10, 991, 9, 1],\r\n                [10, 992, 1, 9],\r\n                [10, 993, 7, 2],\r\n                [11, 1988, 6, 0],\r\n                [11, 1989, 5, 4],\r\n                [11, 1990, 6, 3],\r\n                [11, 1991, 8, 3],\r\n                [11, 1992, 0, 7],\r\n                [11, 1993, 9, 2],\r\n                [11, 1994, 3, 8],\r\n                [11, 1995, 4, 6],\r\n                [11, 1996, 3, 7],\r\n                [11, 1997, 0, 8],\r\n                [11, 1998, 10, 1],\r\n                [11, 1999, 6, 4],\r\n                [11, 2000, 2, 9],\r\n                [11, 2001, 5, 5],\r\n                [11, 2002, 8, 0],\r\n                [11, 2003, 7, 0],\r\n                [11, 2004, 7, 3],\r\n                [11, 2005, 10, 2],\r\n                [11, 2006, 9, 3],\r\n                [11, 2007, 8, 4],\r\n                [11, 2008, 1, 10],\r\n                [11, 2009, 7, 4],\r\n                [11, 2010, 6, 5],\r\n                [11, 2011, 5, 6],\r\n                [11, 2012, 4, 8],\r\n                [11, 2013, 4, 7],\r\n                [11, 2014, 3, 9],\r\n                [11, 2015, 11, 1],\r\n                [11, 2016, 5, 8],\r\n                [11, 2017, 9, 0],\r\n                [11, 2018, 8, 5],\r\n                [12, 4038, 10, 3],\r\n                [12, 4039, 2, 10],\r\n                [12, 4040, 0, 9],\r\n                [12, 4041, 11, 2],\r\n                [12, 4042, 9, 4],\r\n                [12, 4043, 6, 6],\r\n                [12, 4044, 12, 1],\r\n                [12, 4045, 4, 9],\r\n                [12, 4046, 8, 6],\r\n                [12, 4047, 1, 11],\r\n                [12, 4048, 9, 5],\r\n                [12, 4049, 10, 4],\r\n                [12, 4050, 5, 7],\r\n                [12, 4051, 7, 5],\r\n                [12, 4052, 2, 11],\r\n                [12, 4053, 1, 12],\r\n                [12, 4054, 12, 2],\r\n                [12, 4055, 11, 3],\r\n                [12, 4056, 3, 10],\r\n                [12, 4057, 5, 9],\r\n                [12, 4058, 6, 7],\r\n                [12, 4059, 8, 7],\r\n                [12, 4060, 11, 4],\r\n                [12, 4061, 0, 10],\r\n                [12, 4062, 7, 6],\r\n                [12, 4063, 12, 3],\r\n                [12, 4064, 10, 0],\r\n                [12, 4065, 10, 5],\r\n                [12, 4066, 4, 10],\r\n                [12, 4067, 6, 8],\r\n                [12, 4068, 2, 12],\r\n                [12, 4069, 9, 6],\r\n                [12, 4070, 9, 7],\r\n                [12, 4071, 4, 11],\r\n                [12, 4072, 11, 0],\r\n                [12, 4073, 6, 9],\r\n                [12, 4074, 3, 11],\r\n                [12, 4075, 5, 10],\r\n                [13, 8152, 8, 8],\r\n                [13, 8153, 7, 8],\r\n                [13, 8154, 12, 5],\r\n                [13, 8155, 3, 12],\r\n                [13, 8156, 11, 5],\r\n                [13, 8157, 7, 7],\r\n                [13, 8158, 12, 4],\r\n                [13, 8159, 11, 6],\r\n                [13, 8160, 10, 6],\r\n                [13, 8161, 4, 12],\r\n                [13, 8162, 7, 9],\r\n                [13, 8163, 5, 11],\r\n                [13, 8164, 0, 11],\r\n                [13, 8165, 12, 6],\r\n                [13, 8166, 6, 10],\r\n                [13, 8167, 12, 0],\r\n                [13, 8168, 10, 7],\r\n                [13, 8169, 5, 12],\r\n                [13, 8170, 7, 10],\r\n                [13, 8171, 9, 8],\r\n                [13, 8172, 0, 12],\r\n                [13, 8173, 11, 7],\r\n                [13, 8174, 8, 9],\r\n                [13, 8175, 9, 9],\r\n                [13, 8176, 10, 8],\r\n                [13, 8177, 7, 11],\r\n                [13, 8178, 12, 7],\r\n                [13, 8179, 6, 11],\r\n                [13, 8180, 8, 11],\r\n                [13, 8181, 11, 8],\r\n                [13, 8182, 7, 12],\r\n                [13, 8183, 6, 12],\r\n                [14, 16368, 8, 10],\r\n                [14, 16369, 10, 9],\r\n                [14, 16370, 8, 12],\r\n                [14, 16371, 9, 10],\r\n                [14, 16372, 9, 11],\r\n                [14, 16373, 9, 12],\r\n                [14, 16374, 10, 11],\r\n                [14, 16375, 12, 9],\r\n                [14, 16376, 10, 10],\r\n                [14, 16377, 11, 9],\r\n                [14, 16378, 12, 8],\r\n                [14, 16379, 11, 10],\r\n                [14, 16380, 12, 10],\r\n                [14, 16381, 12, 11],\r\n                [15, 32764, 10, 12],\r\n                [15, 32765, 11, 11],\r\n                [15, 32766, 11, 12],\r\n                [15, 32767, 12, 12]\r\n            ];\r\n    \r\n            var HCB10 = [\r\n                [4, 0, 1, 1],\r\n                [4, 1, 1, 2],\r\n                [4, 2, 2, 1],\r\n                [5, 6, 2, 2],\r\n                [5, 7, 1, 0],\r\n                [5, 8, 0, 1],\r\n                [5, 9, 1, 3],\r\n                [5, 10, 3, 2],\r\n                [5, 11, 3, 1],\r\n                [5, 12, 2, 3],\r\n                [5, 13, 3, 3],\r\n                [6, 28, 2, 0],\r\n                [6, 29, 0, 2],\r\n                [6, 30, 2, 4],\r\n                [6, 31, 4, 2],\r\n                [6, 32, 1, 4],\r\n                [6, 33, 4, 1],\r\n                [6, 34, 0, 0],\r\n                [6, 35, 4, 3],\r\n                [6, 36, 3, 4],\r\n                [6, 37, 3, 0],\r\n                [6, 38, 0, 3],\r\n                [6, 39, 4, 4],\r\n                [6, 40, 2, 5],\r\n                [6, 41, 5, 2],\r\n                [7, 84, 1, 5],\r\n                [7, 85, 5, 1],\r\n                [7, 86, 5, 3],\r\n                [7, 87, 3, 5],\r\n                [7, 88, 5, 4],\r\n                [7, 89, 4, 5],\r\n                [7, 90, 6, 2],\r\n                [7, 91, 2, 6],\r\n                [7, 92, 6, 3],\r\n                [7, 93, 4, 0],\r\n                [7, 94, 6, 1],\r\n                [7, 95, 0, 4],\r\n                [7, 96, 1, 6],\r\n                [7, 97, 3, 6],\r\n                [7, 98, 5, 5],\r\n                [7, 99, 6, 4],\r\n                [7, 100, 4, 6],\r\n                [8, 202, 6, 5],\r\n                [8, 203, 7, 2],\r\n                [8, 204, 3, 7],\r\n                [8, 205, 2, 7],\r\n                [8, 206, 5, 6],\r\n                [8, 207, 8, 2],\r\n                [8, 208, 7, 3],\r\n                [8, 209, 5, 0],\r\n                [8, 210, 7, 1],\r\n                [8, 211, 0, 5],\r\n                [8, 212, 8, 1],\r\n                [8, 213, 1, 7],\r\n                [8, 214, 8, 3],\r\n                [8, 215, 7, 4],\r\n                [8, 216, 4, 7],\r\n                [8, 217, 2, 8],\r\n                [8, 218, 6, 6],\r\n                [8, 219, 7, 5],\r\n                [8, 220, 1, 8],\r\n                [8, 221, 3, 8],\r\n                [8, 222, 8, 4],\r\n                [8, 223, 4, 8],\r\n                [8, 224, 5, 7],\r\n                [8, 225, 8, 5],\r\n                [8, 226, 5, 8],\r\n                [9, 454, 7, 6],\r\n                [9, 455, 6, 7],\r\n                [9, 456, 9, 2],\r\n                [9, 457, 6, 0],\r\n                [9, 458, 6, 8],\r\n                [9, 459, 9, 3],\r\n                [9, 460, 3, 9],\r\n                [9, 461, 9, 1],\r\n                [9, 462, 2, 9],\r\n                [9, 463, 0, 6],\r\n                [9, 464, 8, 6],\r\n                [9, 465, 9, 4],\r\n                [9, 466, 4, 9],\r\n                [9, 467, 10, 2],\r\n                [9, 468, 1, 9],\r\n                [9, 469, 7, 7],\r\n                [9, 470, 8, 7],\r\n                [9, 471, 9, 5],\r\n                [9, 472, 7, 8],\r\n                [9, 473, 10, 3],\r\n                [9, 474, 5, 9],\r\n                [9, 475, 10, 4],\r\n                [9, 476, 2, 10],\r\n                [9, 477, 10, 1],\r\n                [9, 478, 3, 10],\r\n                [9, 479, 9, 6],\r\n                [9, 480, 6, 9],\r\n                [9, 481, 8, 0],\r\n                [9, 482, 4, 10],\r\n                [9, 483, 7, 0],\r\n                [9, 484, 11, 2],\r\n                [10, 970, 7, 9],\r\n                [10, 971, 11, 3],\r\n                [10, 972, 10, 6],\r\n                [10, 973, 1, 10],\r\n                [10, 974, 11, 1],\r\n                [10, 975, 9, 7],\r\n                [10, 976, 0, 7],\r\n                [10, 977, 8, 8],\r\n                [10, 978, 10, 5],\r\n                [10, 979, 3, 11],\r\n                [10, 980, 5, 10],\r\n                [10, 981, 8, 9],\r\n                [10, 982, 11, 5],\r\n                [10, 983, 0, 8],\r\n                [10, 984, 11, 4],\r\n                [10, 985, 2, 11],\r\n                [10, 986, 7, 10],\r\n                [10, 987, 6, 10],\r\n                [10, 988, 10, 7],\r\n                [10, 989, 4, 11],\r\n                [10, 990, 1, 11],\r\n                [10, 991, 12, 2],\r\n                [10, 992, 9, 8],\r\n                [10, 993, 12, 3],\r\n                [10, 994, 11, 6],\r\n                [10, 995, 5, 11],\r\n                [10, 996, 12, 4],\r\n                [10, 997, 11, 7],\r\n                [10, 998, 12, 5],\r\n                [10, 999, 3, 12],\r\n                [10, 1000, 6, 11],\r\n                [10, 1001, 9, 0],\r\n                [10, 1002, 10, 8],\r\n                [10, 1003, 10, 0],\r\n                [10, 1004, 12, 1],\r\n                [10, 1005, 0, 9],\r\n                [10, 1006, 4, 12],\r\n                [10, 1007, 9, 9],\r\n                [10, 1008, 12, 6],\r\n                [10, 1009, 2, 12],\r\n                [10, 1010, 8, 10],\r\n                [11, 2022, 9, 10],\r\n                [11, 2023, 1, 12],\r\n                [11, 2024, 11, 8],\r\n                [11, 2025, 12, 7],\r\n                [11, 2026, 7, 11],\r\n                [11, 2027, 5, 12],\r\n                [11, 2028, 6, 12],\r\n                [11, 2029, 10, 9],\r\n                [11, 2030, 8, 11],\r\n                [11, 2031, 12, 8],\r\n                [11, 2032, 0, 10],\r\n                [11, 2033, 7, 12],\r\n                [11, 2034, 11, 0],\r\n                [11, 2035, 10, 10],\r\n                [11, 2036, 11, 9],\r\n                [11, 2037, 11, 10],\r\n                [11, 2038, 0, 11],\r\n                [11, 2039, 11, 11],\r\n                [11, 2040, 9, 11],\r\n                [11, 2041, 10, 11],\r\n                [11, 2042, 12, 0],\r\n                [11, 2043, 8, 12],\r\n                [12, 4088, 12, 9],\r\n                [12, 4089, 10, 12],\r\n                [12, 4090, 9, 12],\r\n                [12, 4091, 11, 12],\r\n                [12, 4092, 12, 11],\r\n                [12, 4093, 0, 12],\r\n                [12, 4094, 12, 10],\r\n                [12, 4095, 12, 12]\r\n            ];\r\n    \r\n            var HCB11 = [\r\n                [4, 0, 0, 0],\r\n                [4, 1, 1, 1],\r\n                [5, 4, 16, 16],\r\n                [5, 5, 1, 0],\r\n                [5, 6, 0, 1],\r\n                [5, 7, 2, 1],\r\n                [5, 8, 1, 2],\r\n                [5, 9, 2, 2],\r\n                [6, 20, 1, 3],\r\n                [6, 21, 3, 1],\r\n                [6, 22, 3, 2],\r\n                [6, 23, 2, 0],\r\n                [6, 24, 2, 3],\r\n                [6, 25, 0, 2],\r\n                [6, 26, 3, 3],\r\n                [7, 54, 4, 1],\r\n                [7, 55, 1, 4],\r\n                [7, 56, 4, 2],\r\n                [7, 57, 2, 4],\r\n                [7, 58, 4, 3],\r\n                [7, 59, 3, 4],\r\n                [7, 60, 3, 0],\r\n                [7, 61, 0, 3],\r\n                [7, 62, 5, 1],\r\n                [7, 63, 5, 2],\r\n                [7, 64, 2, 5],\r\n                [7, 65, 4, 4],\r\n                [7, 66, 1, 5],\r\n                [7, 67, 5, 3],\r\n                [7, 68, 3, 5],\r\n                [7, 69, 5, 4],\r\n                [8, 140, 4, 5],\r\n                [8, 141, 6, 2],\r\n                [8, 142, 2, 6],\r\n                [8, 143, 6, 1],\r\n                [8, 144, 6, 3],\r\n                [8, 145, 3, 6],\r\n                [8, 146, 1, 6],\r\n                [8, 147, 4, 16],\r\n                [8, 148, 3, 16],\r\n                [8, 149, 16, 5],\r\n                [8, 150, 16, 3],\r\n                [8, 151, 16, 4],\r\n                [8, 152, 6, 4],\r\n                [8, 153, 16, 6],\r\n                [8, 154, 4, 0],\r\n                [8, 155, 4, 6],\r\n                [8, 156, 0, 4],\r\n                [8, 157, 2, 16],\r\n                [8, 158, 5, 5],\r\n                [8, 159, 5, 16],\r\n                [8, 160, 16, 7],\r\n                [8, 161, 16, 2],\r\n                [8, 162, 16, 8],\r\n                [8, 163, 2, 7],\r\n                [8, 164, 7, 2],\r\n                [8, 165, 3, 7],\r\n                [8, 166, 6, 5],\r\n                [8, 167, 5, 6],\r\n                [8, 168, 6, 16],\r\n                [8, 169, 16, 10],\r\n                [8, 170, 7, 3],\r\n                [8, 171, 7, 1],\r\n                [8, 172, 16, 9],\r\n                [8, 173, 7, 16],\r\n                [8, 174, 1, 16],\r\n                [8, 175, 1, 7],\r\n                [8, 176, 4, 7],\r\n                [8, 177, 16, 11],\r\n                [8, 178, 7, 4],\r\n                [8, 179, 16, 12],\r\n                [8, 180, 8, 16],\r\n                [8, 181, 16, 1],\r\n                [8, 182, 6, 6],\r\n                [8, 183, 9, 16],\r\n                [8, 184, 2, 8],\r\n                [8, 185, 5, 7],\r\n                [8, 186, 10, 16],\r\n                [8, 187, 16, 13],\r\n                [8, 188, 8, 3],\r\n                [8, 189, 8, 2],\r\n                [8, 190, 3, 8],\r\n                [8, 191, 5, 0],\r\n                [8, 192, 16, 14],\r\n                [8, 193, 11, 16],\r\n                [8, 194, 7, 5],\r\n                [8, 195, 4, 8],\r\n                [8, 196, 6, 7],\r\n                [8, 197, 7, 6],\r\n                [8, 198, 0, 5],\r\n                [9, 398, 8, 4],\r\n                [9, 399, 16, 15],\r\n                [9, 400, 12, 16],\r\n                [9, 401, 1, 8],\r\n                [9, 402, 8, 1],\r\n                [9, 403, 14, 16],\r\n                [9, 404, 5, 8],\r\n                [9, 405, 13, 16],\r\n                [9, 406, 3, 9],\r\n                [9, 407, 8, 5],\r\n                [9, 408, 7, 7],\r\n                [9, 409, 2, 9],\r\n                [9, 410, 8, 6],\r\n                [9, 411, 9, 2],\r\n                [9, 412, 9, 3],\r\n                [9, 413, 15, 16],\r\n                [9, 414, 4, 9],\r\n                [9, 415, 6, 8],\r\n                [9, 416, 6, 0],\r\n                [9, 417, 9, 4],\r\n                [9, 418, 5, 9],\r\n                [9, 419, 8, 7],\r\n                [9, 420, 7, 8],\r\n                [9, 421, 1, 9],\r\n                [9, 422, 10, 3],\r\n                [9, 423, 0, 6],\r\n                [9, 424, 10, 2],\r\n                [9, 425, 9, 1],\r\n                [9, 426, 9, 5],\r\n                [9, 427, 4, 10],\r\n                [9, 428, 2, 10],\r\n                [9, 429, 9, 6],\r\n                [9, 430, 3, 10],\r\n                [9, 431, 6, 9],\r\n                [9, 432, 10, 4],\r\n                [9, 433, 8, 8],\r\n                [9, 434, 10, 5],\r\n                [9, 435, 9, 7],\r\n                [9, 436, 11, 3],\r\n                [9, 437, 1, 10],\r\n                [9, 438, 7, 0],\r\n                [9, 439, 10, 6],\r\n                [9, 440, 7, 9],\r\n                [9, 441, 3, 11],\r\n                [9, 442, 5, 10],\r\n                [9, 443, 10, 1],\r\n                [9, 444, 4, 11],\r\n                [9, 445, 11, 2],\r\n                [9, 446, 13, 2],\r\n                [9, 447, 6, 10],\r\n                [9, 448, 13, 3],\r\n                [9, 449, 2, 11],\r\n                [9, 450, 16, 0],\r\n                [9, 451, 5, 11],\r\n                [9, 452, 11, 5],\r\n                [10, 906, 11, 4],\r\n                [10, 907, 9, 8],\r\n                [10, 908, 7, 10],\r\n                [10, 909, 8, 9],\r\n                [10, 910, 0, 16],\r\n                [10, 911, 4, 13],\r\n                [10, 912, 0, 7],\r\n                [10, 913, 3, 13],\r\n                [10, 914, 11, 6],\r\n                [10, 915, 13, 1],\r\n                [10, 916, 13, 4],\r\n                [10, 917, 12, 3],\r\n                [10, 918, 2, 13],\r\n                [10, 919, 13, 5],\r\n                [10, 920, 8, 10],\r\n                [10, 921, 6, 11],\r\n                [10, 922, 10, 8],\r\n                [10, 923, 10, 7],\r\n                [10, 924, 14, 2],\r\n                [10, 925, 12, 4],\r\n                [10, 926, 1, 11],\r\n                [10, 927, 4, 12],\r\n                [10, 928, 11, 1],\r\n                [10, 929, 3, 12],\r\n                [10, 930, 1, 13],\r\n                [10, 931, 12, 2],\r\n                [10, 932, 7, 11],\r\n                [10, 933, 3, 14],\r\n                [10, 934, 5, 12],\r\n                [10, 935, 5, 13],\r\n                [10, 936, 14, 4],\r\n                [10, 937, 4, 14],\r\n                [10, 938, 11, 7],\r\n                [10, 939, 14, 3],\r\n                [10, 940, 12, 5],\r\n                [10, 941, 13, 6],\r\n                [10, 942, 12, 6],\r\n                [10, 943, 8, 0],\r\n                [10, 944, 11, 8],\r\n                [10, 945, 2, 12],\r\n                [10, 946, 9, 9],\r\n                [10, 947, 14, 5],\r\n                [10, 948, 6, 13],\r\n                [10, 949, 10, 10],\r\n                [10, 950, 15, 2],\r\n                [10, 951, 8, 11],\r\n                [10, 952, 9, 10],\r\n                [10, 953, 14, 6],\r\n                [10, 954, 10, 9],\r\n                [10, 955, 5, 14],\r\n                [10, 956, 11, 9],\r\n                [10, 957, 14, 1],\r\n                [10, 958, 2, 14],\r\n                [10, 959, 6, 12],\r\n                [10, 960, 1, 12],\r\n                [10, 961, 13, 8],\r\n                [10, 962, 0, 8],\r\n                [10, 963, 13, 7],\r\n                [10, 964, 7, 12],\r\n                [10, 965, 12, 7],\r\n                [10, 966, 7, 13],\r\n                [10, 967, 15, 3],\r\n                [10, 968, 12, 1],\r\n                [10, 969, 6, 14],\r\n                [10, 970, 2, 15],\r\n                [10, 971, 15, 5],\r\n                [10, 972, 15, 4],\r\n                [10, 973, 1, 14],\r\n                [10, 974, 9, 11],\r\n                [10, 975, 4, 15],\r\n                [10, 976, 14, 7],\r\n                [10, 977, 8, 13],\r\n                [10, 978, 13, 9],\r\n                [10, 979, 8, 12],\r\n                [10, 980, 5, 15],\r\n                [10, 981, 3, 15],\r\n                [10, 982, 10, 11],\r\n                [10, 983, 11, 10],\r\n                [10, 984, 12, 8],\r\n                [10, 985, 15, 6],\r\n                [10, 986, 15, 7],\r\n                [10, 987, 8, 14],\r\n                [10, 988, 15, 1],\r\n                [10, 989, 7, 14],\r\n                [10, 990, 9, 0],\r\n                [10, 991, 0, 9],\r\n                [10, 992, 9, 13],\r\n                [10, 993, 9, 12],\r\n                [10, 994, 12, 9],\r\n                [10, 995, 14, 8],\r\n                [10, 996, 10, 13],\r\n                [10, 997, 14, 9],\r\n                [10, 998, 12, 10],\r\n                [10, 999, 6, 15],\r\n                [10, 1000, 7, 15],\r\n                [11, 2002, 9, 14],\r\n                [11, 2003, 15, 8],\r\n                [11, 2004, 11, 11],\r\n                [11, 2005, 11, 14],\r\n                [11, 2006, 1, 15],\r\n                [11, 2007, 10, 12],\r\n                [11, 2008, 10, 14],\r\n                [11, 2009, 13, 11],\r\n                [11, 2010, 13, 10],\r\n                [11, 2011, 11, 13],\r\n                [11, 2012, 11, 12],\r\n                [11, 2013, 8, 15],\r\n                [11, 2014, 14, 11],\r\n                [11, 2015, 13, 12],\r\n                [11, 2016, 12, 13],\r\n                [11, 2017, 15, 9],\r\n                [11, 2018, 14, 10],\r\n                [11, 2019, 10, 0],\r\n                [11, 2020, 12, 11],\r\n                [11, 2021, 9, 15],\r\n                [11, 2022, 0, 10],\r\n                [11, 2023, 12, 12],\r\n                [11, 2024, 11, 0],\r\n                [11, 2025, 12, 14],\r\n                [11, 2026, 10, 15],\r\n                [11, 2027, 13, 13],\r\n                [11, 2028, 0, 13],\r\n                [11, 2029, 14, 12],\r\n                [11, 2030, 15, 10],\r\n                [11, 2031, 15, 11],\r\n                [11, 2032, 11, 15],\r\n                [11, 2033, 14, 13],\r\n                [11, 2034, 13, 0],\r\n                [11, 2035, 0, 11],\r\n                [11, 2036, 13, 14],\r\n                [11, 2037, 15, 12],\r\n                [11, 2038, 15, 13],\r\n                [11, 2039, 12, 15],\r\n                [11, 2040, 14, 0],\r\n                [11, 2041, 14, 14],\r\n                [11, 2042, 13, 15],\r\n                [11, 2043, 12, 0],\r\n                [11, 2044, 14, 15],\r\n                [12, 4090, 0, 14],\r\n                [12, 4091, 0, 12],\r\n                [12, 4092, 15, 14],\r\n                [12, 4093, 15, 0],\r\n                [12, 4094, 0, 15],\r\n                [12, 4095, 15, 15]\r\n            ];\r\n    \r\n            var HCB_SF = [\r\n                [1, 0, 60],\r\n                [3, 4, 59],\r\n                [4, 10, 61],\r\n                [4, 11, 58],\r\n                [4, 12, 62],\r\n                [5, 26, 57],\r\n                [5, 27, 63],\r\n                [6, 56, 56],\r\n                [6, 57, 64],\r\n                [6, 58, 55],\r\n                [6, 59, 65],\r\n                [7, 120, 66],\r\n                [7, 121, 54],\r\n                [7, 122, 67],\r\n                [8, 246, 53],\r\n                [8, 247, 68],\r\n                [8, 248, 52],\r\n                [8, 249, 69],\r\n                [8, 250, 51],\r\n                [9, 502, 70],\r\n                [9, 503, 50],\r\n                [9, 504, 49],\r\n                [9, 505, 71],\r\n                [10, 1012, 72],\r\n                [10, 1013, 48],\r\n                [10, 1014, 73],\r\n                [10, 1015, 47],\r\n                [10, 1016, 74],\r\n                [10, 1017, 46],\r\n                [11, 2036, 76],\r\n                [11, 2037, 75],\r\n                [11, 2038, 77],\r\n                [11, 2039, 78],\r\n                [11, 2040, 45],\r\n                [11, 2041, 43],\r\n                [12, 4084, 44],\r\n                [12, 4085, 79],\r\n                [12, 4086, 42],\r\n                [12, 4087, 41],\r\n                [12, 4088, 80],\r\n                [12, 4089, 40],\r\n                [13, 8180, 81],\r\n                [13, 8181, 39],\r\n                [13, 8182, 82],\r\n                [13, 8183, 38],\r\n                [13, 8184, 83],\r\n                [14, 16370, 37],\r\n                [14, 16371, 35],\r\n                [14, 16372, 85],\r\n                [14, 16373, 33],\r\n                [14, 16374, 36],\r\n                [14, 16375, 34],\r\n                [14, 16376, 84],\r\n                [14, 16377, 32],\r\n                [15, 32756, 87],\r\n                [15, 32757, 89],\r\n                [15, 32758, 30],\r\n                [15, 32759, 31],\r\n                [16, 65520, 86],\r\n                [16, 65521, 29],\r\n                [16, 65522, 26],\r\n                [16, 65523, 27],\r\n                [16, 65524, 28],\r\n                [16, 65525, 24],\r\n                [16, 65526, 88],\r\n                [17, 131054, 25],\r\n                [17, 131055, 22],\r\n                [17, 131056, 23],\r\n                [18, 262114, 90],\r\n                [18, 262115, 21],\r\n                [18, 262116, 19],\r\n                [18, 262117, 3],\r\n                [18, 262118, 1],\r\n                [18, 262119, 2],\r\n                [18, 262120, 0],\r\n                [19, 524242, 98],\r\n                [19, 524243, 99],\r\n                [19, 524244, 100],\r\n                [19, 524245, 101],\r\n                [19, 524246, 102],\r\n                [19, 524247, 117],\r\n                [19, 524248, 97],\r\n                [19, 524249, 91],\r\n                [19, 524250, 92],\r\n                [19, 524251, 93],\r\n                [19, 524252, 94],\r\n                [19, 524253, 95],\r\n                [19, 524254, 96],\r\n                [19, 524255, 104],\r\n                [19, 524256, 111],\r\n                [19, 524257, 112],\r\n                [19, 524258, 113],\r\n                [19, 524259, 114],\r\n                [19, 524260, 115],\r\n                [19, 524261, 116],\r\n                [19, 524262, 110],\r\n                [19, 524263, 105],\r\n                [19, 524264, 106],\r\n                [19, 524265, 107],\r\n                [19, 524266, 108],\r\n                [19, 524267, 109],\r\n                [19, 524268, 118],\r\n                [19, 524269, 6],\r\n                [19, 524270, 8],\r\n                [19, 524271, 9],\r\n                [19, 524272, 10],\r\n                [19, 524273, 5],\r\n                [19, 524274, 103],\r\n                [19, 524275, 120],\r\n                [19, 524276, 119],\r\n                [19, 524277, 4],\r\n                [19, 524278, 7],\r\n                [19, 524279, 15],\r\n                [19, 524280, 16],\r\n                [19, 524281, 18],\r\n                [19, 524282, 20],\r\n                [19, 524283, 17],\r\n                [19, 524284, 11],\r\n                [19, 524285, 12],\r\n                [19, 524286, 14],\r\n                [19, 524287, 13]\r\n            ];\r\n    \r\n            var CODEBOOKS = [HCB1, HCB2, HCB3, HCB4, HCB5, HCB6, HCB7, HCB8, HCB9, HCB10, HCB11];\r\n            var UNSIGNED = [false, false, true, true, false, false, true, true, true, true, true],\r\n                QUAD_LEN = 4,\r\n                PAIR_LEN = 2;\r\n    \r\n            return {\r\n                findOffset: function(stream, table) {\r\n                    var off = 0,\r\n                        len = table[off][0],\r\n                        cw = stream.read(len);\r\n    \r\n                    while (cw !== table[off][1]) {\r\n                        var j = table[++off][0] - len;\r\n                        len = table[off][0];\r\n                        cw <<= j;\r\n                        cw |= stream.read(j);\r\n                    }\r\n    \r\n                    return off;\r\n                },\r\n    \r\n                signValues: function(stream, data, off, len) {\r\n                    for (var i = off; i < off + len; i++) {\r\n                        if (data[i] && stream.read(1))\r\n                            data[i] = -data[i];\r\n                    }\r\n                },\r\n    \r\n                getEscape: function(stream, s) {\r\n                    var i = 4;\r\n                    while (stream.read(1))\r\n                        i++;\r\n    \r\n                    var j = stream.read(i) | (1 << i);\r\n                    return s < 0 ? -j : j;\r\n                },\r\n    \r\n                decodeScaleFactor: function(stream) {\r\n                    var offset = this.findOffset(stream, HCB_SF);\r\n                    return HCB_SF[offset][2];\r\n                },\r\n    \r\n                decodeSpectralData: function(stream, cb, data, off) {\r\n                    var HCB = CODEBOOKS[cb - 1],\r\n                        offset = this.findOffset(stream, HCB);\r\n    \r\n                    data[off] = HCB[offset][2];\r\n                    data[off + 1] = HCB[offset][3];\r\n    \r\n                    if (cb < 5) {\r\n                        data[off + 2] = HCB[offset][4];\r\n                        data[off + 3] = HCB[offset][5];\r\n                    }\r\n    \r\n                    // sign and escape\r\n                    if (cb < 11) {\r\n                        if (UNSIGNED[cb - 1])\r\n                            this.signValues(stream, data, off, cb < 5 ? QUAD_LEN : PAIR_LEN);\r\n    \r\n                    } else if (cb === 11 || cb > 15) {\r\n                        this.signValues(stream, data, off, cb < 5 ? QUAD_LEN : PAIR_LEN);\r\n    \r\n                        if (Math.abs(data[off]) === 16)\r\n                            data[off] = this.getEscape(stream, data[off]);\r\n    \r\n                        if (Math.abs(data[off + 1]) === 16)\r\n                            data[off + 1] = this.getEscape(stream, data[off + 1]);\r\n                    } else {\r\n                        throw new Error(\"Huffman: unknown spectral codebook: \" + cb);\r\n                    }\r\n                }\r\n            };\r\n        })();\r\n    \r\n        // Individual Channel Stream\r\n        var ICStream = (function() {\r\n            function ICStream(config) {\r\n                this.info = new ICSInfo();\r\n                this.bandTypes = new Int32Array(MAX_SECTIONS);\r\n                this.sectEnd = new Int32Array(MAX_SECTIONS);\r\n                this.data = new Float32Array(config.frameLength);\r\n                this.scaleFactors = new Float32Array(MAX_SECTIONS);\r\n                this.randomState = 0x1F2E3D4C;\r\n                this.tns = new TNS(config);\r\n                this.specBuf = new Int32Array(4);\r\n            }\r\n    \r\n            ICStream.ZERO_BT = 0;         // Scalefactors and spectral data are all zero.\r\n            ICStream.FIRST_PAIR_BT = 5;   // This and later band types encode two values (rather than four) with one code word.\r\n            ICStream.ESC_BT = 11;         // Spectral data are coded with an escape sequence.\r\n            ICStream.NOISE_BT = 13;       // Spectral data are scaled white noise not coded in the bitstream.\r\n            ICStream.INTENSITY_BT2 = 14;  // Scalefactor data are intensity stereo positions.\r\n            ICStream.INTENSITY_BT = 15;   // Scalefactor data are intensity stereo positions.\r\n    \r\n            ICStream.ONLY_LONG_SEQUENCE = 0;\r\n            ICStream.LONG_START_SEQUENCE = 1;\r\n            ICStream.EIGHT_SHORT_SEQUENCE = 2;\r\n            ICStream.LONG_STOP_SEQUENCE = 3;\r\n    \r\n            var MAX_SECTIONS = 120,\r\n                MAX_WINDOW_GROUP_COUNT = 8;\r\n    \r\n            var SF_DELTA = 60,\r\n                SF_OFFSET = 200;\r\n    \r\n            ICStream.prototype = {\r\n                decode: function (stream, config, commonWindow) {\r\n                    this.globalGain = stream.read(8);\r\n    \r\n                    if (!commonWindow)\r\n                        this.info.decode(stream, config, commonWindow);\r\n    \r\n                    this.decodeBandTypes(stream, config);\r\n                    this.decodeScaleFactors(stream);\r\n    \r\n                    if (this.pulsePresent = stream.read(1)) {\r\n                        if (this.info.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE)\r\n                            throw new Error(\"Pulse tool not allowed in eight short sequence.\");\r\n    \r\n                        this.decodePulseData(stream);\r\n                    }\r\n    \r\n                    if (this.tnsPresent = stream.read(1)) {\r\n                        this.tns.decode(stream, this.info);\r\n                    }\r\n    \r\n                    if (this.gainPresent = stream.read(1)) {\r\n                        throw new Error(\"TODO: decode gain control/SSR\");\r\n                    }\r\n    \r\n                    this.decodeSpectralData(stream);\r\n                },\r\n    \r\n                decodeBandTypes: function (stream, config) {\r\n                    var bits = this.info.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE ? 3 : 5,\r\n                        groupCount = this.info.groupCount,\r\n                        maxSFB = this.info.maxSFB,\r\n                        bandTypes = this.bandTypes,\r\n                        sectEnd = this.sectEnd,\r\n                        idx = 0,\r\n                        escape = (1 << bits) - 1;\r\n    \r\n                    for (var g = 0; g < groupCount; g++) {\r\n                        var k = 0;\r\n                        while (k < maxSFB) {\r\n                            var end = k,\r\n                                bandType = stream.read(4);\r\n    \r\n                            if (bandType === 12)\r\n                                throw new Error(\"Invalid band type: 12\");\r\n    \r\n                            var incr;\r\n                            while ((incr = stream.read(bits)) === escape)\r\n                                end += incr;\r\n    \r\n                            end += incr;\r\n    \r\n                            if (end > maxSFB)\r\n                                throw new Error(\"Too many bands (\" + end + \" > \" + maxSFB + \")\");\r\n    \r\n                            for (; k < end; k++) {\r\n                                bandTypes[idx] = bandType;\r\n                                sectEnd[idx++] = end;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n    \r\n                decodeScaleFactors: function (stream) {\r\n                    var groupCount = this.info.groupCount,\r\n                        maxSFB = this.info.maxSFB,\r\n                        offset = [this.globalGain, this.globalGain - 90, 0], // spectrum, noise, intensity\r\n                        idx = 0,\r\n                        noiseFlag = true,\r\n                        scaleFactors = this.scaleFactors,\r\n                        sectEnd = this.sectEnd,\r\n                        bandTypes = this.bandTypes;\r\n    \r\n                    for (var g = 0; g < groupCount; g++) {\r\n                        for (var i = 0; i < maxSFB;) {\r\n                            var runEnd = sectEnd[idx];\r\n    \r\n                            switch (bandTypes[idx]) {\r\n                                case ICStream.ZERO_BT:\r\n                                    for (; i < runEnd; i++, idx++) {\r\n                                        scaleFactors[idx] = 0;\r\n                                    }\r\n                                    break;\r\n    \r\n                                case ICStream.INTENSITY_BT:\r\n                                case ICStream.INTENSITY_BT2:\r\n                                    for (; i < runEnd; i++, idx++) {\r\n                                        offset[2] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\r\n                                        var tmp = Math.min(Math.max(offset[2], -155), 100);\r\n                                        scaleFactors[idx] = SCALEFACTOR_TABLE[-tmp + SF_OFFSET];\r\n                                    }\r\n                                    break;\r\n    \r\n                                case ICStream.NOISE_BT:\r\n                                    for (; i < runEnd; i++, idx++) {\r\n                                        if (noiseFlag) {\r\n                                            offset[1] += stream.read(9) - 256;\r\n                                            noiseFlag = false;\r\n                                        } else {\r\n                                            offset[1] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\r\n                                        }\r\n                                        var tmp = Math.min(Math.max(offset[1], -100), 155);\r\n                                        scaleFactors[idx] = -SCALEFACTOR_TABLE[tmp + SF_OFFSET];\r\n                                    }\r\n                                    break;\r\n    \r\n                                default:\r\n                                    for (; i < runEnd; i++, idx++) {\r\n                                        offset[0] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\r\n                                        if (offset[0] > 255)\r\n                                            throw new Error(\"Scalefactor out of range: \" + offset[0]);\r\n    \r\n                                        scaleFactors[idx] = SCALEFACTOR_TABLE[offset[0] - 100 + SF_OFFSET];\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n    \r\n                decodePulseData: function (stream) {\r\n                    var pulseCount = stream.read(2) + 1,\r\n                        pulseSWB = stream.read(6);\r\n    \r\n                    if (pulseSWB >= this.info.swbCount)\r\n                        throw new Error(\"Pulse SWB out of range: \" + pulseSWB);\r\n    \r\n                    if (!this.pulseOffset || this.pulseOffset.length !== pulseCount) {\r\n                        // only reallocate if needed\r\n                        this.pulseOffset = new Int32Array(pulseCount);\r\n                        this.pulseAmp = new Int32Array(pulseCount);\r\n                    }\r\n    \r\n                    this.pulseOffset[0] = this.info.swbOffsets[pulseSWB] + stream.read(5);\r\n                    this.pulseAmp[0] = stream.read(4);\r\n    \r\n                    if (this.pulseOffset[0] > 1023)\r\n                        throw new Error(\"Pulse offset out of range: \" + this.pulseOffset[0]);\r\n    \r\n                    for (var i = 1; i < pulseCount; i++) {\r\n                        this.pulseOffset[i] = stream.read(5) + this.pulseOffset[i - 1];\r\n                        if (this.pulseOffset[i] > 1023)\r\n                            throw new Error(\"Pulse offset out of range: \" + this.pulseOffset[i]);\r\n    \r\n                        this.pulseAmp[i] = stream.read(4);\r\n                    }\r\n                },\r\n    \r\n                decodeSpectralData: function (stream) {\r\n                    var data = this.data,\r\n                        info = this.info,\r\n                        maxSFB = info.maxSFB,\r\n                        windowGroups = info.groupCount,\r\n                        offsets = info.swbOffsets,\r\n                        bandTypes = this.bandTypes,\r\n                        scaleFactors = this.scaleFactors,\r\n                        buf = this.specBuf;\r\n    \r\n                    var groupOff = 0, idx = 0;\r\n                    for (var g = 0; g < windowGroups; g++) {\r\n                        var groupLen = info.groupLength[g];\r\n    \r\n                        for (var sfb = 0; sfb < maxSFB; sfb++, idx++) {\r\n                            var hcb = bandTypes[idx],\r\n                                off = groupOff + offsets[sfb],\r\n                                width = offsets[sfb + 1] - offsets[sfb];\r\n    \r\n                            if (hcb === ICStream.ZERO_BT || hcb === ICStream.INTENSITY_BT || hcb === ICStream.INTENSITY_BT2) {\r\n                                for (var group = 0; group < groupLen; group++, off += 128) {\r\n                                    for (var i = off; i < off + width; i++) {\r\n                                        data[i] = 0;\r\n                                    }\r\n                                }\r\n                            } else if (hcb === ICStream.NOISE_BT) {\r\n                                // fill with random values\r\n                                for (var group = 0; group < groupLen; group++, off += 128) {\r\n                                    var energy = 0;\r\n    \r\n                                    for (var k = 0; k < width; k++) {\r\n                                        this.randomState = (this.randomState * (1664525 + 1013904223)) | 0;\r\n                                        data[off + k] = this.randomState;\r\n                                        energy += data[off + k] * data[off + k];\r\n                                    }\r\n    \r\n                                    var scale = scaleFactors[idx] / Math.sqrt(energy);\r\n                                    for (var k = 0; k < width; k++) {\r\n                                        data[off + k] *= scale;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                for (var group = 0; group < groupLen; group++, off += 128) {\r\n                                    var num = (hcb >= ICStream.FIRST_PAIR_BT) ? 2 : 4;\r\n                                    for (var k = 0; k < width; k += num) {\r\n                                        Huffman.decodeSpectralData(stream, hcb, buf, 0);\r\n    \r\n                                        // inverse quantization & scaling\r\n                                        for (var j = 0; j < num; j++) {\r\n                                            data[off + k + j] = (buf[j] > 0) ? IQ_TABLE[buf[j]] : -IQ_TABLE[-buf[j]];\r\n                                            data[off + k + j] *= scaleFactors[idx];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        groupOff += groupLen << 7;\r\n                    }\r\n    \r\n                    // add pulse data, if present\r\n                    if (this.pulsePresent) {\r\n                        throw new Error('TODO: add pulse data');\r\n                    }\r\n                }\r\n            }\r\n    \r\n            // Individual Channel Stream Info\r\n            function ICSInfo() {\r\n                this.windowShape = new Int32Array(2);\r\n                this.windowSequence = ICStream.ONLY_LONG_SEQUENCE;\r\n                this.groupLength = new Int32Array(MAX_WINDOW_GROUP_COUNT);\r\n                this.ltpData1Present = false;\r\n                this.ltpData2Present = false;\r\n            }\r\n    \r\n            ICSInfo.prototype = {\r\n                decode: function (stream, config, commonWindow) {\r\n                    stream.advance(1); // reserved\r\n    \r\n                    this.windowSequence = stream.read(2);\r\n                    this.windowShape[0] = this.windowShape[1];\r\n                    this.windowShape[1] = stream.read(1);\r\n    \r\n                    this.groupCount = 1;\r\n                    this.groupLength[0] = 1;\r\n    \r\n                    if (this.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE) {\r\n                        this.maxSFB = stream.read(4);\r\n                        for (var i = 0; i < 7; i++) {\r\n                            if (stream.read(1)) {\r\n                                this.groupLength[this.groupCount - 1]++;\r\n                            } else {\r\n                                this.groupCount++;\r\n                                this.groupLength[this.groupCount - 1] = 1;\r\n                            }\r\n                        }\r\n    \r\n                        this.windowCount = 8;\r\n                        this.swbOffsets = SWB_OFFSET_128[config.sampleIndex];\r\n                        this.swbCount = SWB_SHORT_WINDOW_COUNT[config.sampleIndex];\r\n                        this.predictorPresent = false;\r\n                    } else {\r\n                        this.maxSFB = stream.read(6);\r\n                        this.windowCount = 1;\r\n                        this.swbOffsets = SWB_OFFSET_1024[config.sampleIndex];\r\n                        this.swbCount = SWB_LONG_WINDOW_COUNT[config.sampleIndex];\r\n                        this.predictorPresent = !!stream.read(1);\r\n    \r\n                        if (this.predictorPresent)\r\n                            this.decodePrediction(stream, config, commonWindow);\r\n                    }\r\n                },\r\n    \r\n                decodePrediction: function (stream, config, commonWindow) {\r\n                    throw new Error('Prediction not implemented.');\r\n    \r\n                    switch (config.profile) {\r\n                        case AOT_AAC_MAIN:\r\n                            throw new Error('Prediction not implemented.');\r\n                            break;\r\n    \r\n                        case AOT_AAC_LTP:\r\n                            throw new Error('LTP prediction not implemented.');\r\n                            break;\r\n    \r\n                        default:\r\n                            throw new Error('Unsupported profile for prediction ' + config.profile);\r\n                    }\r\n                }\r\n            };\r\n    \r\n            return ICStream;\r\n        })();\r\n    \r\n        // Modified Discrete Cosine Transform\r\n        var MDCT = (function(){\r\n            function MDCT(length) {\r\n                this.N = length;\r\n                this.N2 = length >>> 1;\r\n                this.N4 = length >>> 2;\r\n                this.N8 = length >>> 3;\r\n    \r\n                switch (length) {\r\n                    case 2048:\r\n                        this.sincos = MDCT_TABLE_2048;\r\n                        break;\r\n    \r\n                    case 256:\r\n                        this.sincos = MDCT_TABLE_256;\r\n                        break;\r\n    \r\n                    case 1920:\r\n                        this.sincos = MDCT_TABLE_1920;\r\n                        break;\r\n    \r\n                    case 240:\r\n                        this.sincos = MDCT_TABLE_240;\r\n                        break;\r\n    \r\n                    default:\r\n                        throw new Error(\"unsupported MDCT length: \" + length);\r\n                }\r\n    \r\n                this.fft = new FFT(this.N4);\r\n    \r\n                this.buf = new Array(this.N4);\r\n                for (var i = 0; i < this.N4; i++) {\r\n                    this.buf[i] = new Float32Array(2);\r\n                }\r\n    \r\n                this.tmp = new Float32Array(2);\r\n            }\r\n    \r\n            MDCT.prototype.process = function(input, inOffset, output, outOffset) {\r\n                // local access\r\n                var N2 = this.N2,\r\n                    N4 = this.N4,\r\n                    N8 = this.N8,\r\n                    buf = this.buf,\r\n                    tmp = this.tmp,\r\n                    sincos = this.sincos,\r\n                    fft = this.fft;\r\n    \r\n                // pre-IFFT complex multiplication\r\n                for (var k = 0; k < N4; k++) {\r\n                    buf[k][1] = (input[inOffset + 2 * k] * sincos[k][0]) + (input[inOffset + N2 - 1 - 2 * k] * sincos[k][1]);\r\n                    buf[k][0] = (input[inOffset + N2 - 1 - 2 * k] * sincos[k][0]) - (input[inOffset + 2 * k] * sincos[k][1]);\r\n                }\r\n    \r\n                // complex IFFT, non-scaling\r\n                fft.process(buf, false);\r\n    \r\n                // post-IFFT complex multiplication\r\n                for (var k = 0; k < N4; k++) {\r\n                    tmp[0] = buf[k][0];\r\n                    tmp[1] = buf[k][1];\r\n                    buf[k][1] = (tmp[1] * sincos[k][0]) + (tmp[0] * sincos[k][1]);\r\n                    buf[k][0] = (tmp[0] * sincos[k][0]) - (tmp[1] * sincos[k][1]);\r\n                }\r\n    \r\n                // reordering\r\n                for (var k = 0; k < N8; k += 2) {\r\n                    output[outOffset + 2 * k] = buf[N8 + k][1];\r\n                    output[outOffset + 2 + 2 * k] = buf[N8 + 1 + k][1];\r\n    \r\n                    output[outOffset + 1 + 2 * k] = -buf[N8 - 1 - k][0];\r\n                    output[outOffset + 3 + 2 * k] = -buf[N8 - 2 - k][0];\r\n    \r\n                    output[outOffset + N4 + 2 * k] = buf[k][0];\r\n                    output[outOffset + N4 + 2 + 2 * k] = buf[1 + k][0];\r\n    \r\n                    output[outOffset + N4 + 1 + 2 * k] = -buf[N4 - 1 - k][1];\r\n                    output[outOffset + N4 + 3 + 2 * k] = -buf[N4 - 2 - k][1];\r\n    \r\n                    output[outOffset + N2 + 2 * k] = buf[N8 + k][0];\r\n                    output[outOffset + N2 + 2 + 2 * k] = buf[N8 + 1 + k][0];\r\n    \r\n                    output[outOffset + N2 + 1 + 2 * k] = -buf[N8 - 1 - k][1];\r\n                    output[outOffset + N2 + 3 + 2 * k] = -buf[N8 - 2 - k][1];\r\n    \r\n                    output[outOffset + N2 + N4 + 2 * k] = -buf[k][1];\r\n                    output[outOffset + N2 + N4 + 2 + 2 * k] = -buf[1 + k][1];\r\n    \r\n                    output[outOffset + N2 + N4 + 1 + 2 * k] = buf[N4 - 1 - k][0];\r\n                    output[outOffset + N2 + N4 + 3 + 2 * k] = buf[N4 - 2 - k][0];\r\n                }\r\n            };\r\n            return MDCT;\r\n        })();\r\n    \r\n        var MDCT_TABLE_2048 = [\r\n            [0.031249997702054, 0.000011984224612],\r\n            [0.031249813866531, 0.000107857810004],\r\n            [0.031249335895858, 0.000203730380198],\r\n            [0.031248563794535, 0.000299601032804],\r\n            [0.031247497569829, 0.000395468865451],\r\n            [0.031246137231775, 0.000491332975794],\r\n            [0.031244482793177, 0.000587192461525],\r\n            [0.031242534269608, 0.000683046420376],\r\n            [0.031240291679407, 0.000778893950134],\r\n            [0.031237755043684, 0.000874734148645],\r\n            [0.031234924386313, 0.000970566113826],\r\n            [0.031231799733938, 0.001066388943669],\r\n            [0.031228381115970, 0.001162201736253],\r\n            [0.031224668564585, 0.001258003589751],\r\n            [0.031220662114728, 0.001353793602441],\r\n            [0.031216361804108, 0.001449570872710],\r\n            [0.031211767673203, 0.001545334499065],\r\n            [0.031206879765253, 0.001641083580144],\r\n            [0.031201698126266, 0.001736817214719],\r\n            [0.031196222805014, 0.001832534501709],\r\n            [0.031190453853031, 0.001928234540186],\r\n            [0.031184391324617, 0.002023916429386],\r\n            [0.031178035276836, 0.002119579268713],\r\n            [0.031171385769513, 0.002215222157753],\r\n            [0.031164442865236, 0.002310844196278],\r\n            [0.031157206629353, 0.002406444484258],\r\n            [0.031149677129975, 0.002502022121865],\r\n            [0.031141854437973, 0.002597576209488],\r\n            [0.031133738626977, 0.002693105847734],\r\n            [0.031125329773375, 0.002788610137442],\r\n            [0.031116627956316, 0.002884088179689],\r\n            [0.031107633257703, 0.002979539075801],\r\n            [0.031098345762200, 0.003074961927355],\r\n            [0.031088765557222, 0.003170355836197],\r\n            [0.031078892732942, 0.003265719904442],\r\n            [0.031068727382288, 0.003361053234488],\r\n            [0.031058269600939, 0.003456354929021],\r\n            [0.031047519487329, 0.003551624091024],\r\n            [0.031036477142640, 0.003646859823790],\r\n            [0.031025142670809, 0.003742061230921],\r\n            [0.031013516178519, 0.003837227416347],\r\n            [0.031001597775203, 0.003932357484328],\r\n            [0.030989387573042, 0.004027450539462],\r\n            [0.030976885686963, 0.004122505686697],\r\n            [0.030964092234638, 0.004217522031340],\r\n            [0.030951007336485, 0.004312498679058],\r\n            [0.030937631115663, 0.004407434735897],\r\n            [0.030923963698074, 0.004502329308281],\r\n            [0.030910005212362, 0.004597181503027],\r\n            [0.030895755789908, 0.004691990427350],\r\n            [0.030881215564835, 0.004786755188872],\r\n            [0.030866384674000, 0.004881474895632],\r\n            [0.030851263256996, 0.004976148656090],\r\n            [0.030835851456154, 0.005070775579142],\r\n            [0.030820149416533, 0.005165354774124],\r\n            [0.030804157285929, 0.005259885350819],\r\n            [0.030787875214864, 0.005354366419469],\r\n            [0.030771303356593, 0.005448797090784],\r\n            [0.030754441867095, 0.005543176475946],\r\n            [0.030737290905077, 0.005637503686619],\r\n            [0.030719850631972, 0.005731777834961],\r\n            [0.030702121211932, 0.005825998033626],\r\n            [0.030684102811835, 0.005920163395780],\r\n            [0.030665795601276, 0.006014273035101],\r\n            [0.030647199752570, 0.006108326065793],\r\n            [0.030628315440748, 0.006202321602594],\r\n            [0.030609142843557, 0.006296258760782],\r\n            [0.030589682141455, 0.006390136656185],\r\n            [0.030569933517616, 0.006483954405188],\r\n            [0.030549897157919, 0.006577711124743],\r\n            [0.030529573250956, 0.006671405932375],\r\n            [0.030508961988022, 0.006765037946194],\r\n            [0.030488063563118, 0.006858606284900],\r\n            [0.030466878172949, 0.006952110067791],\r\n            [0.030445406016919, 0.007045548414774],\r\n            [0.030423647297133, 0.007138920446372],\r\n            [0.030401602218392, 0.007232225283733],\r\n            [0.030379270988192, 0.007325462048634],\r\n            [0.030356653816724, 0.007418629863497],\r\n            [0.030333750916869, 0.007511727851390],\r\n            [0.030310562504198, 0.007604755136040],\r\n            [0.030287088796968, 0.007697710841838],\r\n            [0.030263330016124, 0.007790594093851],\r\n            [0.030239286385293, 0.007883404017824],\r\n            [0.030214958130781, 0.007976139740197],\r\n            [0.030190345481576, 0.008068800388104],\r\n            [0.030165448669342, 0.008161385089390],\r\n            [0.030140267928416, 0.008253892972610],\r\n            [0.030114803495809, 0.008346323167047],\r\n            [0.030089055611203, 0.008438674802711],\r\n            [0.030063024516947, 0.008530947010354],\r\n            [0.030036710458054, 0.008623138921475],\r\n            [0.030010113682202, 0.008715249668328],\r\n            [0.029983234439732, 0.008807278383932],\r\n            [0.029956072983640, 0.008899224202078],\r\n            [0.029928629569580, 0.008991086257336],\r\n            [0.029900904455860, 0.009082863685067],\r\n            [0.029872897903441, 0.009174555621425],\r\n            [0.029844610175929, 0.009266161203371],\r\n            [0.029816041539579, 0.009357679568679],\r\n            [0.029787192263292, 0.009449109855944],\r\n            [0.029758062618606, 0.009540451204587],\r\n            [0.029728652879702, 0.009631702754871],\r\n            [0.029698963323395, 0.009722863647900],\r\n            [0.029668994229134, 0.009813933025633],\r\n            [0.029638745879000, 0.009904910030891],\r\n            [0.029608218557702, 0.009995793807363],\r\n            [0.029577412552575, 0.010086583499618],\r\n            [0.029546328153577, 0.010177278253107],\r\n            [0.029514965653285, 0.010267877214177],\r\n            [0.029483325346896, 0.010358379530076],\r\n            [0.029451407532220, 0.010448784348962],\r\n            [0.029419212509679, 0.010539090819911],\r\n            [0.029386740582307, 0.010629298092923],\r\n            [0.029353992055740, 0.010719405318933],\r\n            [0.029320967238220, 0.010809411649818],\r\n            [0.029287666440590, 0.010899316238403],\r\n            [0.029254089976290, 0.010989118238474],\r\n            [0.029220238161353, 0.011078816804778],\r\n            [0.029186111314406, 0.011168411093039],\r\n            [0.029151709756664, 0.011257900259961],\r\n            [0.029117033811927, 0.011347283463239],\r\n            [0.029082083806579, 0.011436559861563],\r\n            [0.029046860069582, 0.011525728614630],\r\n            [0.029011362932476, 0.011614788883150],\r\n            [0.028975592729373, 0.011703739828853],\r\n            [0.028939549796957, 0.011792580614500],\r\n            [0.028903234474475, 0.011881310403886],\r\n            [0.028866647103744, 0.011969928361855],\r\n            [0.028829788029135, 0.012058433654299],\r\n            [0.028792657597583, 0.012146825448172],\r\n            [0.028755256158571, 0.012235102911499],\r\n            [0.028717584064137, 0.012323265213377],\r\n            [0.028679641668864, 0.012411311523990],\r\n            [0.028641429329882, 0.012499241014612],\r\n            [0.028602947406859, 0.012587052857618],\r\n            [0.028564196262001, 0.012674746226488],\r\n            [0.028525176260050, 0.012762320295819],\r\n            [0.028485887768276, 0.012849774241331],\r\n            [0.028446331156478, 0.012937107239875],\r\n            [0.028406506796976, 0.013024318469437],\r\n            [0.028366415064615, 0.013111407109155],\r\n            [0.028326056336751, 0.013198372339315],\r\n            [0.028285430993258, 0.013285213341368],\r\n            [0.028244539416515, 0.013371929297933],\r\n            [0.028203381991411, 0.013458519392807],\r\n            [0.028161959105334, 0.013544982810971],\r\n            [0.028120271148172, 0.013631318738598],\r\n            [0.028078318512309, 0.013717526363062],\r\n            [0.028036101592619, 0.013803604872943],\r\n            [0.027993620786463, 0.013889553458039],\r\n            [0.027950876493687, 0.013975371309367],\r\n            [0.027907869116616, 0.014061057619178],\r\n            [0.027864599060052, 0.014146611580959],\r\n            [0.027821066731270, 0.014232032389445],\r\n            [0.027777272540012, 0.014317319240622],\r\n            [0.027733216898487, 0.014402471331737],\r\n            [0.027688900221361, 0.014487487861307],\r\n            [0.027644322925762, 0.014572368029123],\r\n            [0.027599485431266, 0.014657111036262],\r\n            [0.027554388159903, 0.014741716085090],\r\n            [0.027509031536144, 0.014826182379271],\r\n            [0.027463415986904, 0.014910509123778],\r\n            [0.027417541941533, 0.014994695524894],\r\n            [0.027371409831816, 0.015078740790225],\r\n            [0.027325020091965, 0.015162644128704],\r\n            [0.027278373158618, 0.015246404750603],\r\n            [0.027231469470833, 0.015330021867534],\r\n            [0.027184309470088, 0.015413494692460],\r\n            [0.027136893600268, 0.015496822439704],\r\n            [0.027089222307671, 0.015580004324954],\r\n            [0.027041296040997, 0.015663039565269],\r\n            [0.026993115251345, 0.015745927379091],\r\n            [0.026944680392213, 0.015828666986247],\r\n            [0.026895991919487, 0.015911257607961],\r\n            [0.026847050291442, 0.015993698466859],\r\n            [0.026797855968734, 0.016075988786976],\r\n            [0.026748409414401, 0.016158127793763],\r\n            [0.026698711093851, 0.016240114714099],\r\n            [0.026648761474864, 0.016321948776289],\r\n            [0.026598561027585, 0.016403629210082],\r\n            [0.026548110224519, 0.016485155246669],\r\n            [0.026497409540530, 0.016566526118696],\r\n            [0.026446459452830, 0.016647741060271],\r\n            [0.026395260440982, 0.016728799306966],\r\n            [0.026343812986890, 0.016809700095831],\r\n            [0.026292117574797, 0.016890442665397],\r\n            [0.026240174691280, 0.016971026255683],\r\n            [0.026187984825246, 0.017051450108208],\r\n            [0.026135548467924, 0.017131713465990],\r\n            [0.026082866112867, 0.017211815573560],\r\n            [0.026029938255941, 0.017291755676967],\r\n            [0.025976765395322, 0.017371533023784],\r\n            [0.025923348031494, 0.017451146863116],\r\n            [0.025869686667242, 0.017530596445607],\r\n            [0.025815781807646, 0.017609881023449],\r\n            [0.025761633960080, 0.017688999850383],\r\n            [0.025707243634204, 0.017767952181715],\r\n            [0.025652611341960, 0.017846737274313],\r\n            [0.025597737597568, 0.017925354386623],\r\n            [0.025542622917522, 0.018003802778671],\r\n            [0.025487267820581, 0.018082081712071],\r\n            [0.025431672827768, 0.018160190450031],\r\n            [0.025375838462365, 0.018238128257362],\r\n            [0.025319765249906, 0.018315894400484],\r\n            [0.025263453718173, 0.018393488147432],\r\n            [0.025206904397193, 0.018470908767865],\r\n            [0.025150117819228, 0.018548155533070],\r\n            [0.025093094518776, 0.018625227715971],\r\n            [0.025035835032562, 0.018702124591135],\r\n            [0.024978339899534, 0.018778845434780],\r\n            [0.024920609660858, 0.018855389524780],\r\n            [0.024862644859912, 0.018931756140672],\r\n            [0.024804446042284, 0.019007944563666],\r\n            [0.024746013755764, 0.019083954076646],\r\n            [0.024687348550337, 0.019159783964183],\r\n            [0.024628450978184, 0.019235433512536],\r\n            [0.024569321593670, 0.019310902009663],\r\n            [0.024509960953345, 0.019386188745225],\r\n            [0.024450369615932, 0.019461293010596],\r\n            [0.024390548142329, 0.019536214098866],\r\n            [0.024330497095598, 0.019610951304848],\r\n            [0.024270217040961, 0.019685503925087],\r\n            [0.024209708545799, 0.019759871257867],\r\n            [0.024148972179639, 0.019834052603212],\r\n            [0.024088008514157, 0.019908047262901],\r\n            [0.024026818123164, 0.019981854540467],\r\n            [0.023965401582609, 0.020055473741208],\r\n            [0.023903759470567, 0.020128904172192],\r\n            [0.023841892367236, 0.020202145142264],\r\n            [0.023779800854935, 0.020275195962052],\r\n            [0.023717485518092, 0.020348055943974],\r\n            [0.023654946943242, 0.020420724402244],\r\n            [0.023592185719023, 0.020493200652878],\r\n            [0.023529202436167, 0.020565484013703],\r\n            [0.023465997687496, 0.020637573804361],\r\n            [0.023402572067918, 0.020709469346314],\r\n            [0.023338926174419, 0.020781169962854],\r\n            [0.023275060606058, 0.020852674979108],\r\n            [0.023210975963963, 0.020923983722044],\r\n            [0.023146672851322, 0.020995095520475],\r\n            [0.023082151873380, 0.021066009705072],\r\n            [0.023017413637435, 0.021136725608363],\r\n            [0.022952458752826, 0.021207242564742],\r\n            [0.022887287830934, 0.021277559910478],\r\n            [0.022821901485173, 0.021347676983716],\r\n            [0.022756300330983, 0.021417593124488],\r\n            [0.022690484985827, 0.021487307674717],\r\n            [0.022624456069185, 0.021556819978223],\r\n            [0.022558214202547, 0.021626129380729],\r\n            [0.022491760009405, 0.021695235229869],\r\n            [0.022425094115252, 0.021764136875192],\r\n            [0.022358217147572, 0.021832833668171],\r\n            [0.022291129735838, 0.021901324962204],\r\n            [0.022223832511501, 0.021969610112625],\r\n            [0.022156326107988, 0.022037688476709],\r\n            [0.022088611160696, 0.022105559413676],\r\n            [0.022020688306983, 0.022173222284699],\r\n            [0.021952558186166, 0.022240676452909],\r\n            [0.021884221439510, 0.022307921283403],\r\n            [0.021815678710228, 0.022374956143245],\r\n            [0.021746930643469, 0.022441780401478],\r\n            [0.021677977886316, 0.022508393429127],\r\n            [0.021608821087780, 0.022574794599206],\r\n            [0.021539460898790, 0.022640983286719],\r\n            [0.021469897972190, 0.022706958868676],\r\n            [0.021400132962735, 0.022772720724087],\r\n            [0.021330166527077, 0.022838268233979],\r\n            [0.021259999323769, 0.022903600781391],\r\n            [0.021189632013250, 0.022968717751391],\r\n            [0.021119065257845, 0.023033618531071],\r\n            [0.021048299721754, 0.023098302509561],\r\n            [0.020977336071050, 0.023162769078031],\r\n            [0.020906174973670, 0.023227017629698],\r\n            [0.020834817099409, 0.023291047559828],\r\n            [0.020763263119915, 0.023354858265748],\r\n            [0.020691513708680, 0.023418449146848],\r\n            [0.020619569541038, 0.023481819604585],\r\n            [0.020547431294155, 0.023544969042494],\r\n            [0.020475099647023, 0.023607896866186],\r\n            [0.020402575280455, 0.023670602483363],\r\n            [0.020329858877078, 0.023733085303813],\r\n            [0.020256951121327, 0.023795344739427],\r\n            [0.020183852699437, 0.023857380204193],\r\n            [0.020110564299439, 0.023919191114211],\r\n            [0.020037086611150, 0.023980776887692],\r\n            [0.019963420326171, 0.024042136944968],\r\n            [0.019889566137877, 0.024103270708495],\r\n            [0.019815524741412, 0.024164177602859],\r\n            [0.019741296833681, 0.024224857054779],\r\n            [0.019666883113346, 0.024285308493120],\r\n            [0.019592284280817, 0.024345531348888],\r\n            [0.019517501038246, 0.024405525055242],\r\n            [0.019442534089523, 0.024465289047500],\r\n            [0.019367384140264, 0.024524822763141],\r\n            [0.019292051897809, 0.024584125641809],\r\n            [0.019216538071215, 0.024643197125323],\r\n            [0.019140843371246, 0.024702036657681],\r\n            [0.019064968510369, 0.024760643685063],\r\n            [0.018988914202748, 0.024819017655836],\r\n            [0.018912681164234, 0.024877158020562],\r\n            [0.018836270112363, 0.024935064232003],\r\n            [0.018759681766343, 0.024992735745123],\r\n            [0.018682916847054, 0.025050172017095],\r\n            [0.018605976077037, 0.025107372507308],\r\n            [0.018528860180486, 0.025164336677369],\r\n            [0.018451569883247, 0.025221063991110],\r\n            [0.018374105912805, 0.025277553914591],\r\n            [0.018296468998280, 0.025333805916107],\r\n            [0.018218659870421, 0.025389819466194],\r\n            [0.018140679261596, 0.025445594037630],\r\n            [0.018062527905790, 0.025501129105445],\r\n            [0.017984206538592, 0.025556424146920],\r\n            [0.017905715897192, 0.025611478641598],\r\n            [0.017827056720375, 0.025666292071285],\r\n            [0.017748229748511, 0.025720863920056],\r\n            [0.017669235723550, 0.025775193674260],\r\n            [0.017590075389012, 0.025829280822525],\r\n            [0.017510749489986, 0.025883124855762],\r\n            [0.017431258773116, 0.025936725267170],\r\n            [0.017351603986600, 0.025990081552242],\r\n            [0.017271785880180, 0.026043193208768],\r\n            [0.017191805205132, 0.026096059736841],\r\n            [0.017111662714267, 0.026148680638861],\r\n            [0.017031359161915, 0.026201055419541],\r\n            [0.016950895303924, 0.026253183585908],\r\n            [0.016870271897651, 0.026305064647313],\r\n            [0.016789489701954, 0.026356698115431],\r\n            [0.016708549477186, 0.026408083504269],\r\n            [0.016627451985187, 0.026459220330167],\r\n            [0.016546197989277, 0.026510108111806],\r\n            [0.016464788254250, 0.026560746370212],\r\n            [0.016383223546365, 0.026611134628757],\r\n            [0.016301504633341, 0.026661272413168],\r\n            [0.016219632284346, 0.026711159251530],\r\n            [0.016137607269996, 0.026760794674288],\r\n            [0.016055430362340, 0.026810178214254],\r\n            [0.015973102334858, 0.026859309406613],\r\n            [0.015890623962454, 0.026908187788922],\r\n            [0.015807996021446, 0.026956812901119],\r\n            [0.015725219289558, 0.027005184285527],\r\n            [0.015642294545918, 0.027053301486856],\r\n            [0.015559222571044, 0.027101164052208],\r\n            [0.015476004146842, 0.027148771531083],\r\n            [0.015392640056594, 0.027196123475380],\r\n            [0.015309131084956, 0.027243219439406],\r\n            [0.015225478017946, 0.027290058979875],\r\n            [0.015141681642938, 0.027336641655915],\r\n            [0.015057742748656, 0.027382967029073],\r\n            [0.014973662125164, 0.027429034663317],\r\n            [0.014889440563862, 0.027474844125040],\r\n            [0.014805078857474, 0.027520394983066],\r\n            [0.014720577800046, 0.027565686808654],\r\n            [0.014635938186934, 0.027610719175499],\r\n            [0.014551160814797, 0.027655491659740],\r\n            [0.014466246481592, 0.027700003839960],\r\n            [0.014381195986567, 0.027744255297195],\r\n            [0.014296010130247, 0.027788245614933],\r\n            [0.014210689714436, 0.027831974379120],\r\n            [0.014125235542201, 0.027875441178165],\r\n            [0.014039648417870, 0.027918645602941],\r\n            [0.013953929147020, 0.027961587246792],\r\n            [0.013868078536476, 0.028004265705534],\r\n            [0.013782097394294, 0.028046680577462],\r\n            [0.013695986529763, 0.028088831463351],\r\n            [0.013609746753390, 0.028130717966461],\r\n            [0.013523378876898, 0.028172339692540],\r\n            [0.013436883713214, 0.028213696249828],\r\n            [0.013350262076462, 0.028254787249062],\r\n            [0.013263514781960, 0.028295612303478],\r\n            [0.013176642646205, 0.028336171028814],\r\n            [0.013089646486871, 0.028376463043317],\r\n            [0.013002527122799, 0.028416487967743],\r\n            [0.012915285373990, 0.028456245425361],\r\n            [0.012827922061597, 0.028495735041960],\r\n            [0.012740438007915, 0.028534956445849],\r\n            [0.012652834036379, 0.028573909267859],\r\n            [0.012565110971550, 0.028612593141354],\r\n            [0.012477269639111, 0.028651007702224],\r\n            [0.012389310865858, 0.028689152588899],\r\n            [0.012301235479693, 0.028727027442343],\r\n            [0.012213044309615, 0.028764631906065],\r\n            [0.012124738185712, 0.028801965626115],\r\n            [0.012036317939156, 0.028839028251097],\r\n            [0.011947784402191, 0.028875819432161],\r\n            [0.011859138408130, 0.028912338823015],\r\n            [0.011770380791341, 0.028948586079925],\r\n            [0.011681512387245, 0.028984560861718],\r\n            [0.011592534032306, 0.029020262829785],\r\n            [0.011503446564022, 0.029055691648087],\r\n            [0.011414250820918, 0.029090846983152],\r\n            [0.011324947642537, 0.029125728504087],\r\n            [0.011235537869437, 0.029160335882573],\r\n            [0.011146022343175, 0.029194668792871],\r\n            [0.011056401906305, 0.029228726911828],\r\n            [0.010966677402371, 0.029262509918876],\r\n            [0.010876849675891, 0.029296017496036],\r\n            [0.010786919572361, 0.029329249327922],\r\n            [0.010696887938235, 0.029362205101743],\r\n            [0.010606755620926, 0.029394884507308],\r\n            [0.010516523468793, 0.029427287237024],\r\n            [0.010426192331137, 0.029459412985906],\r\n            [0.010335763058187, 0.029491261451573],\r\n            [0.010245236501099, 0.029522832334255],\r\n            [0.010154613511943, 0.029554125336796],\r\n            [0.010063894943698, 0.029585140164654],\r\n            [0.009973081650240, 0.029615876525905],\r\n            [0.009882174486340, 0.029646334131247],\r\n            [0.009791174307650, 0.029676512694001],\r\n            [0.009700081970699, 0.029706411930116],\r\n            [0.009608898332881, 0.029736031558168],\r\n            [0.009517624252453, 0.029765371299366],\r\n            [0.009426260588521, 0.029794430877553],\r\n            [0.009334808201034, 0.029823210019210],\r\n            [0.009243267950778, 0.029851708453456],\r\n            [0.009151640699363, 0.029879925912053],\r\n            [0.009059927309220, 0.029907862129408],\r\n            [0.008968128643591, 0.029935516842573],\r\n            [0.008876245566520, 0.029962889791254],\r\n            [0.008784278942845, 0.029989980717805],\r\n            [0.008692229638191, 0.030016789367235],\r\n            [0.008600098518961, 0.030043315487212],\r\n            [0.008507886452329, 0.030069558828062],\r\n            [0.008415594306230, 0.030095519142772],\r\n            [0.008323222949351, 0.030121196186994],\r\n            [0.008230773251129, 0.030146589719046],\r\n            [0.008138246081733, 0.030171699499915],\r\n            [0.008045642312067, 0.030196525293257],\r\n            [0.007952962813750, 0.030221066865402],\r\n            [0.007860208459119, 0.030245323985357],\r\n            [0.007767380121212, 0.030269296424803],\r\n            [0.007674478673766, 0.030292983958103],\r\n            [0.007581504991203, 0.030316386362302],\r\n            [0.007488459948628, 0.030339503417126],\r\n            [0.007395344421816, 0.030362334904989],\r\n            [0.007302159287206, 0.030384880610993],\r\n            [0.007208905421891, 0.030407140322928],\r\n            [0.007115583703613, 0.030429113831278],\r\n            [0.007022195010752, 0.030450800929220],\r\n            [0.006928740222316, 0.030472201412626],\r\n            [0.006835220217939, 0.030493315080068],\r\n            [0.006741635877866, 0.030514141732814],\r\n            [0.006647988082948, 0.030534681174838],\r\n            [0.006554277714635, 0.030554933212813],\r\n            [0.006460505654964, 0.030574897656119],\r\n            [0.006366672786553, 0.030594574316845],\r\n            [0.006272779992593, 0.030613963009786],\r\n            [0.006178828156839, 0.030633063552447],\r\n            [0.006084818163601, 0.030651875765048],\r\n            [0.005990750897737, 0.030670399470520],\r\n            [0.005896627244644, 0.030688634494512],\r\n            [0.005802448090250, 0.030706580665388],\r\n            [0.005708214321004, 0.030724237814232],\r\n            [0.005613926823871, 0.030741605774849],\r\n            [0.005519586486321, 0.030758684383764],\r\n            [0.005425194196321, 0.030775473480228],\r\n            [0.005330750842327, 0.030791972906214],\r\n            [0.005236257313276, 0.030808182506425],\r\n            [0.005141714498576, 0.030824102128288],\r\n            [0.005047123288102, 0.030839731621963],\r\n            [0.004952484572181, 0.030855070840339],\r\n            [0.004857799241589, 0.030870119639036],\r\n            [0.004763068187541, 0.030884877876411],\r\n            [0.004668292301681, 0.030899345413553],\r\n            [0.004573472476075, 0.030913522114288],\r\n            [0.004478609603205, 0.030927407845180],\r\n            [0.004383704575956, 0.030941002475530],\r\n            [0.004288758287610, 0.030954305877381],\r\n            [0.004193771631837, 0.030967317925516],\r\n            [0.004098745502689, 0.030980038497461],\r\n            [0.004003680794587, 0.030992467473486],\r\n            [0.003908578402316, 0.031004604736602],\r\n            [0.003813439221017, 0.031016450172571],\r\n            [0.003718264146176, 0.031028003669899],\r\n            [0.003623054073616, 0.031039265119839],\r\n            [0.003527809899492, 0.031050234416394],\r\n            [0.003432532520278, 0.031060911456318],\r\n            [0.003337222832760, 0.031071296139114],\r\n            [0.003241881734029, 0.031081388367037],\r\n            [0.003146510121474, 0.031091188045095],\r\n            [0.003051108892766, 0.031100695081051],\r\n            [0.002955678945860, 0.031109909385419],\r\n            [0.002860221178978, 0.031118830871473],\r\n            [0.002764736490604, 0.031127459455239],\r\n            [0.002669225779478, 0.031135795055501],\r\n            [0.002573689944583, 0.031143837593803],\r\n            [0.002478129885137, 0.031151586994444],\r\n            [0.002382546500589, 0.031159043184484],\r\n            [0.002286940690606, 0.031166206093743],\r\n            [0.002191313355067, 0.031173075654800],\r\n            [0.002095665394051, 0.031179651802998],\r\n            [0.001999997707835, 0.031185934476438],\r\n            [0.001904311196878, 0.031191923615985],\r\n            [0.001808606761820, 0.031197619165268],\r\n            [0.001712885303465, 0.031203021070678],\r\n            [0.001617147722782, 0.031208129281370],\r\n            [0.001521394920889, 0.031212943749264],\r\n            [0.001425627799047, 0.031217464429043],\r\n            [0.001329847258653, 0.031221691278159],\r\n            [0.001234054201231, 0.031225624256825],\r\n            [0.001138249528420, 0.031229263328024],\r\n            [0.001042434141971, 0.031232608457502],\r\n            [0.000946608943736, 0.031235659613775],\r\n            [0.000850774835656, 0.031238416768124],\r\n            [0.000754932719759, 0.031240879894597],\r\n            [0.000659083498149, 0.031243048970010],\r\n            [0.000563228072993, 0.031244923973948],\r\n            [0.000467367346520, 0.031246504888762],\r\n            [0.000371502221008, 0.031247791699571],\r\n            [0.000275633598775, 0.031248784394264],\r\n            [0.000179762382174, 0.031249482963498],\r\n            [0.000083889473581, 0.031249887400697]\r\n        ];\r\n    \r\n        var MDCT_TABLE_256 = [\r\n            [0.088387931675923, 0.000271171628935],\r\n            [0.088354655998507, 0.002440238387037],\r\n            [0.088268158780110, 0.004607835236780],\r\n            [0.088128492123423, 0.006772656498875],\r\n            [0.087935740158418, 0.008933398165942],\r\n            [0.087690018991670, 0.011088758687994],\r\n            [0.087391476636423, 0.013237439756448],\r\n            [0.087040292923427, 0.015378147086172],\r\n            [0.086636679392621, 0.017509591195118],\r\n            [0.086180879165703, 0.019630488181053],\r\n            [0.085673166799686, 0.021739560494940],\r\n            [0.085113848121515, 0.023835537710479],\r\n            [0.084503260043847, 0.025917157289369],\r\n            [0.083841770362110, 0.027983165341813],\r\n            [0.083129777532952, 0.030032317381813],\r\n            [0.082367710434230, 0.032063379076803],\r\n            [0.081556028106671, 0.034075126991164],\r\n            [0.080695219477356, 0.036066349323177],\r\n            [0.079785803065216, 0.038035846634965],\r\n            [0.078828326668693, 0.039982432574992],\r\n            [0.077823367035766, 0.041904934592675],\r\n            [0.076771529516540, 0.043802194644686],\r\n            [0.075673447698606, 0.045673069892513],\r\n            [0.074529783025390, 0.047516433390863],\r\n            [0.073341224397728, 0.049331174766491],\r\n            [0.072108487758894, 0.051116200887052],\r\n            [0.070832315663343, 0.052870436519557],\r\n            [0.069513476829429, 0.054592824978055],\r\n            [0.068152765676348, 0.056282328760143],\r\n            [0.066751001845620, 0.057937930171918],\r\n            [0.065309029707361, 0.059558631940996],\r\n            [0.063827717851668, 0.061143457817234],\r\n            [0.062307958565413, 0.062691453160784],\r\n            [0.060750667294763, 0.064201685517134],\r\n            [0.059156782093749, 0.065673245178784],\r\n            [0.057527263059216, 0.067105245733220],\r\n            [0.055863091752499, 0.068496824596852],\r\n            [0.054165270608165, 0.069847143534609],\r\n            [0.052434822330188, 0.071155389164853],\r\n            [0.050672789275903, 0.072420773449336],\r\n            [0.048880232828135, 0.073642534167879],\r\n            [0.047058232755862, 0.074819935377512],\r\n            [0.045207886563797, 0.075952267855771],\r\n            [0.043330308831298, 0.077038849527912],\r\n            [0.041426630540984, 0.078079025877766],\r\n            [0.039497998397473, 0.079072170341994],\r\n            [0.037545574136653, 0.080017684687506],\r\n            [0.035570533825892, 0.080914999371817],\r\n            [0.033574067155622, 0.081763573886112],\r\n            [0.031557376722714, 0.082562897080836],\r\n            [0.029521677306074, 0.083312487473584],\r\n            [0.027468195134911, 0.084011893539132],\r\n            [0.025398167150101, 0.084660693981419],\r\n            [0.023312840259098, 0.085258497987320],\r\n            [0.021213470584847, 0.085804945462053],\r\n            [0.019101322709138, 0.086299707246093],\r\n            [0.016977668910873, 0.086742485313442],\r\n            [0.014843788399692, 0.087133012951149],\r\n            [0.012700966545425, 0.087471054919968],\r\n            [0.010550494103830, 0.087756407596056],\r\n            [0.008393666439096, 0.087988899093631],\r\n            [0.006231782743558, 0.088168389368510],\r\n            [0.004066145255116, 0.088294770302461],\r\n            [0.001898058472816, 0.088367965768336]\r\n        ];\r\n    \r\n        var MDCT_TABLE_1920 = [\r\n            [0.032274858518097, 0.000013202404176],\r\n            [0.032274642494505, 0.000118821372483],\r\n            [0.032274080835421, 0.000224439068308],\r\n            [0.032273173546860, 0.000330054360572],\r\n            [0.032271920638538, 0.000435666118218],\r\n            [0.032270322123873, 0.000541273210231],\r\n            [0.032268378019984, 0.000646874505642],\r\n            [0.032266088347691, 0.000752468873546],\r\n            [0.032263453131514, 0.000858055183114],\r\n            [0.032260472399674, 0.000963632303600],\r\n            [0.032257146184092, 0.001069199104358],\r\n            [0.032253474520390, 0.001174754454853],\r\n            [0.032249457447888, 0.001280297224671],\r\n            [0.032245095009606, 0.001385826283535],\r\n            [0.032240387252262, 0.001491340501313],\r\n            [0.032235334226272, 0.001596838748031],\r\n            [0.032229935985750, 0.001702319893890],\r\n            [0.032224192588507, 0.001807782809271],\r\n            [0.032218104096050, 0.001913226364749],\r\n            [0.032211670573582, 0.002018649431111],\r\n            [0.032204892090000, 0.002124050879359],\r\n            [0.032197768717898, 0.002229429580728],\r\n            [0.032190300533560, 0.002334784406698],\r\n            [0.032182487616965, 0.002440114229003],\r\n            [0.032174330051782, 0.002545417919644],\r\n            [0.032165827925374, 0.002650694350905],\r\n            [0.032156981328790, 0.002755942395358],\r\n            [0.032147790356771, 0.002861160925883],\r\n            [0.032138255107744, 0.002966348815672],\r\n            [0.032128375683825, 0.003071504938250],\r\n            [0.032118152190814, 0.003176628167476],\r\n            [0.032107584738196, 0.003281717377568],\r\n            [0.032096673439141, 0.003386771443102],\r\n            [0.032085418410500, 0.003491789239036],\r\n            [0.032073819772804, 0.003596769640711],\r\n            [0.032061877650267, 0.003701711523874],\r\n            [0.032049592170778, 0.003806613764680],\r\n            [0.032036963465906, 0.003911475239711],\r\n            [0.032023991670893, 0.004016294825985],\r\n            [0.032010676924657, 0.004121071400967],\r\n            [0.031997019369789, 0.004225803842586],\r\n            [0.031983019152549, 0.004330491029241],\r\n            [0.031968676422869, 0.004435131839816],\r\n            [0.031953991334348, 0.004539725153692],\r\n            [0.031938964044252, 0.004644269850758],\r\n            [0.031923594713510, 0.004748764811426],\r\n            [0.031907883506716, 0.004853208916638],\r\n            [0.031891830592124, 0.004957601047881],\r\n            [0.031875436141648, 0.005061940087200],\r\n            [0.031858700330859, 0.005166224917208],\r\n            [0.031841623338985, 0.005270454421097],\r\n            [0.031824205348907, 0.005374627482653],\r\n            [0.031806446547156, 0.005478742986267],\r\n            [0.031788347123916, 0.005582799816945],\r\n            [0.031769907273017, 0.005686796860323],\r\n            [0.031751127191935, 0.005790733002674],\r\n            [0.031732007081789, 0.005894607130928],\r\n            [0.031712547147340, 0.005998418132675],\r\n            [0.031692747596989, 0.006102164896182],\r\n            [0.031672608642773, 0.006205846310406],\r\n            [0.031652130500364, 0.006309461265002],\r\n            [0.031631313389067, 0.006413008650337],\r\n            [0.031610157531816, 0.006516487357501],\r\n            [0.031588663155172, 0.006619896278321],\r\n            [0.031566830489325, 0.006723234305370],\r\n            [0.031544659768083, 0.006826500331981],\r\n            [0.031522151228878, 0.006929693252258],\r\n            [0.031499305112758, 0.007032811961088],\r\n            [0.031476121664387, 0.007135855354151],\r\n            [0.031452601132040, 0.007238822327937],\r\n            [0.031428743767604, 0.007341711779751],\r\n            [0.031404549826572, 0.007444522607730],\r\n            [0.031380019568042, 0.007547253710853],\r\n            [0.031355153254712, 0.007649903988952],\r\n            [0.031329951152882, 0.007752472342725],\r\n            [0.031304413532445, 0.007854957673748],\r\n            [0.031278540666888, 0.007957358884484],\r\n            [0.031252332833290, 0.008059674878300],\r\n            [0.031225790312316, 0.008161904559473],\r\n            [0.031198913388214, 0.008264046833205],\r\n            [0.031171702348814, 0.008366100605636],\r\n            [0.031144157485525, 0.008468064783849],\r\n            [0.031116279093331, 0.008569938275893],\r\n            [0.031088067470786, 0.008671719990782],\r\n            [0.031059522920014, 0.008773408838517],\r\n            [0.031030645746705, 0.008875003730092],\r\n            [0.031001436260110, 0.008976503577507],\r\n            [0.030971894773039, 0.009077907293780],\r\n            [0.030942021601857, 0.009179213792959],\r\n            [0.030911817066483, 0.009280421990133],\r\n            [0.030881281490382, 0.009381530801444],\r\n            [0.030850415200566, 0.009482539144097],\r\n            [0.030819218527589, 0.009583445936373],\r\n            [0.030787691805541, 0.009684250097643],\r\n            [0.030755835372048, 0.009784950548375],\r\n            [0.030723649568268, 0.009885546210147],\r\n            [0.030691134738883, 0.009986036005661],\r\n            [0.030658291232103, 0.010086418858753],\r\n            [0.030625119399655, 0.010186693694402],\r\n            [0.030591619596781, 0.010286859438745],\r\n            [0.030557792182239, 0.010386915019088],\r\n            [0.030523637518292, 0.010486859363916],\r\n            [0.030489155970710, 0.010586691402906],\r\n            [0.030454347908763, 0.010686410066936],\r\n            [0.030419213705216, 0.010786014288099],\r\n            [0.030383753736329, 0.010885502999714],\r\n            [0.030347968381849, 0.010984875136338],\r\n            [0.030311858025010, 0.011084129633775],\r\n            [0.030275423052523, 0.011183265429088],\r\n            [0.030238663854579, 0.011282281460612],\r\n            [0.030201580824838, 0.011381176667967],\r\n            [0.030164174360430, 0.011479949992062],\r\n            [0.030126444861948, 0.011578600375117],\r\n            [0.030088392733446, 0.011677126760663],\r\n            [0.030050018382430, 0.011775528093563],\r\n            [0.030011322219859, 0.011873803320018],\r\n            [0.029972304660138, 0.011971951387578],\r\n            [0.029932966121114, 0.012069971245157],\r\n            [0.029893307024070, 0.012167861843041],\r\n            [0.029853327793724, 0.012265622132901],\r\n            [0.029813028858222, 0.012363251067801],\r\n            [0.029772410649132, 0.012460747602215],\r\n            [0.029731473601443, 0.012558110692033],\r\n            [0.029690218153558, 0.012655339294575],\r\n            [0.029648644747289, 0.012752432368600],\r\n            [0.029606753827855, 0.012849388874320],\r\n            [0.029564545843872, 0.012946207773407],\r\n            [0.029522021247356, 0.013042888029011],\r\n            [0.029479180493710, 0.013139428605762],\r\n            [0.029436024041725, 0.013235828469789],\r\n            [0.029392552353570, 0.013332086588727],\r\n            [0.029348765894794, 0.013428201931728],\r\n            [0.029304665134313, 0.013524173469475],\r\n            [0.029260250544412, 0.013620000174189],\r\n            [0.029215522600735, 0.013715681019643],\r\n            [0.029170481782283, 0.013811214981173],\r\n            [0.029125128571406, 0.013906601035686],\r\n            [0.029079463453801, 0.014001838161674],\r\n            [0.029033486918505, 0.014096925339225],\r\n            [0.028987199457889, 0.014191861550031],\r\n            [0.028940601567655, 0.014286645777401],\r\n            [0.028893693746829, 0.014381277006273],\r\n            [0.028846476497755, 0.014475754223221],\r\n            [0.028798950326094, 0.014570076416472],\r\n            [0.028751115740811, 0.014664242575910],\r\n            [0.028702973254178, 0.014758251693091],\r\n            [0.028654523381760, 0.014852102761253],\r\n            [0.028605766642418, 0.014945794775326],\r\n            [0.028556703558297, 0.015039326731945],\r\n            [0.028507334654823, 0.015132697629457],\r\n            [0.028457660460698, 0.015225906467935],\r\n            [0.028407681507891, 0.015318952249187],\r\n            [0.028357398331639, 0.015411833976768],\r\n            [0.028306811470432, 0.015504550655988],\r\n            [0.028255921466016, 0.015597101293927],\r\n            [0.028204728863381, 0.015689484899442],\r\n            [0.028153234210760, 0.015781700483179],\r\n            [0.028101438059619, 0.015873747057582],\r\n            [0.028049340964652, 0.015965623636907],\r\n            [0.027996943483779, 0.016057329237229],\r\n            [0.027944246178133, 0.016148862876456],\r\n            [0.027891249612061, 0.016240223574335],\r\n            [0.027837954353113, 0.016331410352467],\r\n            [0.027784360972039, 0.016422422234315],\r\n            [0.027730470042780, 0.016513258245214],\r\n            [0.027676282142466, 0.016603917412384],\r\n            [0.027621797851405, 0.016694398764938],\r\n            [0.027567017753080, 0.016784701333894],\r\n            [0.027511942434143, 0.016874824152183],\r\n            [0.027456572484404, 0.016964766254662],\r\n            [0.027400908496833, 0.017054526678124],\r\n            [0.027344951067546, 0.017144104461307],\r\n            [0.027288700795801, 0.017233498644904],\r\n            [0.027232158283994, 0.017322708271577],\r\n            [0.027175324137651, 0.017411732385960],\r\n            [0.027118198965418, 0.017500570034678],\r\n            [0.027060783379060, 0.017589220266351],\r\n            [0.027003077993454, 0.017677682131607],\r\n            [0.026945083426576, 0.017765954683088],\r\n            [0.026886800299502, 0.017854036975468],\r\n            [0.026828229236397, 0.017941928065456],\r\n            [0.026769370864511, 0.018029627011808],\r\n            [0.026710225814170, 0.018117132875340],\r\n            [0.026650794718768, 0.018204444718934],\r\n            [0.026591078214767, 0.018291561607551],\r\n            [0.026531076941680, 0.018378482608238],\r\n            [0.026470791542075, 0.018465206790142],\r\n            [0.026410222661558, 0.018551733224515],\r\n            [0.026349370948775, 0.018638060984730],\r\n            [0.026288237055398, 0.018724189146286],\r\n            [0.026226821636121, 0.018810116786819],\r\n            [0.026165125348656, 0.018895842986112],\r\n            [0.026103148853718, 0.018981366826109],\r\n            [0.026040892815028, 0.019066687390916],\r\n            [0.025978357899296, 0.019151803766819],\r\n            [0.025915544776223, 0.019236715042290],\r\n            [0.025852454118485, 0.019321420307998],\r\n            [0.025789086601733, 0.019405918656817],\r\n            [0.025725442904582, 0.019490209183837],\r\n            [0.025661523708606, 0.019574290986376],\r\n            [0.025597329698327, 0.019658163163984],\r\n            [0.025532861561211, 0.019741824818458],\r\n            [0.025468119987662, 0.019825275053848],\r\n            [0.025403105671008, 0.019908512976470],\r\n            [0.025337819307501, 0.019991537694913],\r\n            [0.025272261596305, 0.020074348320047],\r\n            [0.025206433239491, 0.020156943965039],\r\n            [0.025140334942028, 0.020239323745355],\r\n            [0.025073967411776, 0.020321486778774],\r\n            [0.025007331359476, 0.020403432185395],\r\n            [0.024940427498748, 0.020485159087650],\r\n            [0.024873256546079, 0.020566666610309],\r\n            [0.024805819220816, 0.020647953880491],\r\n            [0.024738116245157, 0.020729020027676],\r\n            [0.024670148344147, 0.020809864183709],\r\n            [0.024601916245669, 0.020890485482816],\r\n            [0.024533420680433, 0.020970883061607],\r\n            [0.024464662381971, 0.021051056059087],\r\n            [0.024395642086630, 0.021131003616670],\r\n            [0.024326360533561, 0.021210724878181],\r\n            [0.024256818464715, 0.021290218989868],\r\n            [0.024187016624830, 0.021369485100415],\r\n            [0.024116955761430, 0.021448522360944],\r\n            [0.024046636624808, 0.021527329925030],\r\n            [0.023976059968027, 0.021605906948708],\r\n            [0.023905226546906, 0.021684252590480],\r\n            [0.023834137120014, 0.021762366011328],\r\n            [0.023762792448662, 0.021840246374720],\r\n            [0.023691193296893, 0.021917892846620],\r\n            [0.023619340431478, 0.021995304595495],\r\n            [0.023547234621902, 0.022072480792330],\r\n            [0.023474876640361, 0.022149420610628],\r\n            [0.023402267261751, 0.022226123226426],\r\n            [0.023329407263659, 0.022302587818300],\r\n            [0.023256297426359, 0.022378813567377],\r\n            [0.023182938532797, 0.022454799657339],\r\n            [0.023109331368588, 0.022530545274437],\r\n            [0.023035476722006, 0.022606049607496],\r\n            [0.022961375383975, 0.022681311847926],\r\n            [0.022887028148061, 0.022756331189727],\r\n            [0.022812435810462, 0.022831106829504],\r\n            [0.022737599170003, 0.022905637966469],\r\n            [0.022662519028125, 0.022979923802453],\r\n            [0.022587196188874, 0.023053963541915],\r\n            [0.022511631458899, 0.023127756391950],\r\n            [0.022435825647437, 0.023201301562294],\r\n            [0.022359779566306, 0.023274598265338],\r\n            [0.022283494029900, 0.023347645716133],\r\n            [0.022206969855176, 0.023420443132400],\r\n            [0.022130207861645, 0.023492989734537],\r\n            [0.022053208871367, 0.023565284745628],\r\n            [0.021975973708940, 0.023637327391451],\r\n            [0.021898503201489, 0.023709116900488],\r\n            [0.021820798178663, 0.023780652503931],\r\n            [0.021742859472618, 0.023851933435691],\r\n            [0.021664687918017, 0.023922958932406],\r\n            [0.021586284352013, 0.023993728233451],\r\n            [0.021507649614247, 0.024064240580942],\r\n            [0.021428784546832, 0.024134495219750],\r\n            [0.021349689994350, 0.024204491397504],\r\n            [0.021270366803840, 0.024274228364600],\r\n            [0.021190815824791, 0.024343705374213],\r\n            [0.021111037909128, 0.024412921682298],\r\n            [0.021031033911210, 0.024481876547605],\r\n            [0.020950804687815, 0.024550569231683],\r\n            [0.020870351098134, 0.024618998998889],\r\n            [0.020789674003759, 0.024687165116394],\r\n            [0.020708774268678, 0.024755066854194],\r\n            [0.020627652759262, 0.024822703485116],\r\n            [0.020546310344257, 0.024890074284826],\r\n            [0.020464747894775, 0.024957178531837],\r\n            [0.020382966284284, 0.025024015507516],\r\n            [0.020300966388600, 0.025090584496093],\r\n            [0.020218749085876, 0.025156884784668],\r\n            [0.020136315256592, 0.025222915663218],\r\n            [0.020053665783549, 0.025288676424605],\r\n            [0.019970801551857, 0.025354166364584],\r\n            [0.019887723448925, 0.025419384781811],\r\n            [0.019804432364452, 0.025484330977848],\r\n            [0.019720929190419, 0.025549004257175],\r\n            [0.019637214821078, 0.025613403927192],\r\n            [0.019553290152943, 0.025677529298230],\r\n            [0.019469156084779, 0.025741379683559],\r\n            [0.019384813517595, 0.025804954399392],\r\n            [0.019300263354632, 0.025868252764895],\r\n            [0.019215506501354, 0.025931274102193],\r\n            [0.019130543865439, 0.025994017736379],\r\n            [0.019045376356769, 0.026056482995518],\r\n            [0.018960004887419, 0.026118669210657],\r\n            [0.018874430371648, 0.026180575715833],\r\n            [0.018788653725892, 0.026242201848076],\r\n            [0.018702675868750, 0.026303546947421],\r\n            [0.018616497720974, 0.026364610356909],\r\n            [0.018530120205464, 0.026425391422602],\r\n            [0.018443544247254, 0.026485889493583],\r\n            [0.018356770773502, 0.026546103921965],\r\n            [0.018269800713483, 0.026606034062902],\r\n            [0.018182634998576, 0.026665679274589],\r\n            [0.018095274562256, 0.026725038918274],\r\n            [0.018007720340083, 0.026784112358263],\r\n            [0.017919973269692, 0.026842898961926],\r\n            [0.017832034290785, 0.026901398099707],\r\n            [0.017743904345116, 0.026959609145127],\r\n            [0.017655584376488, 0.027017531474792],\r\n            [0.017567075330734, 0.027075164468401],\r\n            [0.017478378155718, 0.027132507508750],\r\n            [0.017389493801313, 0.027189559981742],\r\n            [0.017300423219401, 0.027246321276391],\r\n            [0.017211167363854, 0.027302790784828],\r\n            [0.017121727190533, 0.027358967902310],\r\n            [0.017032103657269, 0.027414852027226],\r\n            [0.016942297723858, 0.027470442561102],\r\n            [0.016852310352050, 0.027525738908608],\r\n            [0.016762142505537, 0.027580740477564],\r\n            [0.016671795149944, 0.027635446678948],\r\n            [0.016581269252819, 0.027689856926900],\r\n            [0.016490565783622, 0.027743970638730],\r\n            [0.016399685713714, 0.027797787234924],\r\n            [0.016308630016347, 0.027851306139149],\r\n            [0.016217399666655, 0.027904526778260],\r\n            [0.016125995641641, 0.027957448582309],\r\n            [0.016034418920170, 0.028010070984544],\r\n            [0.015942670482954, 0.028062393421421],\r\n            [0.015850751312545, 0.028114415332610],\r\n            [0.015758662393324, 0.028166136160998],\r\n            [0.015666404711489, 0.028217555352697],\r\n            [0.015573979255046, 0.028268672357047],\r\n            [0.015481387013797, 0.028319486626627],\r\n            [0.015388628979331, 0.028369997617257],\r\n            [0.015295706145012, 0.028420204788004],\r\n            [0.015202619505968, 0.028470107601191],\r\n            [0.015109370059084, 0.028519705522399],\r\n            [0.015015958802984, 0.028568998020472],\r\n            [0.014922386738030, 0.028617984567529],\r\n            [0.014828654866302, 0.028666664638963],\r\n            [0.014734764191593, 0.028715037713449],\r\n            [0.014640715719398, 0.028763103272951],\r\n            [0.014546510456900, 0.028810860802724],\r\n            [0.014452149412962, 0.028858309791325],\r\n            [0.014357633598114, 0.028905449730613],\r\n            [0.014262964024545, 0.028952280115756],\r\n            [0.014168141706090, 0.028998800445240],\r\n            [0.014073167658220, 0.029045010220868],\r\n            [0.013978042898030, 0.029090908947771],\r\n            [0.013882768444231, 0.029136496134411],\r\n            [0.013787345317136, 0.029181771292585],\r\n            [0.013691774538648, 0.029226733937433],\r\n            [0.013596057132255, 0.029271383587441],\r\n            [0.013500194123014, 0.029315719764447],\r\n            [0.013404186537539, 0.029359741993647],\r\n            [0.013308035403995, 0.029403449803598],\r\n            [0.013211741752084, 0.029446842726223],\r\n            [0.013115306613032, 0.029489920296820],\r\n            [0.013018731019584, 0.029532682054063],\r\n            [0.012922016005985, 0.029575127540008],\r\n            [0.012825162607977, 0.029617256300097],\r\n            [0.012728171862781, 0.029659067883165],\r\n            [0.012631044809089, 0.029700561841444],\r\n            [0.012533782487056, 0.029741737730567],\r\n            [0.012436385938281, 0.029782595109573],\r\n            [0.012338856205805, 0.029823133540913],\r\n            [0.012241194334091, 0.029863352590452],\r\n            [0.012143401369021, 0.029903251827477],\r\n            [0.012045478357878, 0.029942830824699],\r\n            [0.011947426349339, 0.029982089158259],\r\n            [0.011849246393462, 0.030021026407731],\r\n            [0.011750939541676, 0.030059642156129],\r\n            [0.011652506846768, 0.030097935989909],\r\n            [0.011553949362874, 0.030135907498976],\r\n            [0.011455268145464, 0.030173556276684],\r\n            [0.011356464251335, 0.030210881919845],\r\n            [0.011257538738598, 0.030247884028732],\r\n            [0.011158492666665, 0.030284562207083],\r\n            [0.011059327096240, 0.030320916062102],\r\n            [0.010960043089307, 0.030356945204470],\r\n            [0.010860641709118, 0.030392649248343],\r\n            [0.010761124020182, 0.030428027811361],\r\n            [0.010661491088253, 0.030463080514646],\r\n            [0.010561743980319, 0.030497806982812],\r\n            [0.010461883764593, 0.030532206843968],\r\n            [0.010361911510496, 0.030566279729717],\r\n            [0.010261828288652, 0.030600025275167],\r\n            [0.010161635170872, 0.030633443118931],\r\n            [0.010061333230142, 0.030666532903129],\r\n            [0.009960923540617, 0.030699294273397],\r\n            [0.009860407177603, 0.030731726878888],\r\n            [0.009759785217550, 0.030763830372273],\r\n            [0.009659058738038, 0.030795604409750],\r\n            [0.009558228817767, 0.030827048651045],\r\n            [0.009457296536545, 0.030858162759415],\r\n            [0.009356262975275, 0.030888946401653],\r\n            [0.009255129215945, 0.030919399248091],\r\n            [0.009153896341616, 0.030949520972603],\r\n            [0.009052565436412, 0.030979311252611],\r\n            [0.008951137585505, 0.031008769769084],\r\n            [0.008849613875105, 0.031037896206544],\r\n            [0.008747995392451, 0.031066690253072],\r\n            [0.008646283225794, 0.031095151600306],\r\n            [0.008544478464390, 0.031123279943448],\r\n            [0.008442582198486, 0.031151074981266],\r\n            [0.008340595519310, 0.031178536416098],\r\n            [0.008238519519057, 0.031205663953853],\r\n            [0.008136355290878, 0.031232457304017],\r\n            [0.008034103928871, 0.031258916179656],\r\n            [0.007931766528065, 0.031285040297416],\r\n            [0.007829344184412, 0.031310829377528],\r\n            [0.007726837994772, 0.031336283143813],\r\n            [0.007624249056906, 0.031361401323680],\r\n            [0.007521578469457, 0.031386183648135],\r\n            [0.007418827331946, 0.031410629851778],\r\n            [0.007315996744755, 0.031434739672811],\r\n            [0.007213087809115, 0.031458512853036],\r\n            [0.007110101627101, 0.031481949137863],\r\n            [0.007007039301610, 0.031505048276306],\r\n            [0.006903901936357, 0.031527810020993],\r\n            [0.006800690635862, 0.031550234128164],\r\n            [0.006697406505433, 0.031572320357675],\r\n            [0.006594050651161, 0.031594068473000],\r\n            [0.006490624179905, 0.031615478241233],\r\n            [0.006387128199278, 0.031636549433095],\r\n            [0.006283563817639, 0.031657281822929],\r\n            [0.006179932144080, 0.031677675188707],\r\n            [0.006076234288412, 0.031697729312034],\r\n            [0.005972471361157, 0.031717443978146],\r\n            [0.005868644473532, 0.031736818975914],\r\n            [0.005764754737440, 0.031755854097848],\r\n            [0.005660803265456, 0.031774549140098],\r\n            [0.005556791170816, 0.031792903902453],\r\n            [0.005452719567407, 0.031810918188350],\r\n            [0.005348589569753, 0.031828591804869],\r\n            [0.005244402293001, 0.031845924562742],\r\n            [0.005140158852914, 0.031862916276347],\r\n            [0.005035860365855, 0.031879566763717],\r\n            [0.004931507948778, 0.031895875846539],\r\n            [0.004827102719212, 0.031911843350155],\r\n            [0.004722645795254, 0.031927469103567],\r\n            [0.004618138295554, 0.031942752939435],\r\n            [0.004513581339303, 0.031957694694082],\r\n            [0.004408976046222, 0.031972294207493],\r\n            [0.004304323536549, 0.031986551323320],\r\n            [0.004199624931030, 0.032000465888879],\r\n            [0.004094881350902, 0.032014037755158],\r\n            [0.003990093917884, 0.032027266776813],\r\n            [0.003885263754166, 0.032040152812170],\r\n            [0.003780391982394, 0.032052695723232],\r\n            [0.003675479725661, 0.032064895375674],\r\n            [0.003570528107494, 0.032076751638847],\r\n            [0.003465538251839, 0.032088264385780],\r\n            [0.003360511283053, 0.032099433493181],\r\n            [0.003255448325892, 0.032110258841438],\r\n            [0.003150350505494, 0.032120740314619],\r\n            [0.003045218947373, 0.032130877800478],\r\n            [0.002940054777404, 0.032140671190449],\r\n            [0.002834859121810, 0.032150120379653],\r\n            [0.002729633107153, 0.032159225266897],\r\n            [0.002624377860318, 0.032167985754674],\r\n            [0.002519094508504, 0.032176401749168],\r\n            [0.002413784179212, 0.032184473160250],\r\n            [0.002308448000231, 0.032192199901481],\r\n            [0.002203087099626, 0.032199581890114],\r\n            [0.002097702605728, 0.032206619047093],\r\n            [0.001992295647121, 0.032213311297057],\r\n            [0.001886867352628, 0.032219658568338],\r\n            [0.001781418851302, 0.032225660792960],\r\n            [0.001675951272410, 0.032231317906644],\r\n            [0.001570465745428, 0.032236629848809],\r\n            [0.001464963400018, 0.032241596562566],\r\n            [0.001359445366028, 0.032246217994727],\r\n            [0.001253912773470, 0.032250494095799],\r\n            [0.001148366752513, 0.032254424819990],\r\n            [0.001042808433471, 0.032258010125204],\r\n            [0.000937238946789, 0.032261249973045],\r\n            [0.000831659423030, 0.032264144328817],\r\n            [0.000726070992868, 0.032266693161525],\r\n            [0.000620474787068, 0.032268896443871],\r\n            [0.000514871936481, 0.032270754152261],\r\n            [0.000409263572030, 0.032272266266801],\r\n            [0.000303650824695, 0.032273432771295],\r\n            [0.000198034825504, 0.032274253653254],\r\n            [0.000092416705518, 0.032274728903884]\r\n        ];\r\n    \r\n        var MDCT_TABLE_240 = [\r\n            [0.091286604111815, 0.000298735779793],\r\n            [0.091247502481454, 0.002688238127538],\r\n            [0.091145864370807, 0.005075898091152],\r\n            [0.090981759437558, 0.007460079287760],\r\n            [0.090755300151030, 0.009839147718664],\r\n            [0.090466641715108, 0.012211472889198],\r\n            [0.090115981961863, 0.014575428926191],\r\n            [0.089703561215976, 0.016929395692256],\r\n            [0.089229662130024, 0.019271759896156],\r\n            [0.088694609490769, 0.021600916198470],\r\n            [0.088098769996564, 0.023915268311810],\r\n            [0.087442552006035, 0.026213230094844],\r\n            [0.086726405258214, 0.028493226639351],\r\n            [0.085950820564309, 0.030753695349588],\r\n            [0.085116329471329, 0.032993087013213],\r\n            [0.084223503897785, 0.035209866863042],\r\n            [0.083272955741727, 0.037402515628894],\r\n            [0.082265336461381, 0.039569530578832],\r\n            [0.081201336628670, 0.041709426549053],\r\n            [0.080081685455930, 0.043820736961749],\r\n            [0.078907150296148, 0.045902014830227],\r\n            [0.077678536117054, 0.047951833750597],\r\n            [0.076396684949434, 0.049968788879362],\r\n            [0.075062475310050, 0.051951497896226],\r\n            [0.073676821599542, 0.053898601951466],\r\n            [0.072240673475749, 0.055808766597225],\r\n            [0.070755015202858, 0.057680682702068],\r\n            [0.069220864976840, 0.059513067348201],\r\n            [0.067639274227625, 0.061304664710718],\r\n            [0.066011326898512, 0.063054246918278],\r\n            [0.064338138703282, 0.064760614894630],\r\n            [0.062620856361546, 0.066422599180399],\r\n            [0.060860656812842, 0.068039060734572],\r\n            [0.059058746410016, 0.069608891715145],\r\n            [0.057216360092450, 0.071131016238378],\r\n            [0.055334760539699, 0.072604391116154],\r\n            [0.053415237306106, 0.074028006570930],\r\n            [0.051459105937014, 0.075400886927784],\r\n            [0.049467707067153, 0.076722091283096],\r\n            [0.047442405501835, 0.077990714149396],\r\n            [0.045384589281588, 0.079205886075941],\r\n            [0.043295668730857, 0.080366774244592],\r\n            [0.041177075491445, 0.081472583040586],\r\n            [0.039030261541332, 0.082522554597810],\r\n            [0.036856698199564, 0.083515969318206],\r\n            [0.034657875117883, 0.084452146364948],\r\n            [0.032435299259796, 0.085330444129049],\r\n            [0.030190493867775, 0.086150260669096],\r\n            [0.027924997419306, 0.086911034123781],\r\n            [0.025640362572491, 0.087612243096981],\r\n            [0.023338155101933, 0.088253407015092],\r\n            [0.021019952825636, 0.088834086456390],\r\n            [0.018687344523641, 0.089353883452193],\r\n            [0.016341928849164, 0.089812441759604],\r\n            [0.013985313232951, 0.090209447105664],\r\n            [0.011619112781631, 0.090544627402740],\r\n            [0.009244949170797, 0.090817752935000],\r\n            [0.006864449533597, 0.091028636515846],\r\n            [0.004479245345574, 0.091177133616206],\r\n            [0.002090971306534, 0.091263142463585]\r\n        ];\r\n    \r\n        var SWB_OFFSET_1024_96 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  36,  40,  44,  48,  52,  56,  64,\r\n            72,  80,  88,  96, 108, 120, 132, 144,\r\n            156, 172, 188, 212, 240, 276, 320, 384,\r\n            448, 512, 576, 640, 704, 768, 832, 896,\r\n            960, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_96 = new Uint16Array([\r\n            0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_64 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  36,  40,  44,  48,  52,  56,  64,\r\n            72,  80,  88, 100, 112, 124, 140, 156,\r\n            172, 192, 216, 240, 268, 304, 344, 384,\r\n            424, 464, 504, 544, 584, 624, 664, 704,\r\n            744, 784, 824, 864, 904, 944, 984, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_64 = new Uint16Array([\r\n            0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_48 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  36,  40,  48,  56,  64,  72,  80,\r\n            88,  96, 108, 120, 132, 144, 160, 176,\r\n            196, 216, 240, 264, 292, 320, 352, 384,\r\n            416, 448, 480, 512, 544, 576, 608, 640,\r\n            672, 704, 736, 768, 800, 832, 864, 896,\r\n            928, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_48 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  28,  36,\r\n            44,  56,  68,  80,  96, 112, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_32 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  36,  40,  48,  56,  64,  72,  80,\r\n            88,  96, 108, 120, 132, 144, 160, 176,\r\n            196, 216, 240, 264, 292, 320, 352, 384,\r\n            416, 448, 480, 512, 544, 576, 608, 640,\r\n            672, 704, 736, 768, 800, 832, 864, 896,\r\n            928, 960, 992, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_24 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  36,  40,  44,  52,  60,  68,  76,\r\n            84,  92, 100, 108, 116, 124, 136, 148,\r\n            160, 172, 188, 204, 220, 240, 260, 284,\r\n            308, 336, 364, 396, 432, 468, 508, 552,\r\n            600, 652, 704, 768, 832, 896, 960, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_24 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            36,  44,  52,  64,  76,  92, 108, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_16 = new Uint16Array([\r\n            0,   8,  16,  24,  32,  40,  48,  56,\r\n            64,  72,  80,  88, 100, 112, 124, 136,\r\n            148, 160, 172, 184, 196, 212, 228, 244,\r\n            260, 280, 300, 320, 344, 368, 396, 424,\r\n            456, 492, 532, 572, 616, 664, 716, 772,\r\n            832, 896, 960, 1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_16 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            32,  40,  48,  60,  72,  88, 108, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024_8 = new Uint16Array([\r\n            0,  12,  24,  36,  48,  60,  72,  84,\r\n            96, 108, 120, 132, 144, 156, 172, 188,\r\n            204, 220, 236, 252, 268, 288, 308, 328,\r\n            348, 372, 396, 420, 448, 476, 508, 544,\r\n            580, 620, 664, 712, 764, 820, 880, 944,\r\n            1024\r\n        ]);\r\n    \r\n        var SWB_OFFSET_128_8 = new Uint16Array([\r\n            0,   4,   8,  12,  16,  20,  24,  28,\r\n            36,  44,  52,  60,  72,  88, 108, 128\r\n        ]);\r\n    \r\n        var SWB_OFFSET_1024 = [\r\n            SWB_OFFSET_1024_96,\r\n            SWB_OFFSET_1024_96,\r\n            SWB_OFFSET_1024_64,\r\n            SWB_OFFSET_1024_48,\r\n            SWB_OFFSET_1024_48,\r\n            SWB_OFFSET_1024_32,\r\n            SWB_OFFSET_1024_24,\r\n            SWB_OFFSET_1024_24,\r\n            SWB_OFFSET_1024_16,\r\n            SWB_OFFSET_1024_16,\r\n            SWB_OFFSET_1024_16,\r\n            SWB_OFFSET_1024_8\r\n        ];\r\n    \r\n        var SWB_OFFSET_128 = [\r\n            SWB_OFFSET_128_96,\r\n            SWB_OFFSET_128_96,\r\n            SWB_OFFSET_128_64,\r\n            SWB_OFFSET_128_48,\r\n            SWB_OFFSET_128_48,\r\n            SWB_OFFSET_128_48,\r\n            SWB_OFFSET_128_24,\r\n            SWB_OFFSET_128_24,\r\n            SWB_OFFSET_128_16,\r\n            SWB_OFFSET_128_16,\r\n            SWB_OFFSET_128_16,\r\n            SWB_OFFSET_128_8\r\n        ];\r\n    \r\n        var SWB_SHORT_WINDOW_COUNT = new Uint8Array([\r\n            12, 12, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15\r\n        ]);\r\n    \r\n        var SWB_LONG_WINDOW_COUNT = new Uint8Array([\r\n            41, 41, 47, 49, 49, 51, 47, 47, 43, 43, 43, 40\r\n        ]);\r\n    \r\n        /*\r\n         * Scalefactor lookup table\r\n         */\r\n        var SCALEFACTOR_TABLE = (function() {\r\n            var table = new Float32Array(428);\r\n    \r\n            for (var i = 0; i < 428; i++) {\r\n                table[i] = Math.pow(2, (i - 200) / 4);\r\n            }\r\n    \r\n            return table;\r\n        })();\r\n    \r\n    \r\n        /**\r\n         * Inverse quantization lookup table\r\n         */\r\n        var IQ_TABLE = (function() {\r\n            var table = new Float32Array(8191),\r\n                four_thirds = 4/3;\r\n    \r\n            for (var i = 0; i < 8191; i++) {\r\n                table[i] = Math.pow(i, four_thirds);\r\n            }\r\n    \r\n            return table;\r\n        })();\r\n    \r\n        var SAMPLE_RATES = new Int32Array([\r\n            96000, 88200, 64000, 48000, 44100, 32000,\r\n            24000, 22050, 16000, 12000, 11025, 8000, 7350\r\n        ]);\r\n    \r\n        // Temporal Noise Shaping\r\n        var TNS = (function(){\r\n            function TNS(config) {\r\n                this.maxBands = TNS_MAX_BANDS_1024[config.sampleIndex]\r\n                this.nFilt = new Int32Array(8);\r\n                this.length = new Array(8);\r\n                this.direction = new Array(8);\r\n                this.order = new Array(8);\r\n                this.coef = new Array(8);\r\n    \r\n                // Probably could allocate these as needed\r\n                for (var w = 0; w < 8; w++) {\r\n                    this.length[w] = new Int32Array(4);\r\n                    this.direction[w] = new Array(4);\r\n                    this.order[w] = new Int32Array(4);\r\n                    this.coef[w] = new Array(4);\r\n    \r\n                    for (var filt = 0; filt < 4; filt++) {\r\n                        this.coef[w][filt] = new Float32Array(TNS_MAX_ORDER);\r\n                    }\r\n                }\r\n    \r\n                this.lpc = new Float32Array(TNS_MAX_ORDER);\r\n                this.tmp = new Float32Array(TNS_MAX_ORDER);\r\n            }\r\n    \r\n            var TNS_MAX_ORDER = 20,\r\n                SHORT_BITS = [1, 4, 3],\r\n                LONG_BITS = [2, 6, 5];\r\n    \r\n            var TNS_COEF_1_3 = [0.00000000, -0.43388373, 0.64278758, 0.34202015],\r\n    \r\n                TNS_COEF_0_3 = [0.00000000, -0.43388373, -0.78183150, -0.97492790,\r\n                    0.98480773, 0.86602539, 0.64278758, 0.34202015],\r\n    \r\n                TNS_COEF_1_4 = [0.00000000, -0.20791170, -0.40673664, -0.58778524,\r\n                    0.67369562, 0.52643216, 0.36124167, 0.18374951],\r\n    \r\n                TNS_COEF_0_4 = [0.00000000, -0.20791170, -0.40673664, -0.58778524,\r\n                    -0.74314481, -0.86602539, -0.95105654, -0.99452192,\r\n                    0.99573416, 0.96182561, 0.89516330, 0.79801720,\r\n                    0.67369562, 0.52643216, 0.36124167, 0.18374951],\r\n    \r\n                TNS_TABLES = [TNS_COEF_0_3, TNS_COEF_0_4, TNS_COEF_1_3, TNS_COEF_1_4];\r\n    \r\n            var TNS_MAX_BANDS_1024 = [31, 31, 34, 40, 42, 51, 46, 46, 42, 42, 42, 39, 39],\r\n                TNS_MAX_BANDS_128 = [9, 9, 10, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14];\r\n    \r\n            TNS.prototype.decode = function(stream, info) {\r\n                var windowCount = info.windowCount,\r\n                    bits = info.windowSequence === 2 ? SHORT_BITS : LONG_BITS;\r\n    \r\n                for (var w = 0; w < windowCount; w++) {\r\n                    if (this.nFilt[w] = stream.read(bits[0])) {\r\n                        var coefRes = stream.read(1),\r\n                            nFilt_w = this.nFilt[w],\r\n                            length_w = this.length[w],\r\n                            order_w = this.order[w],\r\n                            direction_w = this.direction[w],\r\n                            coef_w = this.coef[w];\r\n    \r\n                        for (var filt = 0; filt < nFilt_w; filt++) {\r\n                            length_w[filt] = stream.read(bits[1]);\r\n    \r\n                            if ((order_w[filt] = stream.read(bits[2])) > 20)\r\n                                throw new Error(\"TNS filter out of range: \" + order_w[filt]);\r\n    \r\n                            if (order_w[filt]) {\r\n                                direction_w[filt] = !!stream.read(1);\r\n                                var coefCompress = stream.read(1),\r\n                                    coefLen = coefRes + 3 - coefCompress,\r\n                                    tmp = 2 * coefCompress + coefRes,\r\n                                    table = TNS_TABLES[tmp],\r\n                                    order_w_filt = order_w[filt],\r\n                                    coef_w_filt = coef_w[filt];\r\n    \r\n                                for (var i = 0; i < order_w_filt; i++)\r\n                                    coef_w_filt[i] = table[stream.read(coefLen)];\r\n                            }\r\n    \r\n                        }\r\n                    }\r\n                }\r\n            };\r\n    \r\n            TNS.prototype.process = function(ics, data, decode) {\r\n                var mmm = Math.min(this.maxBands, ics.maxSFB),\r\n                    lpc = this.lpc,\r\n                    tmp = this.tmp,\r\n                    info = ics.info,\r\n                    windowCount = info.windowCount;\r\n    \r\n                for (var w = 0; w < windowCount; w++) {\r\n                    var bottom = info.swbCount,\r\n                        nFilt_w = this.nFilt[w],\r\n                        length_w = this.length[w],\r\n                        order_w = this.order[w],\r\n                        coef_w = this.coef[w],\r\n                        direction_w = this.direction[w];\r\n    \r\n                    for (var filt = 0; filt < nFilt_w; filt++) {\r\n                        var top = bottom,\r\n                            bottom = Math.max(0, tmp - length_w[filt]),\r\n                            order = order_w[filt];\r\n    \r\n                        if (order === 0) continue;\r\n    \r\n                        // calculate lpc coefficients\r\n                        var autoc = coef_w[filt];\r\n                        for (var i = 0; i < order; i++) {\r\n                            var r = -autoc[i];\r\n                            lpc[i] = r;\r\n    \r\n                            for (var j = 0, len = (i + 1) >> 1; j < len; j++) {\r\n                                var f = lpc[j],\r\n                                    b = lpc[i - 1 - j];\r\n    \r\n                                lpc[j] = f + r * b;\r\n                                lpc[i - 1 - j] = b + r * f;\r\n                            }\r\n                        }\r\n    \r\n                        var start = info.swbOffsets[Math.min(bottom, mmm)],\r\n                            end = info.swbOffsets[Math.min(top, mmm)],\r\n                            size,\r\n                            inc = 1;\r\n    \r\n                        if ((size = end - start) <= 0) continue;\r\n    \r\n                        if (direction_w[filt]) {\r\n                            inc = -1;\r\n                            start = end - 1;\r\n                        }\r\n    \r\n                        start += w * 128;\r\n    \r\n                        if (decode) {\r\n                            // ar filter\r\n                            for (var m = 0; m < size; m++, start += inc) {\r\n                                for (var i = 1; i <= Math.min(m, order); i++) {\r\n                                    data[start] -= data[start - i * inc] * lpc[i - 1];\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // ma filter\r\n                            for (var m = 0; m < size; m++, start += inc) {\r\n                                tmp[0] = data[start];\r\n    \r\n                                for (var i = 1; i <= Math.min(m, order); i++)\r\n                                    data[start] += tmp[i] * lpc[i - 1];\r\n    \r\n                                for (var i = order; i > 0; i--)\r\n                                    tmp[i] = tmp[i - 1];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n    \r\n            return TNS;\r\n        })();\r\n    })(gwin);\r\n}\r\n"]}