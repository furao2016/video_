{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Manager/assets\\Scripts\\Manager\\lottery_viewCtrManager.js"],"names":["require","moduleEnum","ViewCtrManager","OpenModuleDic","openModuleStack","ViewComponentManager","getInstance","RegisterClosePanelEvent","OnViewCloseMessageHandle","bind","name","Close","ctr","moduleName","openStatus","None","index","indexOf","splice","NeedHide","i","length","element","push","HideOther","pop","_ctr","Open","SingletonBase"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;eAEuBA,QAAQ,aAAR;IAAfC,sBAAAA;AACR;;;IACqBC;;;AACjB,8BAAc;AAAA;;AAAA;;AAAA,cASdC,aATc,GASE,EATF;AAAA,cAUdC,eAVc,GAUI,EAVJ;;AAEVC,+CAAqBC,WAArB,GAAmCC,uBAAnC,CAA2D,MAAKC,wBAAL,CAA8BC,IAA9B,OAA3D,EAAqG,iBAArG;AAFU;AAGb;;;;iDAUwBC,MAAM;AAC3B,iBAAKP,aAAL,CAAmBO,IAAnB,KAA4B,KAAKP,aAAL,CAAmBO,IAAnB,EAAyBC,KAAzB,EAA5B;AACH;;;mCAEUC,KAAK;AACZ,iBAAKT,aAAL,CAAmBS,IAAIC,UAAvB,IAAqCD,GAArC;AACH;;;sCACaA,KAAK;AACf,iBAAKT,aAAL,CAAmBS,IAAIC,UAAvB,KAAsC,OAAO,KAAKV,aAAL,CAAmBS,IAAIC,UAAvB,CAA7C;AACH;;;oCACWD,KAAK;AACb,gBAAIA,IAAIE,UAAJ,IAAkBb,WAAWc,IAAjC,EAAuC;AACvC;AACA,gBAAIC,QAAQ,KAAKZ,eAAL,CAAqBa,OAArB,CAA6BL,IAAIC,UAAjC,CAAZ;AACA,gBAAIG,SAAS,CAAb,EAAgB,KAAKZ,eAAL,CAAqBc,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;AAChB;AACA,gBAAIJ,IAAIE,UAAJ,KAAmBb,WAAWkB,QAAlC,EAA4C;AACxC,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKhB,eAAL,CAAqBiB,MAAzC,EAAiDD,GAAjD,EAAsD;AAClD,wBAAME,UAAU,KAAKlB,eAAL,CAAqBgB,CAArB,CAAhB;AACA,yBAAKjB,aAAL,CAAmBmB,OAAnB,EAA4BX,KAA5B;AACH;AACJ;AACD;AACA,iBAAKP,eAAL,CAAqBmB,IAArB,CAA0BX,IAAIC,UAA9B;AACH;;;qCACYD,KAAK;AACd,gBAAIA,IAAIE,UAAJ,KAAmBb,WAAWc,IAAlC,EAAwC;AACxC,gBAAIC,QAAQ,KAAKZ,eAAL,CAAqBa,OAArB,CAA6BL,IAAIC,UAAjC,CAAZ;AACA;AACA,gBAAID,IAAIE,UAAJ,KAAmBb,WAAWuB,SAA9B,IAA2CR,UAAU,KAAKZ,eAAL,CAAqBiB,MAArB,GAA8B,CAAvF,EAA0F;AACtF,qBAAKjB,eAAL,CAAqBqB,GAArB;AACA,oBAAIC,OAAO,IAAX;AACA,qBAAK,IAAIN,IAAI,KAAKhB,eAAL,CAAqBiB,MAArB,GAA8B,CAA3C,EAA8CD,KAAK,CAAnD,EAAsDA,GAAtD,EAA2D;AACvDM,2BAAO,KAAKvB,aAAL,CAAmB,KAAKC,eAAL,CAAqBgB,CAArB,CAAnB,CAAP;AACAM,yBAAKC,IAAL;AACA;AACA,wBAAID,KAAKZ,UAAL,KAAoBb,WAAWkB,QAAnC,EAA6C;AAChD;AACJ;AACJ;;;uCA/CqB;AAClB,mBAAO,IAAIjB,cAAJ,EAAP;AACH;;;;EARuC0B;;kBAAvB1B","file":"lottery_viewCtrManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Manager","sourcesContent":["import SingletonBase from \"../Singleton/SingletonBase\";\r\nimport ViewComponentManager from \"./lottery_viewComponentManager\";\r\n\r\nconst { moduleEnum } = require(\"ProjectEnum\")\r\n/**界面模块管理类，出来模块与模块之间的关联 */\r\nexport default class ViewCtrManager extends SingletonBase {\r\n    constructor() {\r\n        super()\r\n        ViewComponentManager.getInstance().RegisterClosePanelEvent(this.OnViewCloseMessageHandle.bind(this), \"viewCtrCloseTag\")\r\n    }\r\n\r\n    static _onNewObject() {\r\n        return new ViewCtrManager()\r\n    }\r\n\r\n    OpenModuleDic = {}\r\n    openModuleStack = []\r\n\r\n\r\n    OnViewCloseMessageHandle(name) {\r\n        this.OpenModuleDic[name] && this.OpenModuleDic[name].Close()\r\n    }\r\n\r\n    AddViewCtr(ctr) {\r\n        this.OpenModuleDic[ctr.moduleName] = ctr\r\n    }\r\n    RemoveViewCtr(ctr) {\r\n        this.OpenModuleDic[ctr.moduleName] && delete this.OpenModuleDic[ctr.moduleName]\r\n    }\r\n    OpenViewCtr(ctr) {\r\n        if (ctr.openStatus == moduleEnum.None) return;\r\n        //从栈中移除，防止重复入栈\r\n        let index = this.openModuleStack.indexOf(ctr.moduleName)\r\n        if (index >= 0) this.openModuleStack.splice(index, 1)\r\n        //需要隐藏其他模块\r\n        if (ctr.openStatus !== moduleEnum.NeedHide) {\r\n            for (let i = 0; i < this.openModuleStack.length; i++) {\r\n                const element = this.openModuleStack[i];\r\n                this.OpenModuleDic[element].Close()\r\n            }\r\n        }\r\n        //将打开的模块放入栈\r\n        this.openModuleStack.push(ctr.moduleName);\r\n    }\r\n    CloseViewCtr(ctr) {\r\n        if (ctr.openStatus === moduleEnum.None) return;\r\n        let index = this.openModuleStack.indexOf(ctr.moduleName)\r\n        //如果打开的是栈顶元素 并且打开模式是HideOther\r\n        if (ctr.openStatus === moduleEnum.HideOther && index === this.openModuleStack.length - 1) {\r\n            this.openModuleStack.pop();\r\n            let _ctr = null;\r\n            for (let i = this.openModuleStack.length - 1; i >= 0; i--) {\r\n                _ctr = this.OpenModuleDic[this.openModuleStack[i]]\r\n                _ctr.Open()\r\n                //当打开到需要隐藏其他模块的模块时，就停止\r\n                if (_ctr.openStatus !== moduleEnum.NeedHide) break;\r\n            }\r\n        }\r\n    }\r\n}"]}