{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Manager/assets\\Scripts\\Manager\\lottery_LanguageManager.js"],"names":["languageEnum","cc","Enum","none","cn","en","languageJSName","languageStr","languageNam","languageManager","curLanguageID","languageDic","changeEvent","LanguageEnum","url","BaseResLoad","getInstance","LoadByKey","err","text","JSON","parse","callEvent","key","eventCus","Event","EventCustom","systemEvent","dispatchEvent","lang","loadLanguage","tag","callback","self","bind","value","SingletonBase"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AAEA;AACA,IAAIA,eAAeC,GAAGC,IAAH,CAAQ;AACvBC,UAAM,CADiB;AAEvBC,QAAI,CAFmB,EAEjB;AACNC,QAAI,CAHmB,CAGjB;AAHiB,CAAR,CAAnB;;AAMA,IAAMC,iBAAiB,CAAC,IAAD,EAAO,MAAP,CAAvB,EAAqC;AACrC,IAAMC,cAAc,yBAApB,EAA6C;AAC7C,IAAMC,cAAc,CAAC,IAAD,EAAO,IAAP,CAApB;AACA;;IACqBC;;;AAQjB,+BAAc;AAAA;;AAAA;;AAAA,cANdC,aAMc,GANE,CAMF;AAAA,cALdC,WAKc,GALA,EAKA;AAAA,cAJdC,WAIc,GAJA,EAIA;AAAA,cAHdC,YAGc,GAHCb,YAGD;AAAA,cAFdQ,WAEc,GAFAA,WAEA;AAAA;AAEb;;;;uCAMc;AAAA;;AACX,gBAAIM,MAAMP,cAAcD,eAAe,KAAKI,aAAL,GAAqB,CAApC,CAAxB;AACAK,0CAAYC,WAAZ,GAA0BC,SAA1B,CAAoCX,eAAe,KAAKI,aAAL,GAAqB,CAApC,CAApC,EAA4EI,GAA5E,EAAiF,UAACI,GAAD,EAAMC,IAAN,EAAe;AAC5F,oBAAID,GAAJ,EACI;AACJ,uBAAKP,WAAL,GAAmBS,KAAKC,KAAL,CAAWF,IAAX,CAAnB;AACA,uBAAKG,SAAL;AACH,aALD;AAMH;;;oCACW;AACR,iBAAK,IAAMC,GAAX,IAAkB,KAAKX,WAAvB,EAAoC;AAChC,qBAAKA,WAAL,CAAiBW,GAAjB,EAAsB,KAAKb,aAA3B;AACH;AACD,gBAAIc,WAAW,IAAIvB,GAAGwB,KAAH,CAASC,WAAb,CAAyB,sBAAzB,EAAiD,KAAjD,CAAf;AACAzB,eAAG0B,WAAH,CAAeC,aAAf,CAA6BJ,QAA7B;AACH;AACD;;;;qCACaK,MAAM;AACfA,mBAAQA,OAAOA,IAAf,GAAwBA,OAAO7B,aAAaI,EAA5C,CADe,CACgC;AAC/C,gBAAI,KAAKM,aAAL,KAAuBmB,IAA3B,EAAiC;AAC7B,qBAAKnB,aAAL,GAAqBmB,IAArB;AACA,qBAAKC,YAAL;AACH;AACJ;;;iCACQC,KAAKC,UAAUC,MAAM;AAC1B,iBAAKrB,WAAL,CAAiBmB,GAAjB,IAAwBE,OAAOD,SAASE,IAAT,CAAcD,IAAd,CAAP,GAA6BD,QAArD;AACH;;;mCACUD,KAAK;AACZ,mBAAO,KAAKnB,WAAL,CAAiBmB,GAAjB,CAAP;AACH;;;wCACeR,KAAK;AACjB,gBAAIY,QAAQ,KAAKxB,WAAL,CAAiBY,GAAjB,KAAyB,KAAKZ,WAAL,CAAiBY,GAAjB,CAArC;AACA,mBAAOY,SAASZ,GAAhB;AACH;;;uCArCqB;AAClB,mBAAO,IAAId,eAAJ,EAAP;AACH;;;;EAdwC2B;;kBAAxB3B","file":"lottery_LanguageManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Manager","sourcesContent":["import SingletonBase from \"SingletonBase\";\r\nimport BaseResLoad from \"../Core/ResHandle/lottery_BaseResLoad\";\r\n\r\n/**多语言枚举 */\r\nlet languageEnum = cc.Enum({\r\n    none: 0,\r\n    cn: 1,//中文\r\n    en: 2,//英语\r\n})\r\n\r\nconst languageJSName = [\"cn\", \"enus\"]//多语言文本名字\r\nconst languageStr = \"Config/language/Manage_\"//多语言文本前缀\r\nconst languageNam = [\"中文\", \"英语\"];\r\n/**多语言管理脚本*/\r\nexport default class languageManager extends SingletonBase {\r\n\r\n    curLanguageID = 0\r\n    languageDic = {}\r\n    changeEvent = {}\r\n    LanguageEnum = languageEnum\r\n    languageNam = languageNam\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static _onNewObject() {\r\n        return new languageManager();\r\n    }\r\n\r\n    loadLanguage() {\r\n        let url = languageStr + languageJSName[this.curLanguageID - 1]\r\n        BaseResLoad.getInstance().LoadByKey(languageJSName[this.curLanguageID - 1], url, (err, text) => {\r\n            if (err)\r\n                return;\r\n            this.languageDic = JSON.parse(text)\r\n            this.callEvent();\r\n        })\r\n    }\r\n    callEvent() {\r\n        for (const key in this.changeEvent) {\r\n            this.changeEvent[key](this.curLanguageID);\r\n        }\r\n        let eventCus = new cc.Event.EventCustom(\"InitLanguageCallBack\", false);\r\n        cc.systemEvent.dispatchEvent(eventCus);\r\n    }\r\n    /*----------------------------------对外接口-------------------------------------- */\r\n    InitLanguage(lang) {\r\n        lang ? (lang = lang) : (lang = languageEnum.cn)//如果不传入 则默认改为中文\r\n        if (this.curLanguageID !== lang) {\r\n            this.curLanguageID = lang;\r\n            this.loadLanguage();\r\n        }\r\n    }\r\n    Register(tag, callback, self) {\r\n        this.changeEvent[tag] = self ? callback.bind(self) : callback;\r\n    }\r\n    UnRegister(tag) {\r\n        delete this.changeEvent[tag];\r\n    }\r\n    GetLanguageText(key) {\r\n        let value = this.languageDic[key] && this.languageDic[key]\r\n        return value || key;\r\n    }\r\n}"]}