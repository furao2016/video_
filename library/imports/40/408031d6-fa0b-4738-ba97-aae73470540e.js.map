{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Manager/assets\\Scripts\\Manager\\lottery_NetManager.js"],"names":["httpServer","urlServer","token","NetManager","curServerTimeStamp","changeServerTimerID","serverTimeChangeEvent","httpPostList","openHttpPost","showTipsFunc","hideTipsFunc","focus","self","item","endfunc","splice","length","HttpPostFunc","lottery_HttpUtils","getInstance","httpPost","url","params","data","err","state","errorMessage","thisTime","FreshServerTimeStamp","logintoken","callback","call","bind","fail","showErrorTips","ShowErrorTips","key","element","thistime","Math","floor","delay","lottery_TimeMgr","closeTimer","openTimer","AddServerTime","http","lottery_RunInBackground","RegestRunInBackground","RunInBackground","push","succ","type","ajaxGet","tag","suffix","lottery_BaseUrlLoad","LoadUrl","func","SingletonBase"],"mappings":"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","file":"lottery_NetManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Manager","sourcesContent":["import SingletonBase from 'SingletonBase'\r\nimport lottery_RunInBackground from 'lottery_RunInBackground'\r\n\r\nimport lottery_BaseUrlLoad from 'lottery_BaseUrlLoad'\r\nimport lottery_HttpUtils from 'lottery_HttpUtils'\r\nimport lottery_TimeMgr from 'lottery_TimeMgr'\r\n/*\r\n网络管理脚本\r\n*/\r\nlet httpServer = \"\";\r\nlet urlServer = \"\";\r\nlet token;\r\nexport default class NetManager extends SingletonBase {\r\n    curServerTimeStamp = 0//服务器当前时间戳，本地做自增处理，不定时和服务器对比一次\r\n    changeServerTimerID = 0\r\n    serverTimeChangeEvent = {}//服务器时间更新事件组\r\n    /*\r\n    http请求存储数组\r\n    [0]={url:\"http://192.168.0.0/xxxx/xx/xx....\",params}\r\n    */\r\n    httpPostList = []\r\n    openHttpPost = false\r\n    showTipsFunc = null\r\n    hideTipsFunc = null\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static _onNewObject() {\r\n        return new NetManager()\r\n    }\r\n    /**\r\n     * 切换后台回调函数\r\n     * @param {*} focus true 从后台切回来  false 切到后台\r\n     */\r\n    RunInBackground(focus) {\r\n        if (focus) {//重新回到界面\r\n            // this.HttpPost(\"lobby/validate/getTime\", {}, function () { });   \r\n        }\r\n    }\r\n    HttpPostFunc() {\r\n        var self = this;\r\n        var item = this.httpPostList[0];\r\n        var endfunc = function () {\r\n            self.httpPostList.splice(0, 1);\r\n            self.hideTipsFunc && self.hideTipsFunc()\r\n            if (self.httpPostList.length <= 0) {\r\n                self.openHttpPost = false;\r\n            }\r\n            else {\r\n                self.HttpPostFunc();\r\n            }\r\n        }\r\n        lottery_HttpUtils.getInstance().httpPost(httpServer + item.url, item.params, (function (data) {\r\n            var err = null;\r\n            if (data.state == 1)\r\n                err = data.errorMessage;\r\n            if (data.thisTime)\r\n                self.FreshServerTimeStamp(data.thisTime);\r\n            token = data.token || data.logintoken || token;\r\n            item.callback(err, data);\r\n            endfunc.call(this);\r\n        }).bind(this), (function (fail, url) {\r\n            item.showErrorTips && this.ShowErrorTips()\r\n            item.callback(\"error\", null);\r\n            endfunc.call(this);\r\n        }).bind(this));\r\n    }\r\n    ShowErrorTips() {\r\n        /*\r\n        TODO:弹出网络连接错误的提示框，\r\n        */\r\n    }\r\n    AddServerTime() {\r\n        this.curServerTimeStamp += 1;\r\n        for (const key in this.serverTimeChangeEvent) {\r\n            const element = this.serverTimeChangeEvent[key];\r\n            element(this.curServerTimeStamp);\r\n        }\r\n    }\r\n    /*\r\n    刷新服务器时间戳 毫秒\r\n    */\r\n    FreshServerTimeStamp(thistime) {\r\n        this.curServerTimeStamp = Math.floor(thistime / 1000);\r\n        var delay = thistime % 1000;\r\n        delay = 1 - delay / 1000.0;\r\n        if (this.changeServerTimerID !== 0) {\r\n            lottery_TimeMgr.getInstance().closeTimer(this.changeServerTimerID);\r\n            this.changeServerTimerID = 0;\r\n        }\r\n        this.changeServerTimerID = lottery_TimeMgr.getInstance().openTimer(this.AddServerTime, 1, 0, delay, this);\r\n    }\r\n    /*-----------------------------对外接口---------------------------------------*/\r\n    /**初始化链接数据 */\r\n    InitUrl(http, url) {\r\n        // httpServer = http;\r\n        // urlServer = url;\r\n        lottery_RunInBackground.getInstance().RegestRunInBackground(\"NetManager\", this.RunInBackground, this); //注册网页回调函数\r\n    }\r\n    /*\r\n    和http服务器进行通信\r\n    url 地址,不包含 ip和端口 eg.   http://192.168.0.185:7090/user/login    url = user/login\r\n    params 参数 {键值对}\r\n    callback 回调函数 参数 (err,obj)\r\n    */\r\n    HttpPost(url, params, callback, showErrorTips = false) {\r\n\r\n        if (!params.token || params.token == \"\") {\r\n            // params.token = token;\r\n        } else {\r\n            token = params.token;\r\n        }\r\n\r\n        var item = {\r\n            \"url\": url,\r\n            \"params\": params,\r\n            \"callback\": callback,\r\n            \"showErrorTips\": showErrorTips\r\n        };\r\n        this.httpPostList.push(item);\r\n        this.showTipsFunc && this.showTipsFunc()\r\n        if (!this.openHttpPost) {\r\n            this.openHttpPost = true;\r\n            this.HttpPostFunc();\r\n        }\r\n    }\r\n    AjaxGet(url, succ, fail, type, data) {\r\n        lottery_HttpUtils.getInstance().ajaxGet(url, succ, fail, type, data)\r\n    }\r\n    /**\r\n     * 绑定服务器时间刷新事件\r\n     * @param {*} tag 绑定事件的唯一标识\r\n     * @param {*} callback 回调方法\r\n     * @param {*} self 回调方法作用域\r\n     */\r\n    RegestServerTimeChangeEvent(tag, callback, self) {\r\n        callback = self ? callback.bind(self) : callback;\r\n        this.serverTimeChangeEvent[tag] = callback;\r\n        callback(this.curServerTimeStamp);\r\n    }\r\n    /**\r\n     * 解除绑定\r\n     * @param {*} tag 绑定事件的唯一标识\r\n     */\r\n    UnRegestServerTimeChangeEvent(tag) {\r\n        if (this.serverTimeChangeEvent[tag]) delete this.serverTimeChangeEvent[tag];\r\n    }\r\n    /**\r\n     * 从服务器下载资源\r\n     * @param {*} key 下载资源的唯一key\r\n     * @param {*} url 资源路径\r\n     * @param {*} suffix 资源后缀(类型 eg.    png   txt   jpg etc.)\r\n     * @param {*} callback 回调方法\r\n     */\r\n    LoadUrl(key, url, suffix, callback) {\r\n        lottery_BaseUrlLoad.getInstance().LoadUrl(key, urlServer + url, suffix, callback);\r\n    }\r\n    SetShowWaitPanelFunc(func) { this.showTipsFunc = func }\r\n    SetHideWaitPanelFunc(func) { this.hideTipsFunc = func }\r\n}"]}