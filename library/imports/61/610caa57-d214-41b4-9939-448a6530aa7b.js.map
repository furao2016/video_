{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\LanguageTool/assets\\Scripts\\LanguageTool\\lottery_LanguageRichTextKey.js"],"names":["cc","Class","extends","require","editor","CC_EDITOR","menu","properties","Label","default","type","RichText","tooltip","textCache","visible","onLoad","_super","node","getComponent","SetLanguageID","id","languageID","UpdateText","key","languageManager","GetLanguageText","helper","lottery","Helper","string","lottery_BaseResLoad","getInstance","LoadByKey","Res","ConfigPath","err","text","_key","args","length","index","element","replace"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASC,QAAQ,sBAAR,CADJ;;AAGLC,YAAQC,aAAa;AACjBC,cAAM;AADW,KAHhB;;AAOLC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMV,GAAGW,QAFN;AAGHC,qBAAS;AAHN,SADC;AAMR;AACAC,mBAAW;AACPJ,qBAAS,EADF;AAEPK,qBAAS;AAFF;AAPH,KAPP;;AAoBLC,UApBK,oBAoBI;AACL,aAAKC,MAAL;AACA,YAAI,KAAKR,KAAL,IAAc,IAAlB,EACI,KAAKA,KAAL,GAAa,KAAKS,IAAL,CAAUC,YAAV,CAAuBlB,GAAGW,QAA1B,CAAb;AACP,KAxBI;;;AA0BL;AACAQ,iBA3BK,yBA2BSC,EA3BT,EA2Ba;AACd,YAAI,KAAKC,UAAL,KAAoBD,EAAxB,EACI;AACJ,aAAKC,UAAL,GAAkBD,EAAlB;AACA,YAAI,KAAKC,UAAT,EACI,KAAKC,UAAL;AACP,KAjCI;AAkCLA,cAlCK,wBAkCQ;AAAA;;AACT,YAAIC,MAAM,KAAKC,eAAL,CAAqBC,eAArB,CAAqC,KAAKJ,UAA1C,CAAV;AACA,YAAIK,SAAS1B,GAAG2B,OAAH,CAAWC,MAAxB;AACA,YAAI,KAAKf,SAAL,CAAeU,GAAf,CAAJ,EAAyB;AACrB,iBAAKf,KAAL,CAAWqB,MAAX,GAAoB,KAAKhB,SAAL,CAAeU,GAAf,CAApB;AACA;AACH;AACDO,sCAAoBC,WAApB,GAAkCC,SAAlC,CAA4CT,GAA5C,EAAiDG,OAAOO,GAAP,CAAWC,UAAX,GAAwB,WAAxB,GAAsCX,GAAvF,EAA4F,UAACY,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAC7G,gBAAI,MAAKC,IAAL,IAAa,MAAKA,IAAL,CAAUC,MAAV,GAAmB,CAApC,EAAuC;AACnC,qBAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQ,MAAKF,IAAL,CAAUC,MAAtC,EAA8CC,OAA9C,EAAuD;AACnD,wBAAMC,UAAU,MAAKH,IAAL,CAAUE,KAAV,CAAhB;AACAJ,2BAAOA,KAAKM,OAAL,CAAa,MAAMF,KAAN,GAAc,GAA3B,EAAgCC,OAAhC,CAAP;AACH;AACJ;AACD,kBAAK5B,SAAL,CAAeU,GAAf,IAAsBa,IAAtB;AACA,kBAAK5B,KAAL,CAAWqB,MAAX,GAAoBO,IAApB;AACH,SATD;AAUH;AAnDI,CAAT","file":"lottery_LanguageRichTextKey.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\LanguageTool","sourcesContent":["import lottery_BaseResLoad from 'lottery_BaseResLoad'\r\n\r\n/**\r\n * 多语言RichText key类 从多语言文本获取到的是文本名字 需要从本地加载\r\n */\r\ncc.Class({\r\n    extends: require(\"lottery_LanguageTool\"),\r\n\r\n    editor: CC_EDITOR && {\r\n        menu: 'i18n:language/richtextKey',\r\n    },\r\n\r\n    properties: {\r\n        Label: {\r\n            default: null,\r\n            type: cc.RichText,\r\n            tooltip: \"文本显示组件对象\"\r\n        },\r\n        //文本缓存\r\n        textCache: {\r\n            default: {},\r\n            visible: false\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        this._super();\r\n        if (this.Label == null)\r\n            this.Label = this.node.getComponent(cc.RichText);\r\n    },\r\n\r\n    /**动态设置语言ID 刷新一次文本*/\r\n    SetLanguageID(id) {\r\n        if (this.languageID === id)\r\n            return;\r\n        this.languageID = id;\r\n        if (this.languageID)\r\n            this.UpdateText();\r\n    },\r\n    UpdateText() {\r\n        let key = this.languageManager.GetLanguageText(this.languageID);\r\n        let helper = cc.lottery.Helper;\r\n        if (this.textCache[key]) {\r\n            this.Label.string = this.textCache[key]\r\n            return;\r\n        }\r\n        lottery_BaseResLoad.getInstance().LoadByKey(key, helper.Res.ConfigPath + \"RuleText/\" + key, (err, text, _key) => {\r\n            if (this.args && this.args.length > 0) {\r\n                for (let index = 0; index < this.args.length; index++) {\r\n                    const element = this.args[index];\r\n                    text = text.replace(\"{\" + index + \"}\", element)\r\n                }\r\n            }\r\n            this.textCache[key] = text\r\n            this.Label.string = text;\r\n        })\r\n    }\r\n});\r\n"]}