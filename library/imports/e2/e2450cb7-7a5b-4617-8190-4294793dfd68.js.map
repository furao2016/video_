{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Scripts\\Core\\Tools/assets\\Scripts\\Core\\Tools\\lottery_Utils.js"],"names":["Utils","node","target","component","handler","eventHandler","cc","Component","EventHandler","clickEvents","getComponent","Button","push","slideEvents","Slider","str","num","Number","parseInt","parseFloat","fixNum","flag","toFixed","indexOf","obj","defaultdata","undefined","console","log","isEmpty","i","time","stamp","tostring","includes","replace","Math","floor","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","min","getMinutes","second","getSeconds","arr","split","length","digit","s","newstr","len","mod","startIndex","substr","path","folders","dir","jsb","fileUtils","createDirectory","colorstr","error","Color","WHITE","BLACK","fromHEX","fixed","pow","sprite","spritename","atlasname","atlasDic","atlasEventDic","setSprite","BaseResLoad","getInstance","LoadByKey","err","res","warn","index","element","SpriteAtlas","spriteFrame","getSpriteFrame","one","SingletonBase"],"mappings":"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","file":"lottery_Utils.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\Core\\Tools","sourcesContent":["import SingletonBase from \"../../Singleton/SingletonBase\";\r\nimport BaseResLoad from \"../ResHandle/lottery_BaseResLoad\";\r\n\r\nexport default class Utils extends SingletonBase {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static _onNewObject() {\r\n        let one = new Utils();\r\n        one.atlasDic = [];\r\n        one.atlasEventDic = [];\r\n        return one;\r\n    }\r\n\r\n    addClickEvent(node, target, component, handler) {\r\n        var eventHandler = new cc.Component.EventHandler()\r\n        eventHandler.target = target\r\n        eventHandler.component = component\r\n        eventHandler.handler = handler\r\n\r\n        var clickEvents = node.getComponent(cc.Button).clickEvents\r\n        clickEvents.push(eventHandler)\r\n    }\r\n\r\n    addSlideEvent(node, target, component, handler) {\r\n        var eventHandler = new cc.Component.EventHandler()\r\n        eventHandler.target = target\r\n        eventHandler.component = component\r\n        eventHandler.handler = handler\r\n\r\n        var slideEvents = node.getComponent(cc.Slider).slideEvents\r\n        slideEvents.push(eventHandler)\r\n    }\r\n    /*\r\n    将字符串转换成整数\r\n    */\r\n    getInt(str) {\r\n        if (!str)\r\n            return 0;\r\n        var num = Number.parseInt(str);\r\n        if (!num)\r\n            num = 0;\r\n        return num;\r\n    }\r\n    /*\r\n    将字符串转换成浮点数\r\n    */\r\n    getFloat(str) {\r\n        if (!str)\r\n            return 0;\r\n        var num = Number.parseFloat(str);\r\n        if (!num)\r\n            num = 0;\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * 将一个数四舍五入,flag为true表示当num为整数时，四舍五入后强制需要小数点\r\n     * 例如：当num为100时，如果flag为true，fixNum为3，则返回100.000， 如果flag为false则返回100\r\n     */\r\n    getRoundNum(num, fixNum, flag) {\r\n        num = parseFloat(num + \"\");\r\n        if (flag) {\r\n            return num.toFixed(fixNum);\r\n        }\r\n        let str = num + \"\";\r\n        if (str.indexOf(\".\") == -1) {\r\n            return parseInt(str);\r\n        }\r\n        return num.toFixed(fixNum);\r\n    }\r\n\r\n    /**检测变量是否为null || undefined\r\n    * obj:被检测变量\r\n    * defaultdata：如果为空，返回指定的默认值\r\n    * 返回传入的默认值\r\n    */\r\n    check(obj, defaultdata) {\r\n        if (obj == null || obj == undefined) {\r\n            console.log(\"obj: \" + obj + \" is null:\" + defaultdata)\r\n            return defaultdata\r\n        }\r\n        return obj\r\n    }\r\n\r\n    /**检测对象是否为null\r\n     * obj:被检测对象\r\n     * 返回bool值\r\n     */\r\n    checkBL(obj) {\r\n        if (obj === null || obj === undefined || obj === \"\") {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    checkNumber(obj) {\r\n        if (typeof (obj) === \"number\") {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    checkBoolean(obj) {\r\n        if (typeof (obj) === \"boolean\") {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkString(obj) {\r\n        if (typeof (obj) === \"string\") {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    checkNull(obj) {\r\n        if (obj === null || obj === undefined) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    //  判断对象是否无数据\r\n    checkObjIsEmpty(obj) {\r\n        let isEmpty = true;\r\n\r\n        for (let i in obj) {\r\n            isEmpty = false;\r\n            break;\r\n        }\r\n        return isEmpty;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /*\r\n    将时间格式化  time 时间  单位 秒  stamp 格式 字符串 \"dd-hh-mm-ss\"\r\n    eg  time = 3599 stamp = \"hh-mm-ss\"=> return \"00-59-59\"\r\n    eg  time = 3599 stamp = \"mm-ss\"=> return \"59-59\"\r\n    */\r\n    dateFormatByType(time, stamp) {\r\n        let tostring = function (num) {\r\n            if (num < 10)\r\n                return \"0\" + num;\r\n            else\r\n                return \"\" + num;\r\n        }\r\n        if (stamp.includes(\"dd\")) {\r\n            stamp = stamp.replace(\"dd\", tostring(Math.floor(time / 86400)));\r\n            time = time % 86400;\r\n        }\r\n        if (stamp.includes(\"hh\")) {\r\n            stamp = stamp.replace(\"hh\", tostring(Math.floor(time / 3600)));\r\n            time = time % 3600;\r\n        }\r\n        if (stamp.includes(\"mm\")) {\r\n            stamp = stamp.replace(\"mm\", tostring(Math.floor(time / 60)));\r\n            time = time % 60;\r\n        }\r\n        if (stamp.includes(\"ss\")) {\r\n            stamp = stamp.replace(\"ss\", tostring(time));\r\n        }\r\n        return stamp;\r\n    }\r\n\r\n    /**\r\n     * 获得段日期格式，time为时间戳，stamp为字符串格式\r\n     * MM月dd日hh：mm：ss 返回xx月xx日xx：xx：xx\r\n     */\r\n    getShortTime(time, stamp) {\r\n        let date = new Date(time);\r\n        let str = \"\";\r\n        if (stamp.includes(\"YY\")) {\r\n            let year = date.getFullYear();\r\n            stamp = stamp.replace(\"YY\", year);\r\n        }\r\n        if (stamp.includes(\"MM\")) {\r\n            let month = date.getMonth();\r\n            str = (month + 1 < 10 ? \"0\" : \"\") + (month + 1);\r\n            stamp = stamp.replace(\"MM\", str);\r\n        }\r\n        if (stamp.includes(\"dd\")) {\r\n            let day = date.getDate();\r\n            str = (day < 10 ? \"0\" : \"\") + day;\r\n            stamp = stamp.replace(\"dd\", str);\r\n        }\r\n        if (stamp.includes(\"hh\")) {\r\n            let hour = date.getHours();\r\n            str = (hour < 10 ? \"0\" : \"\") + hour;\r\n            stamp = stamp.replace(\"hh\", str);\r\n        }\r\n        if (stamp.includes(\"mm\")) {\r\n            let min = date.getMinutes();\r\n            str = (min < 10 ? \"0\" : \"\") + min;\r\n            stamp = stamp.replace(\"mm\", str);\r\n        }\r\n        if (stamp.includes(\"ss\")) {\r\n            let second = date.getSeconds();\r\n            str = (second < 10 ? \"0\" : \"\") + second;\r\n            stamp = stamp.replace(\"ss\", str);\r\n        }\r\n        return stamp;\r\n    }\r\n\r\n    /**\r\n     * 获取小数位数\r\n     */\r\n    getDecimalNum(num, flag = \".\") {\r\n        let str = num + \"\";\r\n        let arr = str.split(flag);\r\n        return arr[1] ? arr[1].length : 0;\r\n    }\r\n\r\n    /**\r\n     * 格式化金钱显示, num为金钱数，digit为位数，flag为达到位数后插入的标志\r\n     * 例如：num = 10000, digit = 3, flag = \",\" 返回为10,000\r\n     */\r\n    formatMoneyShow(num, digit = 3, flag = \",\") {\r\n        let s = num + \"\";\r\n        let arr = s.split(\".\");\r\n        let newstr = \"\";\r\n        let len = arr[0].length;\r\n        let mod = len % digit;\r\n        let startIndex = mod ? mod : digit;\r\n        newstr += (mod ? s.substr(0, mod) : s.substr(0, digit)) + (len > digit ? flag : \"\");\r\n        for (let i = startIndex; i < len; i += digit) {\r\n            newstr += s.substr(i, digit) + (i < len - digit ? flag : \"\");\r\n        }\r\n        return newstr + (arr[1] ? (\".\" + arr[1]) : \"\");\r\n    }\r\n\r\n    makeDir(path) {\r\n        var folders = path.split(\"/\")\r\n        if (folders == null) {\r\n            return false\r\n        }\r\n        var dir = \"\"\r\n        for (var i = 0; i < folders.length - 1; i++) {\r\n            dir = dir + folders[i] + \"/\"\r\n            jsb.fileUtils.createDirectory(dir)\r\n        }\r\n        return true\r\n    }\r\n    /*\r\n        根据16进制颜色值字符串 计算RGB颜色值 返回cc.color\r\n    */\r\n    getColorByString(colorstr) {\r\n        if (colorstr.length < 6) {\r\n            cc.error(\"length < 6\");\r\n            return cc.Color.WHITE;\r\n        }\r\n        else {\r\n            return cc.Color.BLACK.fromHEX(colorstr);\r\n        }\r\n    }\r\n    /**\r\n     * 处理number ,保留小数点后指定位数 其余部分直接舍弃，不够位数不补全\r\n     * @param {*} num  需要处理的number\r\n     * @param {*} fixed 保留的位数\r\n     */\r\n    FixedNumber(num, fixed) {\r\n        fixed = Math.pow(10, fixed);\r\n        num = Math.floor(num * fixed) / fixed\r\n        return num\r\n    }\r\n    /**\r\n    * 替换图片\r\n    * @param {*cc.Sprite} sprite cc.sprtie对象\r\n    * @param {*string} spritename 图片名称\r\n    * @param {*string} atlasname 图集名称\r\n    */\r\n    setSprite(sprite, spritename, atlasname) {\r\n        if (atlasname && !this.atlasDic[atlasname]) {\r\n            !this.atlasEventDic[atlasname] && (this.atlasEventDic[atlasname] = [])\r\n            this.atlasEventDic[atlasname].push(() => {\r\n                this.setSprite(sprite, spritename, atlasname)\r\n            })\r\n            BaseResLoad.getInstance().LoadByKey(atlasname, 'Altas/' + atlasname, (err, res) => {\r\n                if (err) {\r\n                    cc.warn(\"图集加载失败：\" + atlasname + \"    \" + err)\r\n                    return;\r\n                }\r\n                this.atlasDic[atlasname] = res\r\n                if (this.atlasEventDic[atlasname]) {\r\n                    for (let index = 0; index < this.atlasEventDic[atlasname].length; index++) {\r\n                        const element = this.atlasEventDic[atlasname][index];\r\n                        element();\r\n                    }\r\n                    delete this.atlasEventDic[atlasname]\r\n                }\r\n            }, cc.SpriteAtlas)\r\n            return;\r\n        }\r\n        sprite.spriteFrame = this.atlasDic[atlasname].getSpriteFrame(spritename)\r\n    }\r\n}"]}