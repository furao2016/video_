{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\LanguageTool/assets\\Scripts\\LanguageTool\\lottery_LanguageRichText.js"],"names":["cc","Class","extends","require","editor","CC_EDITOR","menu","properties","Label","default","type","RichText","tooltip","constStrArr","keyArr","onLoad","_super","node","getComponent","UpdateText","languageManager","lottery","LanguageManager","languageID","length","resultStr","i","constStrs","keys","j","key","str","GetLanguageText","args","index","element","replace","string","setLanguageId","changeLanguage","lang","active","changeLanguageEnum","curLanguageEnum","SetArgs"],"mappings":";;;;;;AAAA;;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASC,QAAQ,sBAAR,CADJ;;AAGLC,YAAQC,aAAa;AACjBC,cAAM;AADW,KAHhB;;AAOLC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMV,GAAGW,QAFN;AAGHC,qBAAS;AAHN,SADC;AAMRC,qBAAa,EANL,EAMQ;AAChBC,gBAAQ,EAPA,CAOG;AAPH,KAPP;;AAiBLC,UAjBK,oBAiBI;AACL,aAAKC,MAAL;AACA,YAAI,KAAKR,KAAL,IAAc,IAAlB,EACI,KAAKA,KAAL,GAAa,KAAKS,IAAL,CAAUC,YAAV,CAAuBlB,GAAGW,QAA1B,CAAb;AACP,KArBI;AAuBLQ,cAvBK,wBAuBQ;AACT,aAAKC,eAAL,KAAyB,KAAKA,eAAL,GAAuBpB,GAAGqB,OAAH,CAAWC,eAA3D;AACA,YAAI,KAAKC,UAAT,EAAqB;AACjB,iBAAKT,MAAL,GAAc,CAAC,CAAC,KAAKS,UAAN,CAAD,CAAd;AACA,iBAAKV,WAAL,GAAmB,CAAC,CAAC,EAAD,CAAD,CAAnB;AACH;AACD,YAAI,CAAC,KAAKA,WAAL,CAAiBW,MAAtB,EAA8B;AAC1B;AACH;AACD,YAAIC,YAAY,EAAhB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKb,WAAL,CAAiBW,MAArC,EAA6CE,GAA7C,EAAkD;AAC9C,gBAAIC,YAAY,KAAKd,WAAL,CAAiBa,CAAjB,CAAhB;AACA,gBAAIE,OAAO,KAAKd,MAAL,CAAYY,CAAZ,KAAkB,EAA7B;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIF,UAAUH,MAA9B,EAAsCK,GAAtC,EAA2C;AACvCJ,6BAAaE,UAAUE,CAAV,CAAb;AACA,oBAAIC,MAAMF,KAAKC,CAAL,KAAW,EAArB;AACA,oBAAI,CAACC,GAAL,EAAU;AACN;AACH;AACD,oBAAIC,MAAM,KAAKX,eAAL,CAAqBY,eAArB,CAAqCF,GAArC,CAAV;AACA,oBAAIG,OAAO,KAAKA,IAAL,CAAUT,MAAV,GAAmB,KAAKS,IAAL,CAAUP,CAAV,EAAaG,CAAb,CAAnB,GAAqC,EAAhD;AACA,qBAAK,IAAIK,QAAQ,CAAjB,EAAoBA,QAAQD,KAAKT,MAAjC,EAAyCU,OAAzC,EAAkD;AAC9C,wBAAMC,UAAUF,KAAKC,KAAL,CAAhB;AACAH,0BAAMA,IAAIK,OAAJ,CAAY,MAAMF,KAAN,GAAc,GAA1B,EAA+BC,OAA/B,CAAN;AACH;AACDV,6BAAaM,GAAb;AACH;AACJ;AACD,aAAKvB,KAAL,CAAW6B,MAAX,GAAoBZ,SAApB;AACH,KApDI;;;AAsDL;;;;AAIAa,iBA1DK,yBA0DSzB,WA1DT,EA0DsBC,MA1DtB,EA0D8B;AAC/B,aAAKD,WAAL,GAAmBA,WAAnB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKK,UAAL;AACH,KA9DI;AAgELoB,kBAhEK,0BAgEUC,IAhEV,EAgEgB;AACjB,YAAI,CAAC,KAAKvB,IAAL,CAAUwB,MAAf,EAAuB;AACnB,iBAAKC,kBAAL,GAA0BF,IAA1B;AACA;AACH;AACD,aAAKG,eAAL,GAAuB,KAAKD,kBAA5B;AACA,aAAKvB,UAAL;AACH,KAvEI;;;AAyEL;;;AAGAyB,WA5EK,mBA4EGX,IA5EH,EA4ES;AACV,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKd,UAAL;AACH;AA/EI,CAAT","file":"lottery_LanguageRichText.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\LanguageTool","sourcesContent":["/**\r\n * 多语言RichText类\r\n */\r\ncc.Class({\r\n    extends: require(\"lottery_LanguageTool\"),\r\n\r\n    editor: CC_EDITOR && {\r\n        menu: 'i18n:language/richtext',\r\n    },\r\n\r\n    properties: {\r\n        Label: {\r\n            default: null,\r\n            type: cc.RichText,\r\n            tooltip: \"文本显示组件对象\"\r\n        },\r\n        constStrArr: [],//固定字符串数组\r\n        keyArr: [],//key值列表\r\n    },\r\n\r\n    onLoad() {\r\n        this._super();\r\n        if (this.Label == null)\r\n            this.Label = this.node.getComponent(cc.RichText);\r\n    },\r\n\r\n    UpdateText() {\r\n        this.languageManager || (this.languageManager = cc.lottery.LanguageManager);\r\n        if (this.languageID) {\r\n            this.keyArr = [[this.languageID]];\r\n            this.constStrArr = [[\"\"]];\r\n        }\r\n        if (!this.constStrArr.length) {\r\n            return;\r\n        }\r\n        let resultStr = \"\";\r\n        for (let i = 0; i < this.constStrArr.length; i++) {\r\n            let constStrs = this.constStrArr[i];\r\n            let keys = this.keyArr[i] || [];\r\n            for (let j = 0; j < constStrs.length; j++) {\r\n                resultStr += constStrs[j];\r\n                let key = keys[j] || \"\";\r\n                if (!key) {\r\n                    continue;\r\n                }\r\n                let str = this.languageManager.GetLanguageText(key);\r\n                let args = this.args.length ? this.args[i][j] : [];\r\n                for (let index = 0; index < args.length; index++) {\r\n                    const element = args[index];\r\n                    str = str.replace(\"{\" + index + \"}\", element)\r\n                }\r\n                resultStr += str;\r\n            }\r\n        }\r\n        this.Label.string = resultStr;\r\n    },\r\n\r\n    /**\r\n     * constStrArr为固定字符串数组，类型为二维数组\r\n     * keyArr为key值列表，类型为二维数组\r\n     */\r\n    setLanguageId(constStrArr, keyArr) {\r\n        this.constStrArr = constStrArr;\r\n        this.keyArr = keyArr;\r\n        this.UpdateText();\r\n    },\r\n\r\n    changeLanguage(lang) {\r\n        if (!this.node.active) {\r\n            this.changeLanguageEnum = lang\r\n            return;\r\n        }\r\n        this.curLanguageEnum = this.changeLanguageEnum;\r\n        this.UpdateText();\r\n    },\r\n\r\n    /**\r\n     * args需要替换的特殊字符,为三维数组\r\n     */\r\n    SetArgs(args) {\r\n        this.args = args;\r\n        this.UpdateText();\r\n    },\r\n});\r\n"]}